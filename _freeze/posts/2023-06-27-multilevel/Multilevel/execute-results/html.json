{
  "hash": "a70c96ebe567e5c05c8d917fd9cb95e8",
  "result": {
    "markdown": "---\ntitle: \"Introductie op multilevel analyse in R met lme4 en tidyverse\"\ndescription: |\n    Dit is een blog die Raffaele Vacca schreef over multilevel analyse in R. Hij combineert de pakketten `lme4' en `tidyverse` en laat je zien hoe je dat doet. Deze blog vond ik interessant en heb ik daarom wat bewerkt.\nauthor: \"Raffaela Vacca, bewerking Harrie Jonkman\"\ndate: \"2023-07-03\"\ncategories: [analyse]\n#bibliography: Multilevel_with_R.bib\nimage: \"Screenshot1.PNG\"\n---\n\n\n\n# Introductie\nIk had al een tijdje geen multilevel-analyses meer gedaan en wilde dat weer eens doen met aangepaste technieken. Ben zelf 'opgeleid' met het prachtige werk van de multilevelgroep uit Bristol (Goldstein, Rabash, Brown e.a.) en ook dat van Joop Hox, die ik op dit gebied van dichtbij heb meegemaakt. Toen ik wat rondkeek, kwam ik de blog van Rafaella Vacca tegen, die ik inzichtelijk en vernieuwend vond. Hij werkt met het pakket `lme4` en `tidyverse`. Hieronder vind je mijn bewerkte versie. Dank je wel Rafaella.\n\n<br>\n\n* Dit is een introductie op multilevel analyse met R voor de seminars die Raffaele Vacca eerder gaf op de [UniMi NASP graduate school](https://www.nasp.eu/training/phd-programmes/esls.html) en [Behave Lab](https://behavelab.org/). \n* **Hier staat het oorspronkelijke materiaal** dat je [hier](https://github.com/raffaelevacca/Intro-multilevel-with-R) (GitHub) kunt downloaden. \n\n**R pakketten en literatuur**:\n\n* Deze tutorial richt zich op (1) het [`lme4`](https://github.com/lme4/lme4) pakket voor (Restricted) Maximum Likelihood Estimation van lineaire multilevel modellen [@bates_fitting_2015; @bates_lme4:_2012] en (2) integreren van `lme4` met  [`tidyverse`](https://www.tidyverse.org/), een verzameling van R pakketten voor data wetenschap (waaronder `dplyr`, `ggplot2`, en `purrr`) met een gezamenlijke taal en een set van principles [@wickham_r_2017]. \n* Het is gebaseerd op de discussie '(linear) multilevel modeling' van @fox_fitting_2018 en @fox_linear_2016. Het voorbeeld dat hier gebruikt wordt komt oorspronkelijk van @raudenbush_hierarchical_2002. Een deel van de code is ook geïnsprieerd door Wickham and Grolemund's [-@wickham_r_2017] behandeling van statististisch modeleren met R (vooral Hfd. 20). \n* De data komen van\n[`MathAchieve`](https://rdrr.io/cran/nlme/man/MathAchieve.html) en [`MathAchSchool`](https://rdrr.io/cran/nlme/man/MathAchSchool.html) data-frames in het [`nlme`](https://cran.r-project.org/web/packages/nlme/index.html) pakket. Daar komen ze weer via het \"High School and Beyond\" onderzoek met 7185 studenten in 160 V.S. middelbare scholen, inclusief 70 Katholieke en 90 Openbare scholen [@fox_linear_2016; @raudenbush_hierarchical_2002]. Kijk naar de links en referenties hierboven als je meer documentatie zoekt voor deze data. \n\n**Nog wat litertuur en bronnen**: \n\n* Voor statistische theorie, details over schattingmethodes en meer gedetailleerd behandeling van multilevel modelellen die in deze introductie worden behandeld (in chronologische volgorde): @raudenbush_hierarchical_2002; @gelman_data_2006; @rasbash_lemma:_2008; @goldstein_multilevel_2010; @snijders_multilevel_2012; @simonoff_sage_2013; @fox_applied_2016 (Ch. 23-24).\n* Voor meer informatie over de R-implementatie van multilevel modellen, inclusief verschillende pakketten en schattingsmethodes: @finch_multilevel_2014; @fox_fitting_2018;  [Ben Bolker](https://math.mcmaster.ca/~bolker/)'s [FAQ page](http://bbolker.github.io/mixedmodels-misc/glmmFAQ.html#introduction) over 'Generalized Linear Mixed Models'.\n\n## Set-up instructies\n\nVoor deze workshop is het nodig dat je:\n\n1. Dat je de laatste versie binnenhaalt van **R** [hier](https://cran.r-project.org/mirrors.html) (selecteer een locatie bij je in de buurt).\n    * Volg de instructies om R op jouw computer te installeren.\n2. Download **RStudio** (vrije versie) [hier](https://www.rstudio.com/products/rstudio/download/).\n    * Volg de instructies om RStudio op jouw computer te installeren.\n3. Installeer de **R pakkettem** genoemd [onder](#packages).\n    * Open RStudio en ga naar`Top menu > Tools > Install packages...`.\n    * Installeer elk pakket van de lijst.\n4. Breng de **laptop** mee naar de workshop.\n5. Download de **workshop project folder** [hier](https://github.com/raffaelevacca/Intro-multilevel-with-R)\n    * Klik op de link > Klik op de groene `Clone` knop > Download ZIP > Dan 'unzip' de folder op jouw computer.\n    * Ik zou dat de in de klas doen aan het begin van de workshop zodat je de laatste versie van folder download.\n\nEen keer in de klas, ga naar de workshop project folder en dubbelklik op de workshop R project file (`Multilevel_with_R.Rproj`). Dit zal RStudio openen.\n\n## Vereiste R pakketten {#packages}\n\n* Algemeen:\n    - [`broom`](https://broom.tidymodels.org/) om de model resultaten als tidy tibbles te zien.    \n    - [`magrittr`](https://magrittr.tidyverse.org/) voor 'pipe' en gerelateerde handelingen.   \n    - [`tidyverse`](https://www.tidyverse.org/).  \n* Om multilevel modellen te draaien en de resultaten te zien:    \n    - [`broom.mixed`](https://cran.r-project.org/web/packages/broom.mixed/vignettes/broom_mixed_intro.html).   \n    - [`car`](https://cran.r-project.org/web/packages/car/index.html) voor testen van significantie.    \n    - [`ggeffects`](https://strengejacke.github.io/ggeffects/) om de geschatte waarden ('predicted values') te berekenen en te visualiseren.   \n    - [`lme4`](https://github.com/lme4/lme4) voor specificeren en schatten van multilevel modellen.   \n    - [`lmerTest`](https://www.jstatsoft.org/article/view/v082i13) voor testen van significatie van multilevel modellen.    \n\n# Exploreren en voorbereiden van data \n\n* Importeren en bekijken van de data in R.\n* Verkrijgen van basis informatie over de multilevel structuur van de data.\n* Onze afhankelijke variabele is de student's score op wiskunde toets ('math assessment' (`mathach`).\n* Onafhankelijke variabelen:\n  * Student karakteristieken: score op sociaal-economische status (SES), in afwijking van het school SES gemiddelde (`ses.dev`).\n  * School karakteristieken: gemiddelde van de school-SES (`mean.ses`) en de school type/sector (Public vs Catholic, `sector`).\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data laden\nload(\"multilevel_data.rda\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Bekijke de data\nstud_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7,185 × 5\n   school minority sex       ses mathach\n   <chr>  <fct>    <fct>   <dbl>   <dbl>\n 1 1224   No       Female -1.53    5.88 \n 2 1224   No       Female -0.588  19.7  \n 3 1224   No       Male   -0.528  20.3  \n 4 1224   No       Male   -0.668   8.78 \n 5 1224   No       Male   -0.158  17.9  \n 6 1224   No       Male    0.022   4.58 \n 7 1224   No       Female -0.618  -2.83 \n 8 1224   No       Male   -0.998   0.523\n 9 1224   No       Female -0.888   1.53 \n10 1224   No       Male   -0.458  21.5  \n# … with 7,175 more rows\n```\n:::\n\n```{.r .cell-code}\nschool_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 160 × 2\n   school sector  \n * <chr>  <fct>   \n 1 1224   Public  \n 2 1288   Public  \n 3 1296   Public  \n 4 1308   Catholic\n 5 1317   Catholic\n 6 1358   Public  \n 7 1374   Public  \n 8 1433   Catholic\n 9 1436   Catholic\n10 1461   Public  \n# … with 150 more rows\n```\n:::\n:::\n\n\n# Hoeveel scholen zitten erin?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstud_data %>%\n  pull(school) %>%\n  n_distinct\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 160\n```\n:::\n:::\n\n\n# Hoeveel studenten zitten er op iedere school (school-omvang)?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstud_data %>%\n  count(school)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 160 × 2\n   school     n\n   <chr>  <int>\n 1 1224      47\n 2 1288      25\n 3 1296      48\n 4 1308      20\n 5 1317      48\n 6 1358      30\n 7 1374      28\n 8 1433      35\n 9 1436      44\n10 1461      33\n# … with 150 more rows\n```\n:::\n:::\n\n\n# Sorteer het op school-omvang\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstud_data %>%\n  count(school, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 160 × 2\n   school     n\n   <chr>  <int>\n 1 2305      67\n 2 5619      66\n 3 4292      65\n 4 3610      64\n 5 4042      64\n 6 8857      64\n 7 4530      63\n 8 1477      62\n 9 2277      61\n10 4642      61\n# … with 150 more rows\n```\n:::\n:::\n\n\n# Wat is de gemiddelde school-omvang?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstud_data %>%\n  count(school) %>%\n  summarise(mean(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  `mean(n)`\n      <dbl>\n1      44.9\n```\n:::\n:::\n\n\n# Bereken het gemiddelde student-SES op elke school\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstud_data %<>%                      # Gebruik marittr %<>% operator: pipe + bereken\n  group_by(school) %>%              # Groepeer data frame per school voor mutate \n  mutate(mean.ses= mean(ses)) %>%   # Creeer mean(ses) per school\n  ungroup                           # Ungroup data frame\n\nstud_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7,185 × 6\n   school minority sex       ses mathach mean.ses\n   <chr>  <fct>    <fct>   <dbl>   <dbl>    <dbl>\n 1 1224   No       Female -1.53    5.88    -0.434\n 2 1224   No       Female -0.588  19.7     -0.434\n 3 1224   No       Male   -0.528  20.3     -0.434\n 4 1224   No       Male   -0.668   8.78    -0.434\n 5 1224   No       Male   -0.158  17.9     -0.434\n 6 1224   No       Male    0.022   4.58    -0.434\n 7 1224   No       Female -0.618  -2.83    -0.434\n 8 1224   No       Male   -0.998   0.523   -0.434\n 9 1224   No       Female -0.888   1.53    -0.434\n10 1224   No       Male   -0.458  21.5     -0.434\n# … with 7,175 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creeer student's SES afwijking van school gemiddelde\n(stud_data %<>% \n    mutate(ses.dev = ses - mean.ses))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7,185 × 7\n   school minority sex       ses mathach mean.ses ses.dev\n   <chr>  <fct>    <fct>   <dbl>   <dbl>    <dbl>   <dbl>\n 1 1224   No       Female -1.53    5.88    -0.434 -1.09  \n 2 1224   No       Female -0.588  19.7     -0.434 -0.154 \n 3 1224   No       Male   -0.528  20.3     -0.434 -0.0936\n 4 1224   No       Male   -0.668   8.78    -0.434 -0.234 \n 5 1224   No       Male   -0.158  17.9     -0.434  0.276 \n 6 1224   No       Male    0.022   4.58    -0.434  0.456 \n 7 1224   No       Female -0.618  -2.83    -0.434 -0.184 \n 8 1224   No       Male   -0.998   0.523   -0.434 -0.564 \n 9 1224   No       Female -0.888   1.53    -0.434 -0.454 \n10 1224   No       Male   -0.458  21.5     -0.434 -0.0236\n# … with 7,175 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Combineer met meer school-niveau variabelen (sector)\ndf <- left_join(stud_data, school_data, by=\"school\")\n\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7,185 × 8\n   school minority sex       ses mathach mean.ses ses.dev sector\n   <chr>  <fct>    <fct>   <dbl>   <dbl>    <dbl>   <dbl> <fct> \n 1 1224   No       Female -1.53    5.88    -0.434 -1.09   Public\n 2 1224   No       Female -0.588  19.7     -0.434 -0.154  Public\n 3 1224   No       Male   -0.528  20.3     -0.434 -0.0936 Public\n 4 1224   No       Male   -0.668   8.78    -0.434 -0.234  Public\n 5 1224   No       Male   -0.158  17.9     -0.434  0.276  Public\n 6 1224   No       Male    0.022   4.58    -0.434  0.456  Public\n 7 1224   No       Female -0.618  -2.83    -0.434 -0.184  Public\n 8 1224   No       Male   -0.998   0.523   -0.434 -0.564  Public\n 9 1224   No       Female -0.888   1.53    -0.434 -0.454  Public\n10 1224   No       Male   -0.458  21.5     -0.434 -0.0236 Public\n# … with 7,175 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Variabele (school ID) moet een factor worden (zeg, categoricale variabele)\ndf %<>% \n  mutate(school = factor(school))\n\n# Frequenties van school sector: \n# N scholen\nschool_data %>%\n  count(sector)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  sector       n\n  <fct>    <int>\n1 Public      90\n2 Catholic    70\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# N studenten\ndf %>%\n  count(sector)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  sector       n\n  <fct>    <int>\n1 Public    3642\n2 Catholic  3543\n```\n:::\n:::\n\nDus zo konden we antwoorden vinden op vragen als:\n* _Hoeveel studenten en scholen zitten er in de data?_\n* _Wat is gemiddelde aantal studenten per school?_\n* _Hoeveel zijn er Katholiek, hoeveel openbaar?_\n\n# Analyses per school: scatter-plots\nNu we een algemeen beeld hebben, gaan we vervolgens kijken wat we over individuele schooen kunnen zeggen. Wat je moet doen:\n* Maak een kleine dataset van een random sample van 20 Katholieke scholen en 20 Openbare scholen.\n* Maak een scatter-plot van de student wiskunde score per student_SES in elke school, voor de subsample Katholieke en Openbare scholen.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sample 20 random IDs van katholieke scholen\nset.seed(1129)\nschool.IDs <- school_data %>%\n  filter(sector==\"Catholic\") %>%\n  sample_n(20) %>% \n  pull(school)\n\nschool.IDs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"5667\" \"4223\" \"9198\" \"4253\" \"5650\" \"8150\" \"5761\" \"2658\" \"3838\" \"8193\"\n[11] \"4292\" \"7364\" \"3992\" \"5404\" \"5192\" \"1462\" \"4042\" \"3020\" \"7172\" \"1477\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter data op juist deze school IDs\n(df.cat <- df %>%\n    filter(school %in% school.IDs))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,011 × 8\n   school minority sex      ses mathach mean.ses ses.dev sector  \n   <fct>  <fct>    <fct>  <dbl>   <dbl>    <dbl>   <dbl> <fct>   \n 1 1462   Yes      Male   0.162    1.97   -0.669  0.831  Catholic\n 2 1462   Yes      Male  -0.758    7.72   -0.669 -0.0886 Catholic\n 3 1462   Yes      Male  -0.708   19.0    -0.669 -0.0386 Catholic\n 4 1462   Yes      Male  -0.818   20.1    -0.669 -0.149  Catholic\n 5 1462   Yes      Male  -1.92    22.3    -0.669 -1.25   Catholic\n 6 1462   Yes      Male  -0.948   14.3    -0.669 -0.279  Catholic\n 7 1462   Yes      Male  -0.798   10.2    -0.669 -0.129  Catholic\n 8 1462   Yes      Male  -1.46     9.61   -0.669 -0.789  Catholic\n 9 1462   Yes      Male  -0.158    6.12   -0.669  0.511  Catholic\n10 1462   Yes      Male  -0.378   23.8    -0.669  0.291  Catholic\n# … with 1,001 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# We kunnen alles in een enkele pipe zetten om een korere code te hebben\nset.seed(1129)\ndf.cat <- school_data %>%\n  filter(sector==\"Catholic\") %>%\n  sample_n(20) %>% \n  pull(school) %>%\n  {filter(df, school %in% .)} # Let op {} haakjes zodat \".\" niet als eerste argument in de filter() wordt gebruikt\n\n# Doe hetzelfde voor de Openbare scholen\nset.seed(1129)\ndf.pub <- school_data %>%\n  filter(sector==\"Public\") %>%\n  sample_n(20) %>% \n  pull(school) %>%\n  {filter(df, school %in% .)}\n\n# Plot SES vs wisk score in elk van 20 Katholieke scholen\n# Data en variabelen\np <- ggplot(df.cat, aes(x=ses.dev, y=mathach)) + \n  # Scatterplot geom\n  geom_point(shape=1) + \n  # voeg een lineaire regressioe lijn toe\n  geom_smooth(method=\"lm\", color= \"red\", se=FALSE) + \n  # Facet per school\n  facet_wrap(~ school, nrow=4, ncol=5) + \n  # Zwart/wit thema\n  theme_bw() \n\n# Bekijk de plot\np\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Multilevel_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Zelfde als hierboven maar nu voor Openbare scholen\nggplot(df.pub, aes(x=ses.dev, y=mathach)) + \n  # Scatterplot geom\n  geom_point(shape=1) + \n  # rode lineaire regressie lijn\n  geom_smooth(method=\"lm\", color= \"red\", se=FALSE) + \n  # Facet per school\n  facet_wrap(~ school, nrow=4, ncol=5) + \n  # Zwart/wit thema\n  theme_bw()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Multilevel_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n* _Wat valt je op over intercept en slope als je naar de plaatjes kijkt? Zijn ze constant over de scholen? _\n* _Wat van soort relatie zie je in het algemeen tussen students-SES en z'n wiskundescore in de scholen? Verandert deze relatie tussen scholen?_\n* _Is er verschil in variatie tussen de regressielijnen van de katholieke en openbare scholen?_\n\n# Aparte analyses per school: lineaire regressies\nNu gaan we aparte analyses per school maken. Wat je moet doen:\n* Maak een genest dataframe op schoolniveau (`nested.df`) met een rij van elke school inclusief het dataframe voor de leerlingen van die school.    \n* Gebruik `nested.df` en `purrr::map` om een afzonderlijk lineaire regressiemodel te schatten van wiskundeprestaties op SES in elke school.   \n* Zet de schattingsresultaten in nieuwe kolommen in het geneste dataframe.   \n* Visualiseer de schattingsresultaten:   \n   - Verdeling van schattingen van intercept en helling per schoolsector (boxplots).     \n   - Verdeling van schattingen van intercept en helling per schoolgemiddelde SES, per schoolsector (scatterplots).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Schat een lineair model voor mathach zoals voorspeld door ses.dev, apart\n# voor elk van de 160 scholen.\n\n# Allereerst, nest het studenten dataframe per school\nnested.df <- df %>% \n  group_by(school) %>%\n  nest()\n\n# Dit creeert een school-niveau dataframe (data rij = school), met in  \n# schoolrij een student niveau dataframe voor die school.\nnested.df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 160 × 2\n# Groups:   school [160]\n   school data             \n   <fct>  <list>           \n 1 1224   <tibble [47 × 7]>\n 2 1288   <tibble [25 × 7]>\n 3 1296   <tibble [48 × 7]>\n 4 1308   <tibble [20 × 7]>\n 5 1317   <tibble [48 × 7]>\n 6 1358   <tibble [30 × 7]>\n 7 1374   <tibble [28 × 7]>\n 8 1433   <tibble [35 × 7]>\n 9 1436   <tibble [44 × 7]>\n10 1461   <tibble [33 × 7]>\n# … with 150 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Wat zeggen van de rijen en kolommen, wat indiceren ze in elk school dataframe?\n# (b.v. [47 x 7])\n\n# De nested.df$data is een list van dataframes, een voor elke school\nclass(nested.df$data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"list\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(nested.df$data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 160\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Bv, kijk eens naar de data van school 1224:\n\n## Nog steeds genest\nnested.df %>%\n  filter(school==\"1224\") %>%\n  dplyr::select(school, data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n# Groups:   school [1]\n  school data             \n  <fct>  <list>           \n1 1224   <tibble [47 × 7]>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Niet genest\nnested.df %>%\n  filter(school==\"1224\") %>%\n  dplyr::select(school, data) %>%\n  unnest(cols = c(data))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 47 × 8\n# Groups:   school [1]\n   school minority sex       ses mathach mean.ses ses.dev sector\n   <fct>  <fct>    <fct>   <dbl>   <dbl>    <dbl>   <dbl> <fct> \n 1 1224   No       Female -1.53    5.88    -0.434 -1.09   Public\n 2 1224   No       Female -0.588  19.7     -0.434 -0.154  Public\n 3 1224   No       Male   -0.528  20.3     -0.434 -0.0936 Public\n 4 1224   No       Male   -0.668   8.78    -0.434 -0.234  Public\n 5 1224   No       Male   -0.158  17.9     -0.434  0.276  Public\n 6 1224   No       Male    0.022   4.58    -0.434  0.456  Public\n 7 1224   No       Female -0.618  -2.83    -0.434 -0.184  Public\n 8 1224   No       Male   -0.998   0.523   -0.434 -0.564  Public\n 9 1224   No       Female -0.888   1.53    -0.434 -0.454  Public\n10 1224   No       Male   -0.458  21.5     -0.434 -0.0236 Public\n# … with 37 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Of kijk naar het eerste element van nested.df$data\nnested.df$data[[1]]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 47 × 7\n   minority sex       ses mathach mean.ses ses.dev sector\n   <fct>    <fct>   <dbl>   <dbl>    <dbl>   <dbl> <fct> \n 1 No       Female -1.53    5.88    -0.434 -1.09   Public\n 2 No       Female -0.588  19.7     -0.434 -0.154  Public\n 3 No       Male   -0.528  20.3     -0.434 -0.0936 Public\n 4 No       Male   -0.668   8.78    -0.434 -0.234  Public\n 5 No       Male   -0.158  17.9     -0.434  0.276  Public\n 6 No       Male    0.022   4.58    -0.434  0.456  Public\n 7 No       Female -0.618  -2.83    -0.434 -0.184  Public\n 8 No       Male   -0.998   0.523   -0.434 -0.564  Public\n 9 No       Female -0.888   1.53    -0.434 -0.454  Public\n10 No       Male   -0.458  21.5     -0.434 -0.0236 Public\n# … with 37 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Dat kan ook met tidyverse syntax\nnested.df %>%\n  pull(data) %>%\n  extract2(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 47 × 7\n   minority sex       ses mathach mean.ses ses.dev sector\n   <fct>    <fct>   <dbl>   <dbl>    <dbl>   <dbl> <fct> \n 1 No       Female -1.53    5.88    -0.434 -1.09   Public\n 2 No       Female -0.588  19.7     -0.434 -0.154  Public\n 3 No       Male   -0.528  20.3     -0.434 -0.0936 Public\n 4 No       Male   -0.668   8.78    -0.434 -0.234  Public\n 5 No       Male   -0.158  17.9     -0.434  0.276  Public\n 6 No       Male    0.022   4.58    -0.434  0.456  Public\n 7 No       Female -0.618  -2.83    -0.434 -0.184  Public\n 8 No       Male   -0.998   0.523   -0.434 -0.564  Public\n 9 No       Female -0.888   1.53    -0.434 -0.454  Public\n10 No       Male   -0.458  21.5     -0.434 -0.0236 Public\n# … with 37 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# In plaats van het geneste dataframe te gebruiken, kunnen we nu een aparte linaire regressiemodel fitten in elk\n# dataframe van een school (elk element van nested.df$data)\nlmodels <- nested.df %>%\n  # Krijg alle school dataframes\n  pull(data) %>%\n  # Run lm() voor elk via map\n  purrr::map(~ lm(mathach ~ ses.dev, data= .x))\n\n# Let op voor de formule notatie in purrr::map(), waar elke .x een element indiceert van \n# nested.df$data.\n\n# lmodels is nu een list van gedraaide lineaire modellen, een voor elke school\nhead(lmodels)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n\nCall:\nlm(formula = mathach ~ ses.dev, data = .x)\n\nCoefficients:\n(Intercept)      ses.dev  \n      9.715        2.509  \n\n\n[[2]]\n\nCall:\nlm(formula = mathach ~ ses.dev, data = .x)\n\nCoefficients:\n(Intercept)      ses.dev  \n     13.511        3.255  \n\n\n[[3]]\n\nCall:\nlm(formula = mathach ~ ses.dev, data = .x)\n\nCoefficients:\n(Intercept)      ses.dev  \n      7.636        1.076  \n\n\n[[4]]\n\nCall:\nlm(formula = mathach ~ ses.dev, data = .x)\n\nCoefficients:\n(Intercept)      ses.dev  \n     16.256        0.126  \n\n\n[[5]]\n\nCall:\nlm(formula = mathach ~ ses.dev, data = .x)\n\nCoefficients:\n(Intercept)      ses.dev  \n     13.178        1.274  \n\n\n[[6]]\n\nCall:\nlm(formula = mathach ~ ses.dev, data = .x)\n\nCoefficients:\n(Intercept)      ses.dev  \n     11.206        5.068  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(lmodels)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"list\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(lmodels)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 160\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# In plaats van deze list als een apart object, kunnen we nu een nieuwe\n# kolom maken in nested.df, elk model in een schoolrij van nested.df.\nnested.df %<>%\n  mutate(model = purrr::map(data, \n                            ~ lm(mathach ~ ses.dev, data= .x)))\n\n# Resultaat\nnested.df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 160 × 3\n# Groups:   school [160]\n   school data              model \n   <fct>  <list>            <list>\n 1 1224   <tibble [47 × 7]> <lm>  \n 2 1288   <tibble [25 × 7]> <lm>  \n 3 1296   <tibble [48 × 7]> <lm>  \n 4 1308   <tibble [20 × 7]> <lm>  \n 5 1317   <tibble [48 × 7]> <lm>  \n 6 1358   <tibble [30 × 7]> <lm>  \n 7 1374   <tibble [28 × 7]> <lm>  \n 8 1433   <tibble [35 × 7]> <lm>  \n 9 1436   <tibble [44 × 7]> <lm>  \n10 1461   <tibble [33 × 7]> <lm>  \n# … with 150 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# De derde kolom van nested.df ($model) omvat het gedraaide lineaire model  \n# voor elke school (elke row).\n\n# B.v., model voor school 1224\nnested.df %>%\n  filter(school==\"1224\") %>%\n  pull(model) %>%\n  extract2(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = mathach ~ ses.dev, data = .x)\n\nCoefficients:\n(Intercept)      ses.dev  \n      9.715        2.509  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Krijg het intercept en slope voor model van school 1224\nnested.df %>%\n  filter(school==\"1224\") %>%\n  pull(model) %>%\n  # Dit is nodig om het lm object te krijgen uit het listobject\n  extract2(1) %>%\n  coef\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept)     ses.dev \n   9.715447    2.508582 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Of, voor een tidy output\nnested.df %>%\n  filter(school==\"1224\") %>%\n  pull(model) %>%\n  extract2(1) %>%\n  broom::tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)     9.72      1.10      8.87 1.94e-11\n2 ses.dev         2.51      1.77      1.42 1.62e- 1\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Laten we nu dezelfde code gebruiken via 'mutate' om opgeschoonde resultaten voor alle\n# modellen (alle scholen) te krijgen\nnested.df %<>%\n  mutate(model.results = purrr::map(model, \n                            broom::tidy)\n  )\nnested.df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 160 × 4\n# Groups:   school [160]\n   school data              model  model.results   \n   <fct>  <list>            <list> <list>          \n 1 1224   <tibble [47 × 7]> <lm>   <tibble [2 × 5]>\n 2 1288   <tibble [25 × 7]> <lm>   <tibble [2 × 5]>\n 3 1296   <tibble [48 × 7]> <lm>   <tibble [2 × 5]>\n 4 1308   <tibble [20 × 7]> <lm>   <tibble [2 × 5]>\n 5 1317   <tibble [48 × 7]> <lm>   <tibble [2 × 5]>\n 6 1358   <tibble [30 × 7]> <lm>   <tibble [2 × 5]>\n 7 1374   <tibble [28 × 7]> <lm>   <tibble [2 × 5]>\n 8 1433   <tibble [35 × 7]> <lm>   <tibble [2 × 5]>\n 9 1436   <tibble [44 × 7]> <lm>   <tibble [2 × 5]>\n10 1461   <tibble [33 × 7]> <lm>   <tibble [2 × 5]>\n# … with 150 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Unnest on de resultaten te zien\nnested.df %>%\n  unnest(model.results)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 320 × 8\n# Groups:   school [160]\n   school data              model  term        estimate std.e…¹ stati…²  p.value\n   <fct>  <list>            <list> <chr>          <dbl>   <dbl>   <dbl>    <dbl>\n 1 1224   <tibble [47 × 7]> <lm>   (Intercept)    9.72    1.10   8.87   1.94e-11\n 2 1224   <tibble [47 × 7]> <lm>   ses.dev        2.51    1.77   1.42   1.62e- 1\n 3 1288   <tibble [25 × 7]> <lm>   (Intercept)   13.5     1.36   9.91   9.12e-10\n 4 1288   <tibble [25 × 7]> <lm>   ses.dev        3.26    2.08   1.57   1.31e- 1\n 5 1296   <tibble [48 × 7]> <lm>   (Intercept)    7.64    0.774  9.86   6.27e-13\n 6 1296   <tibble [48 × 7]> <lm>   ses.dev        1.08    1.21   0.890  3.78e- 1\n 7 1308   <tibble [20 × 7]> <lm>   (Intercept)   16.3     1.40  11.6    9.02e-10\n 8 1308   <tibble [20 × 7]> <lm>   ses.dev        0.126   3.00   0.0420 9.67e- 1\n 9 1317   <tibble [48 × 7]> <lm>   (Intercept)   13.2     0.790 16.7    3.97e-21\n10 1317   <tibble [48 × 7]> <lm>   ses.dev        1.27    1.44   0.887  3.80e- 1\n# … with 310 more rows, and abbreviated variable names ¹​std.error, ²​statistic\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Laten we het deel houden waarin we geinteresseerd zijn\nlm.coeff <- nested.df %>%\n  unnest(model.results) %>%\n  dplyr::select(school, term, estimate)\n\nlm.coeff\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 320 × 3\n# Groups:   school [160]\n   school term        estimate\n   <fct>  <chr>          <dbl>\n 1 1224   (Intercept)    9.72 \n 2 1224   ses.dev        2.51 \n 3 1288   (Intercept)   13.5  \n 4 1288   ses.dev        3.26 \n 5 1296   (Intercept)    7.64 \n 6 1296   ses.dev        1.08 \n 7 1308   (Intercept)   16.3  \n 8 1308   ses.dev        0.126\n 9 1317   (Intercept)   13.2  \n10 1317   ses.dev        1.27 \n# … with 310 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reshape en geef het een andere naam \nlm.coeff %<>%\n  # Model intercept en slope in twee kolommen\n  pivot_wider(names_from = term, values_from = estimate) %>%\n  # Geef de kolommen een andere naam\n  dplyr::select(school, intercept = `(Intercept)`, slope = ses.dev)\n\nlm.coeff\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 160 × 3\n# Groups:   school [160]\n   school intercept slope\n   <fct>      <dbl> <dbl>\n 1 1224        9.72 2.51 \n 2 1288       13.5  3.26 \n 3 1296        7.64 1.08 \n 4 1308       16.3  0.126\n 5 1317       13.2  1.27 \n 6 1358       11.2  5.07 \n 7 1374        9.73 3.85 \n 8 1433       19.7  1.85 \n 9 1436       18.1  1.60 \n10 1461       16.8  6.27 \n# … with 150 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Voeg schoolsector en 'mean.ses' (gemiddelde ses) toe aan dit dataframe.\n\n# Creeer dataframe met school ID, schoolsector, mean.ses\nlm.df <- df %>% \n  dplyr::select(school, sector, mean.ses) %>%\n  distinct\n\nlm.df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 160 × 3\n   school sector   mean.ses\n   <fct>  <fct>       <dbl>\n 1 1224   Public    -0.434 \n 2 1288   Public     0.122 \n 3 1296   Public    -0.426 \n 4 1308   Catholic   0.528 \n 5 1317   Catholic   0.345 \n 6 1358   Public    -0.0197\n 7 1374   Public    -0.0126\n 8 1433   Catholic   0.712 \n 9 1436   Catholic   0.563 \n10 1461   Public     0.677 \n# … with 150 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Combineer dit met lm.coeff\n(lm.df %<>%\n    left_join(lm.coeff, by=\"school\")\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 160 × 5\n   school sector   mean.ses intercept slope\n   <fct>  <fct>       <dbl>     <dbl> <dbl>\n 1 1224   Public    -0.434       9.72 2.51 \n 2 1288   Public     0.122      13.5  3.26 \n 3 1296   Public    -0.426       7.64 1.08 \n 4 1308   Catholic   0.528      16.3  0.126\n 5 1317   Catholic   0.345      13.2  1.27 \n 6 1358   Public    -0.0197     11.2  5.07 \n 7 1374   Public    -0.0126      9.73 3.85 \n 8 1433   Catholic   0.712      19.7  1.85 \n 9 1436   Catholic   0.563      18.1  1.60 \n10 1461   Public     0.677      16.8  6.27 \n# … with 150 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Nu kunnen we een boxplot maken van schoolintercepts per schoolsector\nggplot(lm.df, aes(x= sector, y= intercept)) + geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Multilevel_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# En een boxplot van de slopes van school_SES slopes per schoolsector\nggplot(lm.df, aes(x= sector, y= slope)) + geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Multilevel_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Of beide schattingen in een scatterplot per schoolsector\nggplot(lm.df, aes(x= intercept, y= slope)) + \n  # Scatterplot\n  geom_point() +\n  # Lineaire regressielijn\n  geom_smooth(method=\"lm\") +\n  # Facet per sector\n  facet_wrap(~ sector) +\n  theme_bw()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Multilevel_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scatterplot van schoolintercepts voor school mean.ses per sector\nggplot(lm.df, aes(x= mean.ses, y= intercept)) + \n  geom_point() + \n  geom_smooth(method=\"loess\") +\n  facet_wrap(~ sector) +\n  theme_bw()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Multilevel_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scatterplot van schoolslopes van school mean.ses per sector\nggplot(lm.df, aes(x= mean.ses, y= slope)) + \n  geom_point() + \n  geom_smooth(method=\"loess\") +\n  facet_wrap(~ sector) +\n  theme_bw()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Multilevel_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\nNu kun je op volgende vragen antwoord geven.\n* _In `nested.df$data`, wat geven de aantallen rijen en kolommen aan in het dataframe van elke school?_.   \n* _Welke verschillen zie je tussen de verdeling van de geschatte *intercepts* in Openbare vs Katholieke scholen? Wat betekent dit inhoudelijk?_.  \n* _Welke verschillen zie je tussen de verdeling van de geschatte *slopes* in openbare vs. katholieke scholen? Hoe interpreteer je dit inhoudelijk?_.   \n* _Welke relatie komt naar voren tussen de gemiddelde SES van de school en de geschatte intercept van de school? Hoe zit het met dezelfde relatie voor de geschatte helling van de school? Zijn er in dit opzicht verschillen tussen openbare en katholieke scholen?_\n\n\n# Hierarchische Lineair Model: variantie componenten\nNu gaan we over naar multilevel modeleren en we zullen het volgende doen:\n* Schat een variantiecomponentenmodel op twee niveaus met leerlingen (niveau 1) genest in scholen (niveau 2): `mod1`.     \n   - Dit is een random-intercept model zonder voorspeller, dat eenvoudig `matchach` variatie verdeelt tussen variatie op leerlingniveau (tussen leerlingen) en variatie op schoolniveau (tussen scholen).      \n   - Hier wordt `mathach` gemodelleerd als resultaat van een willekeurig effect van de school (groepsniveau) plus een willekeurig effect van de leerling (individueel of restniveau): deze worden respectievelijk $u_i$ en $e_i$ genoemd door @rasbash_lemma:_2008.     \n   - Net als alle modellen in deze inleiding wordt `mod1` geschat via Restricted Maximum Likelihood (REML).    \n* Voer een Likelihood Ratio Test (LRT) uit voor de significantie van schooleffecten, waarbij `mod1` wordt vergeleken met hetzelfde nul lineaire model (geen voorspeller) zonder rekening te houden met clustering van leerlingen in scholen (d.w.z. een single-level model).    \n* Zie schattingen voor de variantiecomponenten of random-effectparameters: de variantie op leerlingniveau en de variantie op schoolniveau - respectievelijk $\\sigma^2_e$ en $\\sigma^2_u$ genoemd door @rasbash_lemma:_2008.    \n* Gebruik schattingen voor $\\sigma^2_e$ en $\\sigma^2_u$ om de variantieverdelingscoëfficiënt (VPC) te berekenen:)     \n   - Dit is het deel van de `mathach` variatie dat toe te schrijven is aan het tweede niveau, dat wil zeggen, aan verschillen tussen scholen.     \n   - Merk op dat in variantiecomponentenmodellen en random-interceptmodellen (maar niet in random hellingsmodellen) de VPC hetzelfde is als de Intraclass Correlatiecoëfficiënt (de correlatie tussen `mathach` van twee willekeurige leerlingen van dezelfde school).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Laten we beginnen met een simpele variantie componenten model\nmod1 <- lmer(mathach ~ 1 + (1 | school), \n             data=df)\n\n# Model 1 is geschat met 'Restricted Maximum Likelihood' (REML) als standaard.\n# Je kunt REML=FALSE instellen om ipv Maximum Likelihood (ML) te gebruiken.\n\n# Zie de resultaten.\n\n# lmerTest voor de samenvatting van die resultaten\nsummary(mod1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: mathach ~ 1 + (1 | school)\n   Data: df\n\nREML criterion at convergence: 47116.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.0631 -0.7539  0.0267  0.7606  2.7426 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n school   (Intercept)  8.614   2.935   \n Residual             39.148   6.257   \nNumber of obs: 7185, groups:  school, 160\n\nFixed effects:\n            Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)  12.6370     0.2444 156.6473   51.71   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Resultaten in tidy formaat\n(mod1.res <- tidy(mod1))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 8\n  effect   group    term            estimate std.error statis…¹    df    p.value\n  <chr>    <chr>    <chr>              <dbl>     <dbl>    <dbl> <dbl>      <dbl>\n1 fixed    <NA>     (Intercept)        12.6      0.244     51.7  157.  2.34e-100\n2 ran_pars school   sd__(Intercept)     2.93    NA         NA     NA  NA        \n3 ran_pars Residual sd__Observation     6.26    NA         NA     NA  NA        \n# … with abbreviated variable name ¹​statistic\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Om significantie van schooleffecten te meten, laten we eens een nul single-niveau\n# model schatten\nmod1_sl <- lm(mathach ~ 1, \n              data=df)\n\n# Vergelijk de twee modellen met Likelihood Ratio Test (LRT).\nanova(mod1, mod1_sl) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nrefitting model(s) with ML (instead of REML)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nData: df\nModels:\nmod1_sl: mathach ~ 1\nmod1: mathach ~ 1 + (1 | school)\n        npar   AIC   BIC logLik deviance  Chisq Df Pr(>Chisq)    \nmod1_sl    2 48104 48117 -24050    48100                         \nmod1       3 47122 47142 -23558    47116 983.92  1  < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Als standaard, refit anova() de modellen met ML dus de LRT is correct.\n\n# School-niveau variantie schatting\n(sigma2_u <- mod1.res %>%\n    filter(effect == \"ran_pars\", group == \"school\") %>%\n    # Standaard deviatie\n    pull(estimate) %>%\n    # ^2 = Variantie\n    .^2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8.614025\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Schat voor onverklaarde deel, individuele niveau variantie \n(sigma2_e <- mod1.res %>%\n    filter(effect == \"ran_pars\", group == \"Residual\") %>%\n    # Standaard deviatie\n    pull(estimate) %>%\n    # ^2 = Variantie\n    .^2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 39.14832\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 'Variance Partition Coefficient' (Variantie Deel Coeffient) \nsigma2_u/(sigma2_u + sigma2_e)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1803518\n```\n:::\n:::\n\n\n* _Hoe kunnen we de resultaten van het variantiecomponentenmodel interpreteren?_   \n* _Wat is het aandeel van de `wiskunde` variatie dat verklaard wordt door het schoolniveau? Hoe verhoudt dit zich tot de correlatie tussen wiskundescores van twee willekeurige leerlingen op dezelfde school?_     \n* _Zijn schooleffecten volgens de LRT significant, dat wil zeggen, is het schoolniveau een significante bron van variatie in `mathach`?_\n\n\n# Hierarchisch Lineair Model: random intercept\n\n* Schat `mod2`, een random intercept model met 'fixed slope' voor individuele student_SES.\n* Zie schattingen voor population-niveau vaste effecten (`Intercept` en `ses.dev` slope) en voor random-effect parameters.\n* Dit model is hetzelfde als vorig variantie componenten model, behalve dat `mathach` nu voor een deel verklaard wordt door individuele student_SES (`ses.dev`), en het onderverklaarde variantie deel tussen individuele en school random effecten.\n  - De VPC neemt iets toe vergeleken met `mod1`, dat geeft aan dat een relatief hoger deel van de (onverklaarde) `mathach` variatie nu verklaard wordt door school: met andere woorden, student_SES snoept een deel van student-niveau variatie dat het vorige `mod1` toeschreef aan individuele random effecten ($e_i$).\n* Er is een serieus debat over en hoe p-waarden te berekenen (en rapporteren) in multilevel modellen: \n  * Zie Ben Bolker's GLMM FAQ discussie van [dit onderwerp](http://bbolker.github.io/mixedmodels-misc/glmmFAQ.html#why-doesnt-lme4-display-denominator-degrees-of-freedomp-values-what-other-options-do-i-have), en van [testen van significantie](http://bbolker.github.io/mixedmodels-misc/glmmFAQ.html#testing-hypotheses) voor multilevel modellen in het algemeen.\n  * Wij gebruiken [`lmerTest`](https://www.jstatsoft.org/article/view/v082i13), de `summary` functie.\n  * But note that p-values would not by displayed if we applied the standard `summary` function to our estimated models.\n  * Another option to test the significance of single coefficients is running the [`car::Anova`](https://www.rdocumentation.org/packages/car/versions/3.0-13/topics/Anova) function on the model object [see discussion by @fox_fitting_2018].\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Random intercept model met vaste slope voor individueel student_SES.\nmod2 <- lmer(mathach ~ 1 + ses.dev + (1 | school), \n             data=df)\n\n# Zie resultaten.\nsummary(mod2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: mathach ~ 1 + ses.dev + (1 | school)\n   Data: df\n\nREML criterion at convergence: 46724\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.0969 -0.7322  0.0194  0.7572  2.9147 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n school   (Intercept)  8.672   2.945   \n Residual             37.010   6.084   \nNumber of obs: 7185, groups:  school, 160\n\nFixed effects:\n             Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)   12.6361     0.2445  156.7405   51.68   <2e-16 ***\nses.dev        2.1912     0.1087 7022.0237   20.17   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n        (Intr)\nses.dev 0.000 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Andere optie om significantie te testen van single coefficient schattingen.\nAnova(mod2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: mathach\n         Chisq Df Pr(>Chisq)    \nses.dev 406.68  1  < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Kenward-Roger \"F\" tests met Satterthwaite degrees of freedom, welke in dit \n# geval nauwkeurige resultaten (maar neemt meer rekentijd in beslag)\n# Anova(mod2, test=\"F\")\n\n# Tidy resulten\n(mod2.res <- tidy(mod2))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 8\n  effect   group    term            estimate std.error statis…¹    df    p.value\n  <chr>    <chr>    <chr>              <dbl>     <dbl>    <dbl> <dbl>      <dbl>\n1 fixed    <NA>     (Intercept)        12.6      0.244     51.7  157.  2.29e-100\n2 fixed    <NA>     ses.dev             2.19     0.109     20.2 7022.  5.77e- 88\n3 ran_pars school   sd__(Intercept)     2.94    NA         NA     NA  NA        \n4 ran_pars Residual sd__Observation     6.08    NA         NA     NA  NA        \n# … with abbreviated variable name ¹​statistic\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Zie schattingen estimates voor populatie-niveau fixed effecten: intercept en SES\n# slope\nmod2.res %>%\n  filter(effect == \"fixed\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 8\n  effect group term        estimate std.error statistic    df   p.value\n  <chr>  <chr> <chr>          <dbl>     <dbl>     <dbl> <dbl>     <dbl>\n1 fixed  <NA>  (Intercept)    12.6      0.244      51.7  157. 2.29e-100\n2 fixed  <NA>  ses.dev         2.19     0.109      20.2 7022. 5.77e- 88\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Zie de schattingen voor de variantie component parameters (aka random-effect\n# parameters)\nmod2.res %>%\n  filter(effect == \"ran_pars\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 8\n  effect   group    term            estimate std.error statistic    df p.value\n  <chr>    <chr>    <chr>              <dbl>     <dbl>     <dbl> <dbl>   <dbl>\n1 ran_pars school   sd__(Intercept)     2.94        NA        NA    NA      NA\n2 ran_pars Residual sd__Observation     6.08        NA        NA    NA      NA\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# School-niveau variantie schatting\n(sigma2_u <- mod2.res %>%\n  filter(effect == \"ran_pars\", group == \"school\") %>%\n  # Standaard deviatie\n  pull(estimate) %>%\n  # ^2 = Variantie\n  .^2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8.672289\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Residual, individueel-niveau variantie\n(sigma2_e <- mod2.res %>%\n    filter(effect == \"ran_pars\", group == \"Residual\") %>%\n    # Standaard deviatie\n    pull(estimate) %>%\n    # ^2 = Variantie\n    .^2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 37.01041\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# VPC\nsigma2_u/(sigma2_u + sigma2_e)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1898375\n```\n:::\n:::\n\nNu kun je hier antwoord op geven:\n* _Hoe kunnen we de schattingen interpreteren voor de fixed-effect parameters?_\n* _Hoe kunnen we de schattingen interpreteren voor de variantie componenten? _\n* _Gebaseerd op VPC, welk deel van de `mathach` variatie is _niet verklaard_ door `ses.dev` is toe te schrijven aan het schoolniveau?_\n  - _Hoe verschilt dit van de interpretatie van VPC in het variantie componenten model `mod1`?_\n  - _Hoe kunnen we toename in VPC interpreteren vergeleken met `mod1`?_\n\n# Hierarchisch Lineair Model: random slope\nWe gaan nog stapje verder door ook te kijken naar het random slope model.\n* Schat `mod3`, een random slope model waarin het effect van individuele stduent_SES op wiskundescore mag variëren tussen scholen.    \n* Bekijk schattingen voor de verschillende random-effect parameters in dit model: variantie van random intercept, variantie van random slope, covariantie tussen random intercept en random slope.   \n* Deze worden respectievelijk $\\sigma^2_{u0}$, $\\sigma^2_{u1}$ en $\\sigma_{u01}$ genoemd door @rasbash_lemma:_2008.  \n* Merk op dat de resultaten van het `lme4` model de _correlatie_ $\\rho_{u01}$ (niet de covariantie) tussen willekeurig intercept en willekeurige slope weergeven: om de covariantie te krijgen vermenigvuldig je gewoon de correlatie met de twee standaarddeviaties ($\\rho_{u01}*\\sigma_{u0}*\\sigma_{u1}$).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Random slope model met SES slope die mag varieren tussen scholen\nmod3 <- lmer(mathach ~ 1 + ses.dev + (1 + ses.dev | school), \n             data=df)\n\n# Resulten\nsummary(mod3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: mathach ~ 1 + ses.dev + (1 + ses.dev | school)\n   Data: df\n\nREML criterion at convergence: 46714.2\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-3.09680 -0.73193  0.01855  0.75386  2.89924 \n\nRandom effects:\n Groups   Name        Variance Std.Dev. Corr\n school   (Intercept)  8.681   2.9464       \n          ses.dev      0.694   0.8331   0.02\n Residual             36.700   6.0581       \nNumber of obs: 7185, groups:  school, 160\n\nFixed effects:\n            Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)  12.6362     0.2445 156.7512   51.68   <2e-16 ***\nses.dev       2.1932     0.1283 155.2166   17.10   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n        (Intr)\nses.dev 0.009 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Tidy resultaten\n(mod3.res <- tidy(mod3))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  effect   group    term                estim…¹ std.e…² stati…³    df    p.value\n  <chr>    <chr>    <chr>                 <dbl>   <dbl>   <dbl> <dbl>      <dbl>\n1 fixed    <NA>     (Intercept)         12.6      0.245    51.7  157.  2.29e-100\n2 fixed    <NA>     ses.dev              2.19     0.128    17.1  155.  1.58e- 37\n3 ran_pars school   sd__(Intercept)      2.95    NA        NA     NA  NA        \n4 ran_pars school   cor__(Intercept).s…  0.0191  NA        NA     NA  NA        \n5 ran_pars school   sd__ses.dev          0.833   NA        NA     NA  NA        \n6 ran_pars Residual sd__Observation      6.06    NA        NA     NA  NA        \n# … with abbreviated variable names ¹​estimate, ²​std.error, ³​statistic\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# School-niveau variantie van random intercept\nmod3.res %>%\n  filter(effect == \"ran_pars\", group == \"school\", term == \"sd__(Intercept)\") %>%\n  # Standaard deviantie\n  pull(estimate) %>%\n  # ^2 = Variantie\n  .^2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8.681044\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# School-niveau variantie van random SES slope\nmod3.res %>%\n  filter(effect == \"ran_pars\", group == \"school\", term == \"sd__ses.dev\") %>%\n  # Standaard deviantion\n  pull(estimate) %>%\n  # ^2 = Variantie\n  .^2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6939974\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# School-niveau correlatie tussen random intercept en random SES slope\nmod3.res %>%\n  filter(effect == \"ran_pars\", group == \"school\", term == \"cor__(Intercept).ses.dev\") %>%\n  # Standaard deviantie\n  pull(estimate)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.0190622\n```\n:::\n:::\n\n\n* _Hoeveel random effect parameters hebben we nu, vergeleken met eerdere modellen? Waarom?_   \n* _Hoe interpreteren we de schattingen voor variantie van random intercept en variantie van random helling?_   \n* _Hoe interpreteren we de geschatte correlatie van random intercept en random helling?_   \n\n# Contextuele variabelen en cross-niveau interacties\n\n* We kunnen veronderstellen dat het willekeurige intercept en de willekeurige slope van de school gedeeltelijk worden verklaard door (\"contextuele\") variabelen op schoolniveau: bijvoorbeeld `mean.ses` en `sector`.   \n* Dit idee kan worden weergegeven als een random-slope model met `mean.ses` en `sector` als hoofdeffecten en interacties met `ses.dev` (zie de afleiding in de dia's): `mod4`.   \n* Als alternatief kunnen we hetzelfde model schatten maar de `ses.dev` helling vast houden (d.w.z. een random-intercept model): `mod5`.   \n* We testen of `mod4` significant meer variatie in de afhankelijke variabele verklaart in vergelijking met het eenvoudigere, meer parsimonieuze `mod5` (Likelihood Ratio Test).  - Gebaseerd op LRT resultaten, hebben we geen bewijs om de willekeurige helling te ondersteunen (d.w.z. om de nulhypothese te verwerpen dat de `ses.dev` helling vast is voor alle scholen), dus kiezen we `mod5` boven `mod4`.   \n* Van `mod5` verkrijgen we voorspelde waarden van leerling `mathach` als functie van leerling `ses.dev`, gegeven verschillende contexten (d.w.z. verschillende vaste waarden van `mean.ses` en `sector` van de school). Vervolgens plotten we deze resultaten.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Schat het model\nmod4 <- lmer(mathach ~ 1 + mean.ses*ses.dev + sector*ses.dev \n             + (1 + ses.dev | school), \n             data=df)\n\n# zie resultaten\nsummary(mod4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: mathach ~ 1 + mean.ses * ses.dev + sector * ses.dev + (1 + ses.dev |  \n    school)\n   Data: df\n\nREML criterion at convergence: 46503.7\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-3.15926 -0.72319  0.01704  0.75444  2.95822 \n\nRandom effects:\n Groups   Name        Variance Std.Dev. Corr\n school   (Intercept)  2.380   1.5426       \n          ses.dev      0.101   0.3179   0.39\n Residual             36.721   6.0598       \nNumber of obs: 7185, groups:  school, 160\n\nFixed effects:\n                       Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)             12.1279     0.1993 159.8955  60.856  < 2e-16 ***\nmean.ses                 5.3329     0.3692 150.9859  14.446  < 2e-16 ***\nses.dev                  2.9450     0.1556 139.4991  18.928  < 2e-16 ***\nsectorCatholic           1.2266     0.3063 149.6127   4.005 9.74e-05 ***\nmean.ses:ses.dev         1.0393     0.2989 160.4374   3.477 0.000652 ***\nses.dev:sectorCatholic  -1.6427     0.2398 143.2291  -6.851 2.01e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) men.ss ses.dv sctrCt mn.s:.\nmean.ses     0.256                            \nses.dev      0.075  0.019                     \nsectorCthlc -0.699 -0.356 -0.053              \nmn.ss:ss.dv  0.019  0.074  0.293 -0.026       \nss.dv:sctrC -0.052 -0.027 -0.696  0.077 -0.351\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(mod4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 8\n   effect   group    term               estim…¹ std.e…² stati…³    df    p.value\n   <chr>    <chr>    <chr>                <dbl>   <dbl>   <dbl> <dbl>      <dbl>\n 1 fixed    <NA>     (Intercept)         12.1     0.199   60.9   160.  1.70e-112\n 2 fixed    <NA>     mean.ses             5.33    0.369   14.4   151.  2.95e- 30\n 3 fixed    <NA>     ses.dev              2.95    0.156   18.9   139.  2.32e- 40\n 4 fixed    <NA>     sectorCatholic       1.23    0.306    4.00  150.  9.74e-  5\n 5 fixed    <NA>     mean.ses:ses.dev     1.04    0.299    3.48  160.  6.52e-  4\n 6 fixed    <NA>     ses.dev:sectorCat…  -1.64    0.240   -6.85  143.  2.01e- 10\n 7 ran_pars school   sd__(Intercept)      1.54   NA       NA      NA  NA        \n 8 ran_pars school   cor__(Intercept).…   0.391  NA       NA      NA  NA        \n 9 ran_pars school   sd__ses.dev          0.318  NA       NA      NA  NA        \n10 ran_pars Residual sd__Observation      6.06   NA       NA      NA  NA        \n# … with abbreviated variable names ¹​estimate, ²​std.error, ³​statistic\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Test voor random slope voor ses.dev: vergelijk random intercept vs random slope\n# modellen met zelfde vaste effecten.\n\n# Schat zelfde model als mod4, maar zonder random slope (alleen random intercept).\nmod5 <- lmer(mathach ~ 1 + mean.ses*ses.dev + sector*ses.dev \n             + (1 | school), data=df)\n\n# Zie resultaten\nsummary(mod5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: mathach ~ 1 + mean.ses * ses.dev + sector * ses.dev + (1 | school)\n   Data: df\n\nREML criterion at convergence: 46504.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1701 -0.7249  0.0148  0.7542  2.9655 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n school   (Intercept)  2.375   1.541   \n Residual             36.766   6.064   \nNumber of obs: 7185, groups:  school, 160\n\nFixed effects:\n                        Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)              12.1282     0.1992  160.0061  60.885  < 2e-16 ***\nmean.ses                  5.3367     0.3690  151.0718  14.463  < 2e-16 ***\nses.dev                   2.9421     0.1512 7018.2611  19.457  < 2e-16 ***\nsectorCatholic            1.2245     0.3061  149.6953   4.000 9.92e-05 ***\nmean.ses:ses.dev          1.0444     0.2910 7018.2611   3.589 0.000335 ***\nses.dev:sectorCatholic   -1.6422     0.2331 7018.2611  -7.045 2.03e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) men.ss ses.dv sctrCt mn.s:.\nmean.ses     0.256                            \nses.dev      0.000  0.000                     \nsectorCthlc -0.699 -0.356  0.000              \nmn.ss:ss.dv  0.000  0.000  0.295  0.000       \nss.dv:sctrC  0.000  0.000 -0.696  0.000 -0.351\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(mod5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 8\n  effect   group    term                estim…¹ std.e…² stati…³    df    p.value\n  <chr>    <chr>    <chr>                 <dbl>   <dbl>   <dbl> <dbl>      <dbl>\n1 fixed    <NA>     (Intercept)           12.1    0.199   60.9   160.  1.40e-112\n2 fixed    <NA>     mean.ses               5.34   0.369   14.5   151.  2.62e- 30\n3 fixed    <NA>     ses.dev                2.94   0.151   19.5  7018.  3.58e- 82\n4 fixed    <NA>     sectorCatholic         1.22   0.306    4.00  150.  9.92e-  5\n5 fixed    <NA>     mean.ses:ses.dev       1.04   0.291    3.59 7018.  3.35e-  4\n6 fixed    <NA>     ses.dev:sectorCath…   -1.64   0.233   -7.05 7018.  2.03e- 12\n7 ran_pars school   sd__(Intercept)        1.54  NA       NA      NA  NA        \n8 ran_pars Residual sd__Observation        6.06  NA       NA      NA  NA        \n# … with abbreviated variable names ¹​estimate, ²​std.error, ³​statistic\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Test dit: LRT vergelijkt random slope model vs random intercept model\nanova(mod5, mod4)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nrefitting model(s) with ML (instead of REML)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nData: df\nModels:\nmod5: mathach ~ 1 + mean.ses * ses.dev + sector * ses.dev + (1 | school)\nmod4: mathach ~ 1 + mean.ses * ses.dev + sector * ses.dev + (1 + ses.dev | school)\n     npar   AIC   BIC logLik deviance  Chisq Df Pr(>Chisq)\nmod5    8 46513 46568 -23249    46497                     \nmod4   10 46516 46585 -23248    46496 1.0016  2     0.6061\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gebaseerd op de waarde van de vastgestelde Chikwadraat statistiek en z'n p-waarde, houden we \n# het random intercept model met vaste slope voor ses.dev: mod5\n\n# Krijg mod5 voorspelde waarden voor ses.dev, op verschillende niveaus van school sector en \n# mean.ses.\npred.val <- ggpredict(mod5, terms = c(\"ses.dev\", \"mean.ses [-1:0.5 by=0.5]\", \"sector\")) %>%\n  as_tibble() %>%\n  dplyr::rename(ses.dev = x, mathach = predicted, mean.ses = group, sector = facet)\n\npred.val\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 64 × 7\n   ses.dev mathach std.error conf.low conf.high mean.ses sector  \n     <dbl>   <dbl>     <dbl>    <dbl>     <dbl> <fct>    <fct>   \n 1      -4  -0.799     1.20    -3.15       1.56 -1       Public  \n 2      -4   6.99      1.54     3.97      10.0  -1       Catholic\n 3      -4  -0.220     0.743   -1.68       1.24 -0.5     Public  \n 4      -4   7.57      1.03     5.55       9.60 -0.5     Catholic\n 5      -4   0.360     0.637   -0.888      1.61 0        Public  \n 6      -4   8.15      0.706    6.77       9.54 0        Catholic\n 7      -4   0.939     1.00    -1.03       2.90 0.5      Public  \n 8      -4   8.73      0.823    7.12      10.3  0.5      Catholic\n 9      -3   1.10      0.934   -0.733      2.93 -1       Public  \n10      -3   7.25      1.20     4.90       9.60 -1       Catholic\n# … with 54 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot deze voorspelde effecten\nggplot(pred.val) + \n  # Lijnen van mathach en ses.dev, gegroepeerd/gekleurd via  sector (Openbaar vs Katholiek)\n  geom_line(aes(y = mathach, x = ses.dev, group = sector, color = sector)) +\n  # Verschillende afbeeldingen voor verschillende mean.ses waarden\n  facet_grid(~ mean.ses) + \n  theme(legend.position=\"bottom\")\n```\n\n::: {.cell-output-display}\n![](Multilevel_files/figure-html/unnamed-chunk-61-1.png){width=672}\n:::\n:::\n\n\n* _Hoeveel vaste effectparameters hebben we nu, vergeleken met vorige modellen? Waarom? _  \n* _Welke coëfficiëntschattingen zitten wel in `mod4` maar _niet_ in `mod5`? Waarom? _.  \n* _Hoe interpreteren we inhoudelijk de resultaten van de LRT tussen `mod4` en `mod5`? _.  \n* _Hoe kunnen we de visualisatie van voorspelde waarden uit `mod5` interpreteren? Wat is het (fixed) effect van `ses.dev` op `mathach`? Hoe verandert dit in katholieke vs. openbare scholen? Hoe verandert dit in scholen waarvan de leerlingenpopulatie gemiddeld een hogere SES heeft?\n\n\n# School random effecten en random intercepten onderzoeken\n\n* Bereken de schatting voor het vaste intercept op populatieniveau in openbare ($\\beta_0$) en katholieke ($\\beta_0+\\beta_3$) scholen (zie dia's voor coëfficiëntnotatie). Bereken de schattingen voor het willekeurige effect van elke school $j$ [door @rasbash_lemma:_2008 $u_j$ genoemd].    \n* Voeg het vaste intercept toe aan elke $u_j$ om de geschatte realisatie van het willekeurige intercept van elke school te verkrijgen: $u_j$ voor openbare scholen en $u_j$ voor katholieke scholen.   \n* Dit is de gemiddelde wiskunde-score van de school bij gemiddelde waarden van de voorspellers (ervan uitgaande dat de voorspellers gecentreerd zijn).* Identificeer \"beste\" scholen op basis van de realisatie van het willekeurige intercept.   \n* Visualiseer de verdeling van dit willekeurige intercept en het verband met de gemiddelde SES van de school (`mean.ses`) voor openbare en katholieke scholen.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Geschatte coefficienten in geselecteerde model\nmod5.res <- tidy(mod5)\n\n# Krijg vaste parameters van het model\nmod5.res %>%\n  filter(effect == \"fixed\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  effect group term                   estimate std.error stati…¹    df   p.value\n  <chr>  <chr> <chr>                     <dbl>     <dbl>   <dbl> <dbl>     <dbl>\n1 fixed  <NA>  (Intercept)               12.1      0.199   60.9   160. 1.40e-112\n2 fixed  <NA>  mean.ses                   5.34     0.369   14.5   151. 2.62e- 30\n3 fixed  <NA>  ses.dev                    2.94     0.151   19.5  7018. 3.58e- 82\n4 fixed  <NA>  sectorCatholic             1.22     0.306    4.00  150. 9.92e-  5\n5 fixed  <NA>  mean.ses:ses.dev           1.04     0.291    3.59 7018. 3.35e-  4\n6 fixed  <NA>  ses.dev:sectorCatholic    -1.64     0.233   -7.05 7018. 2.03e- 12\n# … with abbreviated variable name ¹​statistic\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Vaste intercept\nmod5.res %>%\n  filter(effect == \"fixed\", term == \"(Intercept)\") %>%\n  pull(estimate)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12.12821\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Merk op dat Openbare scholen referentie categorie is, voor Katholieke\n# scholen (dummy variabele=1) moeten we de sectorCatholic parameter toevoegen om\n# het actuele vaste intercept te krijgen.\nmod5.res %>%\n  filter(effect == \"fixed\", term == \"sectorCatholic\") %>%\n  pull(estimate)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.224529\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sla vaste intercepten op.\n\n# Vaste intercept voor openbare scholen.\n(fixed_int_pub <- mod5.res %>%\n    filter(effect == \"fixed\", term == \"(Intercept)\") %>%\n    pull(estimate))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12.12821\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Vaste intercept voor katholieke scholen\n(fixed_slo_cat <- mod5.res %>%\n  filter(effect == \"fixed\", term == \"sectorCatholic\") %>%\n  pull(estimate))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.224529\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Vaste intercept voor katholieke scholen: sum.\n(fixed_int_cat <- fixed_int_pub + fixed_slo_cat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 13.35274\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# lme4::ranef kan schattingen calculeren voor het intercept random effect model\n# voor elke school\nlme4::ranef(mod5) %>% \n  str\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 1\n $ school:'data.frame':\t160 obs. of  1 variable:\n  ..$ (Intercept): num [1:160] -0.0712 0.4531 -1.6798 0.0479 -1.5259 ...\n  ..- attr(*, \"postVar\")= num [1, 1, 1:160] 0.588 0.908 0.579 1.036 0.579 ...\n - attr(*, \"class\")= chr \"ranef.mer\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nranef(mod5)$school %>%\n  head\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     (Intercept)\n1224 -0.07116497\n1288  0.45311618\n1296 -1.67981589\n1308  0.04791777\n1317 -1.52592390\n1358 -0.53895146\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Opslaan als data frame\n(school.effects <- ranef(mod5)$school %>%\n  as_tibble(rownames = \"school\") %>%\n    # Dot wordt soms u_j genoemd.\n    rename(u_j = `(Intercept)`)\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 160 × 2\n   school     u_j\n   <chr>    <dbl>\n 1 1224   -0.0712\n 2 1288    0.453 \n 3 1296   -1.68  \n 4 1308    0.0479\n 5 1317   -1.53  \n 6 1358   -0.539 \n 7 1374   -1.50  \n 8 1433    1.78  \n 9 1436    1.30  \n10 1461    0.748 \n# … with 150 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Merk op dat school naar factor moet worden overgezet.\nschool.effects %<>% \n  mutate(school = factor(school))\n\n# Add school sector and mean.ses to the data frame of random effects.\n# Remember we have these variables here:\nlm.df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 160 × 5\n   school sector   mean.ses intercept slope\n   <fct>  <fct>       <dbl>     <dbl> <dbl>\n 1 1224   Public    -0.434       9.72 2.51 \n 2 1288   Public     0.122      13.5  3.26 \n 3 1296   Public    -0.426       7.64 1.08 \n 4 1308   Catholic   0.528      16.3  0.126\n 5 1317   Catholic   0.345      13.2  1.27 \n 6 1358   Public    -0.0197     11.2  5.07 \n 7 1374   Public    -0.0126      9.73 3.85 \n 8 1433   Catholic   0.712      19.7  1.85 \n 9 1436   Catholic   0.563      18.1  1.60 \n10 1461   Public     0.677      16.8  6.27 \n# … with 150 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Koppel\nschool.effects %<>%\n  left_join(lm.df, by=\"school\") %>%\n  dplyr::select(school, u_j, sector, mean.ses)\n  \nschool.effects\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 160 × 4\n   school     u_j sector   mean.ses\n   <fct>    <dbl> <fct>       <dbl>\n 1 1224   -0.0712 Public    -0.434 \n 2 1288    0.453  Public     0.122 \n 3 1296   -1.68   Public    -0.426 \n 4 1308    0.0479 Catholic   0.528 \n 5 1317   -1.53   Catholic   0.345 \n 6 1358   -0.539  Public    -0.0197\n 7 1374   -1.50   Public    -0.0126\n 8 1433    1.78   Catholic   0.712 \n 9 1436    1.30   Catholic   0.563 \n10 1461    0.748  Public     0.677 \n# … with 150 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Voeg een kolom met een vaste intercept schatting toe\n# Onthoud dat dit verschillend is voor Katholieke vs Openbare scholen is\n# we gebruiken dplyr::case_when() om vaste intercept schatting te maken\n# voor elke school afhankelijk van de sector.\nschool.effects %<>%\n  mutate(fixed.int = case_when(\n    sector == \"Public\" ~ fixed_int_pub,\n    sector == \"Catholic\" ~ fixed_int_cat\n  ))\n\n# Kijk\nschool.effects\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 160 × 5\n   school     u_j sector   mean.ses fixed.int\n   <fct>    <dbl> <fct>       <dbl>     <dbl>\n 1 1224   -0.0712 Public    -0.434       12.1\n 2 1288    0.453  Public     0.122       12.1\n 3 1296   -1.68   Public    -0.426       12.1\n 4 1308    0.0479 Catholic   0.528       13.4\n 5 1317   -1.53   Catholic   0.345       13.4\n 6 1358   -0.539  Public    -0.0197      12.1\n 7 1374   -1.50   Public    -0.0126      12.1\n 8 1433    1.78   Catholic   0.712       13.4\n 9 1436    1.30   Catholic   0.563       13.4\n10 1461    0.748  Public     0.677       12.1\n# … with 150 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Nu kunnen we de vaste intercept schattingen aan random effect schatting koppelen\n# om de geschatte realisatie van intercept te krijgen . \nschool.effects %<>%\n  mutate(ran.int = fixed.int + u_j)\n\n# Kijk\nschool.effects\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 160 × 6\n   school     u_j sector   mean.ses fixed.int ran.int\n   <fct>    <dbl> <fct>       <dbl>     <dbl>   <dbl>\n 1 1224   -0.0712 Public    -0.434       12.1    12.1\n 2 1288    0.453  Public     0.122       12.1    12.6\n 3 1296   -1.68   Public    -0.426       12.1    10.4\n 4 1308    0.0479 Catholic   0.528       13.4    13.4\n 5 1317   -1.53   Catholic   0.345       13.4    11.8\n 6 1358   -0.539  Public    -0.0197      12.1    11.6\n 7 1374   -1.50   Public    -0.0126      12.1    10.6\n 8 1433    1.78   Catholic   0.712       13.4    15.1\n 9 1436    1.30   Catholic   0.563       13.4    14.7\n10 1461    0.748  Public     0.677       12.1    12.9\n# … with 150 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# \"Beste\" scholen: hoogste waarde van random intercept (gemiddelde math score bij    # gemiddelde waarden van de predictoren \nschool.effects %>%\n  arrange(desc(ran.int))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 160 × 6\n   school   u_j sector   mean.ses fixed.int ran.int\n   <fct>  <dbl> <fct>       <dbl>     <dbl>   <dbl>\n 1 3427    4.21 Catholic    0.153      13.4    17.6\n 2 7688    3.17 Catholic    0.186      13.4    16.5\n 3 8628    3.13 Catholic   -0.140      13.4    16.5\n 4 8193    2.81 Catholic   -0.177      13.4    16.2\n 5 9198    2.08 Catholic    0.492      13.4    15.4\n 6 2655    3.05 Public     -0.702      12.1    15.2\n 7 2629    1.80 Catholic   -0.138      13.4    15.2\n 8 1433    1.78 Catholic    0.712      13.4    15.1\n 9 4292    1.70 Catholic   -0.486      13.4    15.1\n10 2526    1.54 Catholic    0.327      13.4    14.9\n# … with 150 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beste onder katholieke scholen\nschool.effects %>% \n  filter(sector==\"Catholic\") %>%\n  arrange(desc(ran.int))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 70 × 6\n   school   u_j sector   mean.ses fixed.int ran.int\n   <fct>  <dbl> <fct>       <dbl>     <dbl>   <dbl>\n 1 3427    4.21 Catholic    0.153      13.4    17.6\n 2 7688    3.17 Catholic    0.186      13.4    16.5\n 3 8628    3.13 Catholic   -0.140      13.4    16.5\n 4 8193    2.81 Catholic   -0.177      13.4    16.2\n 5 9198    2.08 Catholic    0.492      13.4    15.4\n 6 2629    1.80 Catholic   -0.138      13.4    15.2\n 7 1433    1.78 Catholic    0.712      13.4    15.1\n 8 4292    1.70 Catholic   -0.486      13.4    15.1\n 9 2526    1.54 Catholic    0.327      13.4    14.9\n10 3838    1.50 Catholic    0.145      13.4    14.9\n# … with 60 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Beste onder openbare scholen \nschool.effects %>% \n  filter(sector==\"Public\") %>%\n  arrange(desc(ran.int))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 90 × 6\n   school   u_j sector mean.ses fixed.int ran.int\n   <fct>  <dbl> <fct>     <dbl>     <dbl>   <dbl>\n 1 2655    3.05 Public  -0.702       12.1    15.2\n 2 6170    2.11 Public  -0.302       12.1    14.2\n 3 6089    2.03 Public   0.0859      12.1    14.2\n 4 4420    1.98 Public  -0.224       12.1    14.1\n 5 8357    1.80 Public  -0.107       12.1    13.9\n 6 5640    1.55 Public  -0.177       12.1    13.7\n 7 2336    1.53 Public   0.442       12.1    13.7\n 8 1942    1.53 Public   0.682       12.1    13.7\n 9 7697    1.49 Public   0.258       12.1    13.6\n10 4642    1.48 Public   0.115       12.1    13.6\n# … with 80 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualiseer random intercept verdeling per sector\nggplot(school.effects, aes(x=sector, y= ran.int)) + geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Multilevel_files/figure-html/unnamed-chunk-77-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualiseer random intercepten bij mean.ses in katholieke vs openbare scholen\nggplot(school.effects, \n       aes(x=mean.ses, y=ran.int, color = sector)) + \n  # Scatterplot geom\n  geom_point(shape=1) +\n  # lineaire regressie lijn\n  geom_smooth(method=\"lm\", se=FALSE) +\n  # thema\n  theme_bw() \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Multilevel_files/figure-html/unnamed-chunk-78-1.png){width=672}\n:::\n:::\n\nNu moet je antwoord op volgende vraag kunnen geven:\n* _How do we interpret these last two plots?_\n\n# Literatuur\n\n<style>\n    pre {\n        border: 0;\n    }\n</style>\n",
    "supporting": [
      "Multilevel_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}