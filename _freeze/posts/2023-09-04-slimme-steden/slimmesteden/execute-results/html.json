{
  "hash": "800393304a4a11d0f57256b720974c11",
  "result": {
    "markdown": "---\ntitle: \"Slimme steden\"\ndescription: |\n    Dit is een blog nav O'Briens boek Urban Informatics waarin hij laat zien hoe je als stad (of gemeenschap) om kunt gaan met de informatie over jouw omgeving. Hij leert ons de vaardigheden hiervoor. \nauthor: \"Harrie Jonkma\"\ndate: \"2023-09-04\"\ncategories: [visualiseren, analyseren]\nimage: \"Screenshot.PNG\"\n---\n\n\n\n![](Screenshot.png) \n\nOnlangs schreef Daniel T. O'Brien het boek **Urban Informatics: Using Big Data to Understand and Serve Communities**(2022), dat ook via internet is te lezen ([hier](https://ui.danourban.com/)). Het gaat over stedelijke informatica en de manier waarop we tegenwoordig met informatie kunnen omgaan. Stedelijke informatica vraagt om specifieke vaardigheden om met data om te gaan: je moet weten hoe je toegang tot de data kunt krijgen, goede informatie hieruit kunt desilleren, moet analyseren om antwoorden te krijgen op bepaalde vragen, de informatie kunt visualiseren en communiceren naar anderen. Data zijn meer en meer toegankelijk geworden en nieuwe technieken zorgen ervoor dat ze meer gebruikt kunnen worden. De verkregen informatie en inzichten kunnen worden gebruikt wanneer diverse instituten (waaronder publieke instellingen, non-profit instellingen, bedrijven, universiteiten en hogescholen) met elkaar willen samenwerken. \nHet initiatief om dit boek te schrijven komt voort uit een cursus die O'Brien sinds 2014 voor de Northeastern Universiteit van Boston heeft opgezet rond **Big data voor steden**. Hij was ook betrokken bij activiteiten voor de stad Boston en de regio. Deze praktische ervaringen zijn in het boek verwerkt.\n\nDe ontwikkelingen op het terrein van stedelijke informatica zorgen voor innovaties in politiek, praktijk en diensten die worden geboden door regio's, steden en wijken. De ontwikkelingen zorgen er ook voor dat er meer onderzoek gedaan kan worden naar wat er in die gemeenschappen gebeurt. Ze zorgen er ook voor dat er nieuwe producten ontstaan die door regio's, steden en wijken gebruikt kunnen worden (zoals interactieve producten, visualisaties en andere geavanceerde visuele producten, apps). Met de nieuwe mogelijkheden kunnen we beter begrijpen wat er in diverse gemeenschappen gebeurt. Maar ook roepen deze ontwikkelingen nieuwe vragen op die leiden tot aanpassingen in wat er in de regio's, steden en wijken gebeurt. \n\n**Urban Informatics** wil wil bijdragen aan het versterken van technische vaardigheden van onderzoekers, dat ze beter toegang krijgen tot data, deze kunnen aanpassen, manipuleren, analyseren en visualiseren. Dat wordt met het programma *R* gedaan en de pakketten die hierbij ingezet kunnen worden. Het programma is vrij toegankelijk met een sterke gebruikersgemeenschap waar je op terug kunt vallen. Tegelijk wil O'Brien met het boek bijdragen aan conceptuele vooruitgang. Je leert de informatie te begrijpen en te interpreteren en er betekenis aan te verlenen voor het publiek. Je leert omgaan met de sterke en zwakke kanten van de data, welke vragen die wel en niet beantwoord kunnen worden en na te denken over wat je met met de analyses kunt bereiken.\n\nHet boek dat hij schreef bestaat uit vier delen. Het eerste deel (**Informatie**) gaat over de vaardigheden die je nodig hebt en introduceert *R* en *RStudio*; het laat zien hoe je een dataverhaal maakt van bepaalde bestanden; hoe je in de dataset patronen kunt ontdekken; hoe je je eigen variabelen maakt en creëert. Basis pakketten worden geïntroduceerd.\nHet tweede deel (**Meten**) laat zien hoe je vanuit de data iets kunnen zeggen over individuen, straten, buurten en dergelijke; het laat zien hoe je data kunt aggregeren en koppelen; hoe je regio's, steden en wijken in kaart kunt brengen; welke geavanceerde visuele technieken je hierbij kunt gebruiken. Dit deel gaat over de gereedschappen om gegevens te interpreteren en beslissingen te nemen.\n**Ontdekking** (het derde deel) gaat over statistische analyse en hoe we meer kunnen zeggen over de relaties tussen variabelen. Het gaat over inferentiële statistiek en correlaties; hoe ongelijkheid tussen groepen kan worden vastgesteld; en hoe mechanismen die ten grondslag liggen aan ongelijkheid blootgelegd kunnen worden  \nHet vierde en laatste deel (**Andere gereedschappen**) is een soort reservedeel over nieuwe technieken en technologieen die recent populair zijn geworden op het terrein van stedelijke informatica zoals netwerkanalyse, machine learning, block chain en 5G. In dit deel laat O'Brien zien wat deze nieuwe gereedschappen inhouden, hoe ze werken; staat hij stil bij enkele ethische kwesties hierbij; laat hij zien wat de belangrijkste toepassingen zijn van deze gereedschappen en wijst hij op aanvullende literatuur. Dit deel is beschrijvend van aard en minder praktisch als de drie delen hiervoor. \n\n**Urban Informatics** is een interessant en leerzaam boek als je regionaal, stedelijk of wijkgericht onderzoek wilt doen. Het geeft je hele duidelijke gereedschappen om hier mee aan het werk te gaan. Het deel **Andere gemeenschappen** is wat mij betreft aan de magere kant en hier had Daniel O'Brien beter een hoofdstuk kunnen besteden aan communicatie van de resultaten en eigentijdse producten die hierbij te gebruiken zijn. Maar ik heb toch het nodige opgestoken van zijn boek. Hieronder vat ik twee stukken uit zijn boek samen en wel het deel dat gaat **Gemeenschappen in kaart brengen** en **Geavanceerde visuele technieken**.\n\n\n## Gemeenschappen in kaart brengen\nHet achtste hoofdstuk van zijn boek **Urban Informatics** vertelt iets over Geografische Informatie Systemen en hoe je met ruimtelijke data kunt werken. In dit hoofdstuk maakt vooral gebruik van het pakket [`sf`](https://cran.r-project.org/web/packages/sf/index.html).\n\nJohn Snows kaarten over de cholera-uitbraak in Londen halverwege de negentiende eeuw, over de waterpomp in de Broad Street, is zo'm voorbeeld van hoe ruimtelijke data inzicht kunnen geven in een probleem. \n\nHieronder zie je zijn eerste tekening die hij over dit probleem heeft gemaakt.\n\n![](Snow1.png)\n\nMaar dat deed hij nog met de hand. Tegenwoordig zijn er hele nieuwe systemen en toepassingen waarmee de ruimte in kaart kan worden gebracht en die organisaties in staat stellen om hun eigen ruimte te bekijken, zoals hieronder het wegennetwerk van Londen van de afgelopen 250 jaar.\n\n![](Snow2.png)\nIn dit hoofdstuk laat hij zien hoe je met **shapefiles** kunt werkenm, een datastructuur om ruimtelijke informatie te kunnen structureren. Hij vertelt ons iets over de structuur en complexiteit van shapefiles, over wereldwijde coördinatiesystemen en types van ruimtelijke data (punten, lijnen, polygons en raster). **R** kan hier goed mee werken.\n\nHet pakket `sf` (Simple Features) van de Nederlander Edzer Pebesma en anderen (https://r-spatial.github.io/sf/PROPOSAL.html) is hier geschikt voor. Visualisatie en analyse kan binnen dit platform en met bepaalde codes worden uitgevoerd. Maar hiervoor moet je wel `sf` hebben geinstalleerd. Vervolgens moet je het pakket binnenhalen.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary (sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.10.2, GDAL 3.4.2, PROJ 8.2.1; sf_use_s2() is TRUE\n```\n:::\n:::\n\n\nIn het boek wordt aangegeven waar je de open data kunt vinden. Ik heb de data hier opgeslagen en deze met `sf` binnengehaald. Het zijn 178 observaties met 17 variabelen. Als je goed kijkt, zie je dat de laatste variabele een geografische variabele is. We zien ook het coördinatiesysteem dat hier gebruikt wordt (NAD83). Met `View()` of `head()` kun je dataset beter bekijken.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntracts_geo<-st_read(\"data8a/Tracts_Boston BARI.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `Tracts_Boston BARI' from data source \n  `/Users/harriejonkman/Desktop/HARRIE/HHQuarto/HHquarto/posts/2023-09-04-slimme-steden/data8a/Tracts_Boston BARI.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 178 features and 16 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -71.19115 ymin: 42.22788 xmax: -70.98471 ymax: 42.40493\nGeodetic CRS:  NAD83\n```\n:::\n:::\n\nAls je iets meer wilt weten over het coördinatiesysteem, kun je dat zo doen;\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(tracts_geo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCoordinate Reference System:\n  User input: NAD83 \n  wkt:\nGEOGCRS[\"NAD83\",\n    DATUM[\"North American Datum 1983\",\n        ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4269]]\n```\n:::\n:::\n\n\n### Plotting a shapefile\n\nLaten we nu de shapefile beter bekijken. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(tracts_geo)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: plotting the first 9 out of 16 attributes; use max.plot = 16 to plot\nall\n```\n:::\n\n::: {.cell-output-display}\n![](slimmesteden_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nHet laat de eerste tien variabelen zien. \n\nAls we alleen de kaart van Bosten willen zien, dan plotten we alleen de laatste, de geografische variabele.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(tracts_geo))\n```\n\n::: {.cell-output-display}\n![](slimmesteden_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\nHier kun je ook een enkele variabele aan toevoegen, bv. `Res`, de variabele die aangeeft op de wijk (census tract) residentieel of niet is. Laten wel residentieel rood afdrukken.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(tracts_geo))\nplot(st_geometry(tracts_geo[tracts_geo$Res==1,]),\n     add=TRUE, col='red')\n```\n\n::: {.cell-output-display}\n![](slimmesteden_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\nMaar wat als we een continue variabele willen afdrukken, bv populatie in 2010?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(tracts_geo$POP100, main = 'Population in 2010', \n     breaks = 'quantile')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in plot.window(...): \"breaks\" is not a graphical parameter\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in plot.xy(xy, type, ...): \"breaks\" is not a graphical parameter\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in axis(side = side, at = at, labels = labels, ...): \"breaks\" is not a\ngraphical parameter\n\nWarning in axis(side = side, at = at, labels = labels, ...): \"breaks\" is not a\ngraphical parameter\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in box(...): \"breaks\" is not a graphical parameter\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in title(...): \"breaks\" is not a graphical parameter\n```\n:::\n\n::: {.cell-output-display}\n![](slimmesteden_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nIn geval van een continue variabele moeten we het anders uitdrukken en niet `$` maar `[]` gebruiken.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(tracts_geo['POP100'], main = 'Population in 2010', \n     breaks = 'quantile')\n```\n\n::: {.cell-output-display}\n![](slimmesteden_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Een kaart maken\nLaten we nu een kaart maken met meer informatie en dat betekent dat we met verschillende lagen gaan werken om het helemaal naar onze hand te zetten. We volgen nu enkele stappen:   \n1. we importeren en voegen eerst aanvullende data toe aan het databestand.     \n2. Daarna creëren we een basis kaart.    \n3. Dan maken we een kaart met verschillende lagen.    \n4. Tot slot passen we deze helemaal aan.\n\n\n### 1. Importeren en toevoegen van aanvullende informatie\n\nDe shapefill omvat de 178 census tracts van Boston-stad, zeg maar de wijken. Deze file combineren we met een andere dataset met aanvullende gegevens. Dat zit in dit excelsheet dat je zo kunt binnenhalen zoals O'Brien in zijn boek beschrijft (en zoals opendata zijn binnen te halen). Dat heb ik gedaan en je vindt het hier. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemographics<-read.csv(\"data8a/ACS_1418_TRACT.csv\")\n```\n:::\n\n\nCombineer beide bestanden op basis van een sleutelvariabele (in dit geval `CT_ID_10`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntracts_geo<-merge(tracts_geo,demographics,by='CT_ID_10',all.x=TRUE)\n```\n:::\n\n\n\n### Creëren van een basiskaart\n\nWe hebben eerst een basismap nodig waarop we onze kaart plaatsen. Daarin zien we Boston in het geheel. Hiervoor hebben `ggplot2` nodig en `ggmap`. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(ggmap)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nGoogle's Terms of Service: https://cloud.google.com/maps-platform/terms/.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nPlease cite ggmap if you use it! See citation(\"ggmap\") for details.\n```\n:::\n\n```{.r .cell-code}\nBoston<-get_map(location=c(left = -71.193799, \n                           bottom = 42.22, \n                           right = -70.985746, \n                           top = 42.43),\n                source=\"stamen\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1237/1513.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1238/1513.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1239/1513.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1240/1513.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1237/1514.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1238/1514.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1239/1514.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1240/1514.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1237/1515.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1238/1515.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1239/1515.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1240/1515.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1237/1516.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1238/1516.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1239/1516.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1240/1516.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1237/1517.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1238/1517.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1239/1517.png\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSource : http://tile.stamen.com/terrain/12/1240/1517.png\n```\n:::\n\n```{.r .cell-code}\nBostonmap<-ggmap(Boston)\nBostonmap\n```\n\n::: {.cell-output-display}\n![](slimmesteden_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n### 3. Maken van een kaart met verschillende lagen\n\nNu kunnen met verschillende lagen werken en de twee kaarten aan elkaar koppelen. Dat doen we zo als de residentiële variabele zichtbaar willen maken. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nBostonmap + geom_sf(data=tracts_geo, aes(fill=as.factor(Res)),\n                    inherit.aes = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n:::\n\n::: {.cell-output-display}\n![](slimmesteden_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nJe kunt het ook zo doen.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggmap(Boston) + geom_sf(data=tracts_geo, aes(fill=as.factor(Res)),\n                        inherit.aes = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n:::\n\n::: {.cell-output-display}\n![](slimmesteden_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nJe kunt ook een andere variabele gebruiken.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBostonmap + geom_sf(data=tracts_geo, aes(fill=MedHouseIncome),\n                    inherit.aes = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n:::\n\n::: {.cell-output-display}\n![](slimmesteden_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n### 4. Naar de hand zetten\n\nLaten we het nu verder naar onze hand zetten. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nBostonmap+ geom_sf(data=tracts_geo[tracts_geo$POP100>500,], \n                   aes(fill=MedHouseIncome),inherit.aes = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n:::\n\n::: {.cell-output-display}\n![](slimmesteden_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nWe kunnen ook andere kleur gebruiken, bv. een die gaat van groen (hoog) naar rood (laag) , dat overgaat vanaf het gemiddelde.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBostonmap+ geom_sf(data=tracts_geo[tracts_geo$POP100>500,], \n                   aes(fill=MedHouseIncome),inherit.aes = FALSE)+ \n  scale_fill_gradient(high = \"green\", low = \"red\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n:::\n\n::: {.cell-output-display}\n![](slimmesteden_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nLaten we het label aanpassen en er Nederlands van maken. \n\n::: {.cell}\n\n```{.r .cell-code}\nBostonmap+ geom_sf(data=tracts_geo[tracts_geo$POP100>500,], \n                   aes(fill=MedHouseIncome),inherit.aes = FALSE)+ \n  scale_fill_gradient(high = \"red\", low = \"green\")+\n  labs(fill='Mediaan Huishouden \\nInkomen')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n:::\n\n::: {.cell-output-display}\n![](slimmesteden_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n## Literatuur\n\nO’Brien, D.T. (2022). *Urban Informatics: Using Big Data to Understand and Serve Communities*. Boca Raton, FL, Chapman Hall / CRC Press.\n\nzie ook: [hier](https://ui.danourban.com/)",
    "supporting": [
      "slimmesteden_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}