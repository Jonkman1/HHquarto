{
  "hash": "3ed20cd40abda3a3eb4511d8e5c28b62",
  "result": {
    "markdown": "---\ntitle: \"BBC en data-journalisme\"\ndescription: |\n  Een blog over hoe de BBC omgaat met visualisatie en data-journalisme\nauthor:\n  - name: R-bloggers, bewerking Harrie Jonkman.\n    url: https://Harriejonkman.nl\ndate: 02-20-2019\noutput:\n  distill::distill_article:\n    self_contained: false\n---\n\n\n\n\n## Hoe kunnen we grafieken in BBC-stijl produceren\n\nBij het BBC datateam hebben ze een R-pakket en een R-kookboek ontwikkeld. Met dat pakket en kookboek wordt het proces van het maken van publicatieklare grafieken in hun huisstijl geautomatiseerd. Met behulp van R's `ggplot2`-pakket wordt er een meer reproduceerbaar proces van gemaakt. Voor nieuwe R-gebruikers wordt het zo ook gemakkelijker gemaakt om deze grafieken te maken.\n\n\n![](bbplot_example_plots.png)\n\n\nHet kookboek, dat in februari 2019 [hier](https://www.r-bloggers.com/create-data-visualizations-like-bbc-news-with-the-bbcs-r-cookbook/) verscheen, heb ik in het Nederlands vertaald om zelf goed door te krijgen hoe het allemaal werkt. Het kookboek en deze Nederlandse versie wil iedereen helpen om dit soort grafieken te maken:\n\n  \n\nLaten we eens zien hoe we de verschillende elementen van deze grafieken in elkaar kunnen zetten. Maar **eerst eens enkele administratieve zaken...**\n\n### Laad eerst alle pakketten die je nodig hebt in R\n\nEen paar van de stappen in dit kookboek - om grafieken in R in het algemeen te kunnen maken - vereisen dat bepaalde pakketten worden geïnstalleerd en geladen. Zo hoeft u ze niet één voor één te installeren en te laden. Door de `p_load`-functie in het `pacman`-pakket kunt u ze allemaal tegelijk laden met de volgende code. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Deze code installeert pacman als je deze al niet geinstalleerd hebt - heb je dat wel gedaan dan wordt pacman (of de pakketten die erin zitten) gewoon geladen\nif(!require(pacman))install.packages(\"pacman\")\n\npacman::p_load('dplyr', 'tidyr', 'gapminder',\n               'ggplot2',  'ggalt',\n               'forcats', 'R.utils', 'png', \n               'grid', 'ggpubr', 'scales',\n               'bbplot')\n```\n:::\n\n\n### Installeer in ieder geval het bbplot pakket\n\n`bbplot` staat niet op CRAN (het algemene platform voor R-pakketten). U moet het direct vanaf Github installeren met behulp van `devtools`. \n\nAls u het `devtools`-pakket niet heeft geïnstalleerd, moet u ook de eerste regel in de code hieronder uitvoeren.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# dit eerst doen, als u het pakket niet heeft: \n# install.packages('devtools')\ndevtools::install_github('bbc/bbplot')\n```\n:::\n\n\nVoor meer informatie over `bbplot`-pakket, bekijk het volgende [Github repo](https://github.com/bbc/bbplot). Dat wat u moet weten over het gebruik van het pakket en de functies, is hieronder gedetailleerd te vinden. \n\nWanneer u het pakket hebt gedownload en met succes hebt geïnstalleerd, bent u in staat om grafieken te gaan maken. \n\n### Hoe werkt dat `bbplot`-pakket eigenlijk?\n\nHet pakket heeft twee functies, `bbc_style()` en `finalise_plot()`.\n\n`bbc_style()`: heeft geen argumenten en wordt toegevoegd aan de ggplot 'keten' nadat je een plot hebt gemaakt. Wat het doet is over het algemeen tekstgrootte, lettertype en kleur, aslijnen, aslijnen, as-tekst, marges en vele andere standaardgrafiekonderdelen in BBC-stijl. Die zijn geformuleerd op basis van aanbevelingen en feedback van het ontwerpteam.\n\nMerk op dat kleuren voor lijnen in het geval van een lijndiagram bijvoorbeeld of balken voor een staafdiagram, niet uit het kader van de `bbc_style()` functie komen. Die moeten expliciet worden ingesteld in uw standaard `ggplot`-grafiekfuncties.\n\nDe code hieronder laat zien hoe de `bbc_style()` gebruikt moet worden binnen de standaard workflow om grafieken te maken. Dit is een voorbeeld van een zeer eenvoudige lijndiagram. De data waar gebruik van wordt gemaakt komen uit het `gapminder`-pakket.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Eerst de data van Malawi uit het pakket Gapminder halen\nline_df <- gapminder %>%\n  filter(country == \"Malawi\") \n\n#Een grafiek maken\nline <- ggplot(line_df, aes(x = year, y = lifeExp)) +\n  geom_line(colour = \"#1380A1\", size = 1) +\n  geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +\n  bbc_style() +\n  labs(title=\"Langer leven\",\n       subtitle = \"Levensverwachting Malawi, 1952-2007\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nDit is wat de `bbc_style()`-functie eigenlijk onder de motorkap doet. Het wijzigt in wezen bepaalde argumenten in de `thema` functie van `ggplot2`.\n\nHet eerste argument is bijvoorbeeld het instellen van het lettertype, de grootte, het lettertype en de kleur van het titelelement van de grafiek.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nfunction () \n{\n    font <- \"Helvetica\"\n    ggplot2::theme(plot.title = ggplot2::element_text(family = font, \n        size = 28, face = \"bold\", color = \"#222222\"), plot.subtitle = ggplot2::element_text(family = font, \n        size = 22, margin = ggplot2::margin(9, 0, 9, 0)), plot.caption = ggplot2::element_blank(), \n        legend.position = \"top\", legend.text.align = 0, legend.background = ggplot2::element_blank(), \n        legend.title = ggplot2::element_blank(), legend.key = ggplot2::element_blank(), \n        legend.text = ggplot2::element_text(family = font, size = 18, \n            color = \"#222222\"), axis.title = ggplot2::element_blank(), \n        axis.text = ggplot2::element_text(family = font, size = 18, \n            color = \"#222222\"), axis.text.x = ggplot2::element_text(margin = ggplot2::margin(5, \n            b = 10)), axis.ticks = ggplot2::element_blank(), \n        axis.line = ggplot2::element_blank(), panel.grid.minor = ggplot2::element_blank(), \n        panel.grid.major.y = ggplot2::element_line(color = \"#cbcbcb\"), \n        panel.grid.major.x = ggplot2::element_blank(), panel.background = ggplot2::element_blank(), \n        strip.background = ggplot2::element_rect(fill = \"white\"), \n        strip.text = ggplot2::element_text(size = 22, hjust = 0))\n}\n<bytecode: 0x0000000012866c40>\n<environment: namespace:bbplot>\n```\n:::\n:::\n\n\nU kunt deze instellingen voor uw grafiek wijzigen of extra thema-argumenten toevoegen. Dit kan door `thema`-functie aan te roepen met de argumenten die u wilt. Maar, let op: om het te laten werken, moet u de `bbc_style` functie hebben aangeroepen. Anders zal `bbc_style()` deze overrulen. \n\nDit voegt enkele rasterlijnen toe, door extra thema-argumenten toe te voegen aan wat er in de `bbc_style()` functie zit. Er zitten verschillende gelijkaardige voorbeelden in het kookboek.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme(panel.grid.major.x = element_line(color=\"#cbcbcb\"), \n        panel.grid.major.y=element_blank())\n```\n:::\n\n\n\n### Sla jouw afgeronde grafiek op \n\nNa het toevoegen van de `bbc_style()` aan uw grafiek is er nog een stap om uw grafiek klaar te maken voor publicatie. `finalise_plot()`, de tweede functie van het `bbplot`-pakket, zal de titel links uitlijnen, ondertitelen en de footer toevoegen met een bron en een afbeelding in de rechter benedenhoek van uw grafiek. Het zal het ook opslaan op de door u opgegeven locatie. De functie heeft vijf argumenten:\n\n\nHier zijn de argumenten van de functie:\n`finalise_plot(plot_name, source, save_filepath, width_pixels = 640, height_pixels = 450)`.\n\n* `plot_name`: de variabelenaam die u uw plot heeft genoemd, bijvoorbeeld voor het voorbeeld hierboven zou \"lijn\" de `plot_name` zijn    \n* source: de brontekst die u linksonder in uw plot wilt weergeven. U moet het woord `\"Source: \"Bron:\" `voor het woord typen, dus bijvoorbeeld `source = \"Bron\": Gapminder\"` zou de juiste manier zijn om dat te doen.\n* `Save_filepath`: type hier het precieze bestandspad waarin u uw afbeelding wilt opslaan, inclusief de `.png` extensie aan het einde. Dit is afhankelijk van uw werkmap en of u zich in een specifiek R-project bevindt. Een voorbeeld van een bestandspad zou zijn: `Desktop/R_projecten/figuren/lijngrafiek.png`.\n* `width_pixels`: dit is standaard ingesteld op 640px, dus noem dit argument alleen als u wilt dat de grafiek een andere breedte heeft, en geef aan wat u wilt dat het is. \n* `hoogte_pixels`: dit is standaard ingesteld op 450px, dus noem dit argument alleen als u wilt dat de grafiek een andere hoogte heeft en geef aan wat u wilt dat het is. \n* `logo_image_path`: dit argument specificeert het pad voor het beeld/logo in de rechter benedenhoek van het diagram. De standaardinstelling is voor een PNG-bestand met een achtergrond die overeenkomt met de achtergrondkleur van het diagram. Dus specificeer het argument niet als u wilt dat het zonder logo verschijnt. Als u uw eigen logo wilt toevoegen, hoeft u alleen het pad naar uw PNG-bestand te specificeren. Het pakket is opgezet met een brede en dunne afbeelding in gedachten.\n\n\nVoorbeeld van hoe de `finalise_plot()` wordt gebruikt in een standaard workflow. Deze functie wordt aangeroepen zodra u uw grafiekgegevens, titels en de `bbc_style()` eraan hebt toegevoegd:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinalise_plot(plot_name = my_line_plot,\n              source = \"Bron: Gapminder\",\n              save_filepath = \"filename_that_my_plot_should_be_saved_to.png\",\n              width_pixels = 640,\n              height_pixels = 450,\n              logo_image_path = \"placeholder.png\")\n```\n:::\n\n\nAls u eenmaal uw plot hebt gemaakt en er relatief tevreden mee bent, kunt u de `finalise_plot()` functie gebruiken om de laatste aanpassingen te maken en uw grafiek op te slaan zodat u er buiten RStudio naar kunt kijken.\n\n\nHet is belangrijk om te vermelden dat het een goed idee is om dit in een vroeg stadium te doen omdat de positie van de tekst en andere elementen niet nauwkeurig worden weergegeven in het RStudio Plots paneel. Hier is het afhankelijk van de grootte en de aspect ratio die u wilt dat uw plot verschijnt. Het opslaan en openen van de bestanden geeft u een nauwkeurige weergave van hoe de grafiek eruit ziet.\n\n\nDe `finalise_plot()`-functie doet meer dan alleen het opslaan van je grafiek. Het lijnt ook de titel en ondertiteling links uit zoals standaard is voor BBC-grafieken, voegt een footer toe met het logo aan de rechterkant en laat je de brontekst aan de linkerkant invoeren.\n\n\nDus hoe kunt u de bovenstaande voorbeeldplot opslaan?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinalise_plot(plot_name = line,\n              source = \"Bron: Gapminder\",\n              save_filepath = \"images/line_plot_finalised_test.png\",\n              width_pixels = 640,\n              height_pixels = 550)\n```\n:::\n\n\n***\n\n## Maak een lijn figuur\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Data prepareren\nline_df <- gapminder %>%\n  filter(country == \"China\") \n\n#Grafiek maken\nline <- ggplot(line_df, aes(x = year, y = lifeExp)) +\n  geom_line(colour = \"#1380A1\", size = 1) +\n  geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +\n  bbc_style() +\n  labs(title=\"Langer leven\",\n       subtitle = \"Levensverwachting China, 1952-2007\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Make een grafiek met verschillende lijnen\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Data prepareren\nmultiple_line_df <- gapminder %>%\n  filter(country == \"China\" | country == \"United States\") \n\n#Grafiek maken\nmultiple_line <- ggplot(multiple_line_df, aes(x = year, y = lifeExp, colour = country)) +\n  geom_line(size = 1) +\n  geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +\n  scale_colour_manual(values = c(\"#FAAB18\", \"#1380A1\")) +\n  bbc_style() +\n  labs(title=\"Langer leven\",\n       subtitle = \"Levensverwachting China en VS\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## Maak een staafdiagram\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Data prepareren\nbar_df <- gapminder %>%\n  filter(year == 2007 & continent == \"Africa\") %>%\n  arrange(desc(lifeExp)) %>%\n  head(5)\n\n#Grafiek maken\nbars <- ggplot(bar_df, aes(x = country, y = lifeExp)) +\n  geom_bar(stat=\"identity\", \n           position=\"identity\", \n           fill=\"#1380A1\") +\n  geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +\n  bbc_style() +\n  labs(title=\"Reunion is het hoogst\",\n       subtitle = \"Afrika's hoogste levensverwachting, 2007\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## Maak een gestapelde staaf diagram\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Data prepareren\nstacked_df <- gapminder %>% \n  filter(year == 2007) %>%\n  mutate(lifeExpGrouped = cut(lifeExp, \n                    breaks = c(0, 50, 65, 80, 90),\n                    labels = c(\"-50\", \"50-65\", \"65-80\", \"80+\"))) %>%\n  group_by(continent, lifeExpGrouped) %>%\n  summarise(continentPop = sum(as.numeric(pop)))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'continent'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n#Order in de stacks door het veranderen van factorniveaus\nstacked_df$lifeExpGrouped = factor(stacked_df$lifeExpGrouped, levels = rev(levels(stacked_df$lifeExpGrouped)))\n\n#Grafiek creeren\nstacked_bars <- ggplot(data = stacked_df, \n                       aes(x = continent,\n                           y = continentPop,\n                           fill = lifeExpGrouped)) +\n  geom_bar(stat = \"identity\", \n           position = \"fill\") +\n  bbc_style() +\n  scale_y_continuous(labels = scales::percent) +\n  scale_fill_viridis_d(direction = -1) +\n  geom_hline(yintercept = 0, size = 1, colour = \"#333333\") +\n  labs(title = \"Hoe levensverwachting varieert\",\n       subtitle = \"% bevolking binnen bandbreedtes van levensverwachting, 2007\") +\n  theme(legend.position = \"top\", \n        legend.justification = \"left\") +\n  guides(fill = guide_legend(reverse = TRUE))\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nDit voorbeeld toont proporties, maar u wilt misschien een gestapelde staafdiagram maken met nummerwaarden - dit is eenvoudig te veranderen!\n\n\nDe waarde die wordt doorgegeven aan het `position`-argument zal bepalen of uw gestapelde grafiek verhoudingen of werkelijke waarden toont. \n\n\n`positie = \"fill\"` zal uw stapels vertonen als proporties, en `position = \"identity\"` zal getalwaarden laten zien. \n\n## Maak een gegroepeerde staafdiagram\n\nHet maken van een gegroepeerde staafdiagram lijkt erg op het maken van een staafdiagram. \n\nJe hoeft alleen maar `position = \"identity\"` te veranderen in `position=\"dodge\"` en de `vulling` wordt esthetisch.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Data prepareren\ngrouped_bar_df <- gapminder %>%\n  filter(year == 1967 | year == 2007) %>%\n  select(country, year, lifeExp) %>%\n  spread(year, lifeExp) %>%\n  mutate(gap = `2007` - `1967`) %>%\n  arrange(desc(gap)) %>%\n  head(5) %>%\n  gather(key = year, \n         value = lifeExp,\n         -country,\n         -gap) \n  \n#Grafiek maken\ngrouped_bars <- ggplot(grouped_bar_df, \n                       aes(x = country, \n                           y = lifeExp, \n                           fill = as.factor(year))) +\n  geom_bar(stat=\"identity\", position=\"dodge\") +\n  geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +\n  bbc_style() +\n  scale_fill_manual(values = c(\"#1380A1\", \"#FAAB18\")) +\n  labs(title=\"Wij leven langer\",\n       subtitle = \"Grootste toename levensverwachting, 1967-2007\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n## Maak een halter grafiek\n\nEen andere manier om het verschil te laten zien is een 'dumbbell'-grafiek:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"ggalt\")\nlibrary(\"tidyr\")\n\n#Data prepareren\ndumbbell_df <- gapminder %>%\n  filter(year == 1967 | year == 2007) %>%\n  select(country, year, lifeExp) %>%\n  spread(year, lifeExp) %>%\n  mutate(gap = `2007` - `1967`) %>%\n  arrange(desc(gap)) %>%\n  head(10)\n\n#Grafiek maken\nggplot(dumbbell_df, aes(x = `1967`, xend = `2007`, y = reorder(country, gap), group = country)) + \n  geom_dumbbell(colour = \"#dddddd\",\n                size = 3,\n                colour_x = \"#FAAB18\",\n                colour_xend = \"#1380A1\") +\n  bbc_style() + \n  labs(title=\"Wij leven langer\",\n       subtitle=\"Grootste toename van levensverwachting, 1967-2007\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n## Maak een histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist_df <- gapminder %>%\n  filter(year == 2007)\n\nggplot(hist_df, aes(lifeExp)) +\n  geom_histogram(binwidth = 5, colour = \"white\", fill = \"#1380A1\") +\n  geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +\n  bbc_style() +\n  scale_x_continuous(limits = c(35, 95),\n                     breaks = seq(40, 90, by = 10),\n                     labels = c(\"40\", \"50\", \"60\", \"70\", \"80\", \"90 jaar\")) +\n  labs(title = \"Hoe levensverwachting varieert\",\n       subtitle = \"Verdeling levensverwachting, 2007\")\n```\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n## Breng veranderingen aan in de legenda\n\n### Verwijder de legenda\n\nVerwijder de legende - het is beter om de gegevens direct te labelen met tekstannotaties.\n\nGebruik `guides(colour=FALSE)` om de legende te verwijderen voor een specifieke esthetiek (vervang `kleur` door de relevante esthetiek). \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiple_line + guides(colour=FALSE)\n```\n:::\n\n\nU kunt ook alle legenden in één keer verwijderen met behulp van `theme(legend.position = \"none\")`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiple_line + theme(legend.position = \"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n### Verander de positie van de legenda\n\nDe standaardpositie van de legenda staat bovenaan uw grafiek. Verplaats de legenda naar links, rechts of onderaan buiten de plot met:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiple_line + theme(legend.position = \"right\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\nOm echt precies te zijn over waar we onze legenda naartoe willen, in plaats van \"rechts\" of \"boven\" te specificeren om de algemene positie van waar de legende in onze grafiek verschijnt te veranderen, kunnen we het specifieke coördinaten geven. \n\n\nBijvoorbeeld `legend.position=c(0.98,0.1)` zal de legenda naar rechtsonder verplaatsen. Ter referentie, c(0,0) is linksonder, c(1,0) is rechtsonder, c(0,1) is linksboven en zo verder). Het vinden van de exacte positie kan wat vallen en opstaan met zich meebrengen. \n\n\nOm de exacte positie te controleren waar de legenda in uw definitieve plot verschijnt, moet u het bestand controleren dat is opgeslagen nadat u uw `finalise_plot()` functie hebt uitgevoerd, aangezien de positie relevant is voor de afmetingen van de grafiek.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  multiple_line + theme(legend.position = c(0.115,1.05),\n                      legend.direction = \"horizontal\") +  \n  labs(title=\"Langer leven\",\n       subtitle = \"Levensverwachting China en VS\")\n```\n:::\n\n\nOm de legenda tegen de linkerkant van uw grafiek te laten aankomenen, kan het makkelijker zijn om een negatieve linkermarge voor de legenda in te stellen met behulp van `legend.margin`. De syntaxis is `margin(top, right, bottom, left)`. \n\nU zult moeten experimenteren om het juiste getal te vinden om de marge voor uw grafiek in te stellen. Sla het op met `finalise_plot()` en bekijk hoe het eruit ziet.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  + theme(legend.margin = margin(0, 0, 0, -200))\n```\n:::\n\n\n### Verwijder de titel van de legenda\n\nVerwijder de titel van de legenda door uw `thema()`aan te passen. Vergeet niet dat eventuele wijzigingen aan het thema moeten worden toegevoegd nadat u `bbc_style()` hebt opgeroepen!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n+ theme(legend.title = element_blank())\n```\n:::\n\n\n### Gooi de volgorde van de legenda om\n\nSoms moet u de volgorde van uw legenda wijzigen, zodat deze overeenkomt met de volgorde van uw balken. Hiervoor heb je `guides` nodig:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n+ guides(fill = guide_legend(reverse = TRUE))\n```\n:::\n\n\n### Verander de layout van jouw legenda\n\nAls u veel waarden in uw legenda hebt, moet u de lay-out misschien om esthetische redenen aanpassen. \n\n\nU kunt het aantal rijen opgeven dat u wilt dat u in uw legenda door als argument `guides` te gebruiken gebruiken. Het onderstaande codefragment, bijvoorbeeld, zal een legende met 4 rijen maken:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n+ guides(fill = guide_legend(nrow = 4, byrow = T))\n```\n:::\n\n\nHet kan nodig zijn om `fill` in de bovenstaande code te veranderen in een esthetiek die uw legenda beschrijft, zoals `size`, `colour`, enz.\n\n\n### Laat de legendasymbolen er anders uit zien\n\nU kunt het standaardinstelling van de legendesymbolen overschrijven, zonder de manier waarop ze in de plot verschijnen, door het argument `override.aes` toe te voegen aan `guides`. \n\nHet onderstaande maakt bijvoorbeeld de grootte van de legendesymbolen groter:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n+ guides(fill = guide_legend(override.aes = list(size = 4))))\n```\n:::\n\n\n### Breng wat ruimte aan tussen de legenda labels\n\nDe standaard `ggplot`-legenda heeft bijna geen ruimte tussen individuele legenda-items. Niet ideaal.\n\nU kunt ruimte toevoegen door de schaallabels handmatig te wijzigen. \n\nAls u bijvoorbeeld de kleur van uw geoms zo hebt ingesteld dat deze afhankelijk is van uw gegevens, krijgt u een legenda voor de kleur en kunt u de exacte labels aanpassen om wat extra ruimte te krijgen met behulp van het onderstaande fragment:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n+ scale_colour_manual(labels = function(x) paste0(\" \", x, \"  \"))\n```\n:::\n\n\nAls uw legende iets anders laat zien, moet u de code dienovereenkomstig wijzigen. Bijvoorbeeld, voor het vullen heeft u `scale_fill_manual()` in plaats daarvan nodig. \n\n\n## Pas de assen aan\n\n### Gooi de coordinaten van een plot om\n\nVoeg `coord_flip()` toe om verticale staven horizontaal te maken:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbars <- bars + coord_flip()\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n### Toevoegen/weghalen van gridlijnen\n\nHet standaard thema heeft alleen rasterlijnen voor de y-as. Voeg x rasterlijnen toe met `panel.grid.major.x = element_line`. \n\n(Verwijder op dezelfde manier de rasterlijnen op de y-as met `panel.grid.major.y=element_blank()`)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbars <- bars + coord_flip() +\n  theme(panel.grid.major.x = element_line(color=\"#cbcbcb\"), \n        panel.grid.major.y=element_blank())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCoordinate system already present. Adding new coordinate system, which will replace the existing one.\n```\n:::\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n### Verander de astekst met de hand\n\nU kunt de tekstlabels van de assen vrij wijzigen met `scale_y_continuous` of `scale_x_continuous`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbars <- bars + scale_y_continuous(limits=c(0,85),\n                   breaks = seq(0, 80, by = 20),\n                   labels = c(\"0\",\"20\", \"40\", \"60\", \"80 jaar\"))\n\nbars\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\nDit specificeert ook de grenzen van uw grafiek en waar u as-tekens wilt hebben.\n\n### Voeg duizend scheidingstekens toe aan u as-labels\n\nU kunt aangeven dat u wilt dat uw as-tekst duizend scheidingstekens heeft met een argument  `schale_y_continuous`. \n\nEr zijn twee manieren om dit te doen, een in basis R die een beetje lastig is:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n+ scale_y_continuous(labels = function(x) format(x, big.mark = \",\",\n                                                 scientific = FALSE))\n```\n:::\n\n\nDe tweede manier is gebaseerd op het `scales`- pakket, maar is veel beknopter: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n+ scale_y_continuous(labels = scales::comma)\n```\n:::\n\n\n### Voeg een percentagesymbool toe aan jouw aslabels\n\nDit is ook gemakkelijk met een argument toe te voegen aan `scale_y_continuous`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n+ scale_y_continuous(labels = function(x) paste0(x, \"%\"))\n```\n:::\n\n\n### Verander de limieten van de plot\n\nDe lange manier om de grenzen van uw grafiek expliciet in te stellen is met `scale_y_continuous` zoals hierboven. Maar als u de pauzes of labels niet hoeft op te geven, dan is dat met `xlim` of `ylim`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbars + ylim(c(0,500))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'y' is already present. Adding another scale for 'y', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n### Voeg astitels toe\n\nOns standaardthema heeft geen as-titels, maar u kunt ze misschien handmatig toevoegen. Dit doet u door `theme()` - merk op dat je dit moet doen na de aanroep naar `bbc_style()` anders worden je wijzigingen overruled:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n+ theme(axis.title = element_text(size = 18))\n```\n:::\n\n\n### Pas astitels aan\n\nAls u in de assen titels toevoegt, zijn dit standaard de kolomnamen van uw dataset. U kunt dit veranderen door `labs()`op te roepen in wat u doet. \n\nAls u bijvoorbeeld wilt dat de x-as de titel \"Ik ben een as\" krijgt en de y-as label leeg is, dan is dit het formaat:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n+ labs(x = \"I'm an axis\", \n       y = \"\")\n```\n:::\n\n\n### Add axis ticks\n\nU kunt as-streepjes toevoegen door `axis.ticks.x` of `axis.ticks.y` toe te voegen aan uw `theme`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiple_line + theme(\n  axis.ticks.x = element_line(colour = \"#333333\"), \n  axis.ticks.length =  unit(0.26, \"cm\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\n## Toevoegen van annotaties\n\n### Voeg een annotatie toe\n\nDe eenvoudigste manier om een tekstannotatie toe te voegen aan uw grafiek is met behulp van `geom_label`:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiple_line + geom_label(aes(x = 1980, y = 45, label = \"Ik ben geen annotatie!\"), \n                           hjust = 0, \n                           vjust = 0.5, \n                           colour = \"#555555\", \n                           fill = \"white\", \n                           label.size = NA, \n                           family=\"Helvetica\", \n                           size = 6)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n\nDe exacte positionering van de annotatie zal afhangen van de `x` en `y` argumenten (wat een beetje lastig is!) en de tekstuitlijning, met behulp van `hjust` en `vjust` - maar meer van dat hieronder.\n\nVoeg regelafbrekingen waar nodig in uw label toe met `n\\` en stel de regelhoogte in met `lineheight`. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiple_line <- multiple_line + \n  geom_label(aes(x = 1980, y = 45, label = \"Ik ben een vrij lange\\nannotatie over\\ndrie rijen\"), \n             hjust = 0, \n             vjust = 0.5, \n             lineheight = 0.8,\n             colour = \"#555555\", \n             fill = \"white\", \n             label.size = NA, \n             family=\"Helvetica\", \n             size = 6) \n```\n:::\n\n\nLaten we onze directe labels erin krijgen!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiple_line <- multiple_line + \n  theme(legend.position = \"none\") + \n  xlim(c(1950, 2011)) +\n  geom_label(aes(x = 2007, y = 79, label = \"US\"), \n             hjust = 0, \n             vjust = 0.5, \n             colour = \"#1380A1\", \n             fill = \"white\", \n             label.size = NA, \n             family=\"Helvetica\", \n             size = 6) +\n  geom_label(aes(x = 2007, y = 72, label = \"China\"), \n             hjust = 0, \n             vjust = 0.5, \n             colour = \"#FAAB18\", \n             fill = \"white\", \n             label.size = NA, \n             family=\"Helvetica\", \n             size = 6)\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\n### Tekst links en rechts uitlijnen\n\nDe argumenten `hjust` en `vjust` dicteren horizontale en verticale tekstuitlijning. Ze kunnen een waarde tussen 0 en 1 hebben, waarbij 0 links-uitlijnend en 1 rechts-uitlijnend is (of onder- en boven-uitlijnend voor verticale tekstuitlijning).\n \n\n### Voeg labels toe op basis van jouw data\n\nMet de bovenstaande methode voor het toevoegen van annotaties aan uw grafiek kunt u de x- en y-coördinaten precies aangeven. Dit is erg handig als we een tekstannotatie op een bepaalde plaats willen toevoegen, maar het zou erg vervelend zijn om te herhalen. \n\nGelukkig, als u labels wilt toevoegen aan al uw datapunten, kunt u in plaats daarvan eenvoudigweg de positie instellen op basis van uw gegevens. \n\nLaten we zeggen dat we gegevenslabels willen toevoegen aan onze staafdiagram:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlabelled.bars <- bars +\n  geom_label(aes(x = country, y = lifeExp, label = round(lifeExp, 0)),\n             hjust = 1, \n             vjust = 0.5, \n             colour = \"white\", \n             fill = NA, \n             label.size = NA, \n             family=\"Helvetica\", \n             size = 6)\n\nlabelled.bars\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n\nBovenstaande code voegt automatisch één tekstlabel toe voor elk continent zonder dat we vijf keer `geom_label` moeten toevoegen. \n\n(Als je in de war raakt over waarom we de `x` instellen als de continenten en `y` als levensverwachting, als de grafiek ze andersom lijkt te tekenen, dan is dat omdat we de coördinaten van de plot hebben omgedraaid met `coord_flip()`, wat je kunt doen [lees meer over hier](https://github.com/bbc/vjdata.rcookbook#flip-the-coordinates-of-a-plot).)\n\n### Voeg links uitgelijnde labels toe aan jouw staafdiagrammen\n\nAls u liever links uitgelijnde labels voor uw balken toevoegt, stelt u gewoon het `x` argument in op basis van uw gegevens, maar specificeer dan het `y` argument direct, met een numerieke waarde. \n\nDe exacte waarde van `y` hangt af van het bereik van uw gegevens. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlabelled.bars.v2 <- bars +\n  geom_label(aes(x = country, \n                 y = 4, \n                 label = round(lifeExp, 0)),\n             hjust = 0, \n             vjust = 0.5, \n             colour = \"white\", \n             fill = NA, \n             label.size = NA, \n             family=\"Helvetica\", \n             size = 6)\n\nlabelled.bars.v2\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n\n### Voeg een lijn toe\n\nVoeg een lijn toe met `geom_segment`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiple_line + geom_segment(aes(x = 1979, y = 45, xend = 1965, yend = 43), \n                             colour = \"#555555\", \n                             size=0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n:::\n\n\nHet `size`-argument specificeert de dikte van de lijn. \n\n### Voeg een gecurfte lijn toe\n\nVoor een gekromde lijn gebruikt u `geom_curve` in plaats van `geom_segment`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiple_line + geom_curve(aes(x = 1979, y = 45, xend = 1965, yend = 43), \n                           colour = \"#555555\", \n                           curvature = -0.2,\n                           size=0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-50-1.png){width=672}\n:::\n:::\n\n\nHet `curvature` argument bepaalt de kromming van de curve: 0 is een rechte lijn, negatieve waarden geven een linkse curve en positieve waarden geven een rechtse curve.\n\n\n### Voeg een pijl toe\n\nEen lijn in een pijl omzetten is vrij eenvoudig: voeg gewoon het `arrow` argument toe aan je `geom_segment` of `geom_curve`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiple_line + geom_curve(aes(x = 1979, y = 45, xend = 1965, yend = 43), \n                             colour = \"#555555\", \n                             size=0.5, \n                             curvature = -0.2,\n                             arrow = arrow(length = unit(0.03, \"npc\")))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-51-1.png){width=672}\n:::\n:::\n\n\nHet eerste argument, `unit`, stelt de grootte van de pijlpunt in. \n\n\n### Voeg een lijn over de hele figuur toe\n\nDe eenvoudigste manier om een lijn over het hele perceel toe te voegen is met `geom_vline()`, voor een verticale lijn, of `geom_hline()`, voor een horizontale lijn. \n\nOptionele extra argumenten stellen u in staat om de grootte, kleur en het type lijn te specificeren (de standaard optie is een effen lijn).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiple_line + geom_hline(yintercept = 10, size = 1, colour = \"red\", linetype = \"dashed\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-52-1.png){width=672}\n:::\n:::\n\n\nDe lijn voegt natuurlijk niet veel toe in dit voorbeeld, maar dit is handig als je iets wilt benadrukken, bijvoorbeeld een drempelwaarde of een gemiddelde waarde. \n\nHet is ook vooral handig omdat onze ontwerpstijl - zoals u misschien al hebt gemerkt in de grafieken op deze pagina - bestaat uit het toevoegen van een verticale of horizontale basislijn aan onze grafieken. Dit is de code om te gebruiken:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n+ geom_hline(yintercept = 0, size = 1, colour = \"#333333\")\n```\n:::\n\n\n## Werken met kleinere figuren\n\nKleine, meervoudige kaarten zijn eenvoudig te maken met ggplot: het heet facetteren.\n\n### Facetteren\n\nAls u gegevens hebt die u wilt visualiseren opgesplitst naar een variabele, moet u `facet_wrap` of `facet_grid` gebruiken. \n\nVoeg de variabele die je wilt delen aan deze regel code toe: facet_wrap( ~ variabele) `.\n\nEen extra argument bij facet_wrap, `ncol`, stelt u in staat om het aantal kolommen te specificeren:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Data prepareren\nfacet <- gapminder %>%\n  filter(continent != \"Americas\") %>%\n  group_by(continent, year) %>%\n  summarise(pop = sum(as.numeric(pop)))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'continent'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n#Grafiek maken\nfacet_plot <- ggplot() +\n  geom_area(data = facet, aes(x = year, y = pop, fill = continent)) +\n  scale_fill_manual(values = c(\"#FAAB18\", \"#1380A1\",\"#990000\", \"#588300\")) + \n  facet_wrap( ~ continent, ncol = 5) + \n  scale_y_continuous(breaks = c(0, 2000000000, 4000000000),\n                     labels = c(0, \"2bn\", \"4bn\")) +\n  bbc_style() +\n  geom_hline(yintercept = 0, size = 1, colour = \"#333333\") +\n  theme(legend.position = \"none\",\n        axis.text.x = element_blank()) +\n  labs(title = \"Snelle groei van Azie\",\n       subtitle = \"Populatiegroei per continent, 1952-2007\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-55-1.png){width=672}\n:::\n:::\n\n\n### Vrije schalen\n\nHet is u wellicht opgevallen dat Oceanië, met zijn relatief kleine bevolking, volledig is verdwenen in de bovenstaande grafiek. \n\nStandaard wordt bij facetteren gebruik gemaakt van vaste asschalen over de kleine veelvouden. Het is altijd het beste om dezelfde y-as schaal over kleine veelvouden te gebruiken, om misleiding te voorkomen, maar soms moet je deze onafhankelijk van elkaar instellen voor elk veelvoud, wat we kunnen doen door het argument `schales= \"free\"`. \n\nAls je alleen de schalen voor één as wilt vrijgeven, zet je het argument op `free_x` of `free_y`. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Grafiek maken\nfacet_plot_free <- ggplot() +\n  geom_area(data = facet, aes(x = year, y = pop, fill = continent)) +\n  facet_wrap(~ continent, scales = \"free\") + \n  bbc_style() +\n  scale_fill_manual(values = c(\"#FAAB18\", \"#1380A1\",\"#990000\", \"#588300\")) +\n  geom_hline(yintercept = 0, size = 1, colour = \"#333333\") +\n  theme(legend.position = \"none\",\n        axis.text.x = element_blank(),\n        axis.text.y = element_blank()) +\n  labs(title = \"Het is allemaal relatief\",\n       subtitle = \"Relatieve populatiegroei per continent, 1952-2007\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-57-1.png){width=672}\n:::\n:::\n\n\n## Doe iets anders uiteindelijk\n\n### Toename en afname van marges\n\nU kunt de marge rond bijna elk element van uw plot - de titel, ondertitels, legenda - of de grafiek zelf wijzigen. \n\nNormaal gesproken hoeft u de standaardmarges van het thema niet te wijzigen, maar als u dat wel doet, is de syntaxis `theme(ELEMENT=element_text(margin=margin(0, 5, 10, 0)))`.  \n\nDe getallen specificeren respectievelijk de boven-, rechter-, onder-, en linkermarge - maar u kunt ook direct aangeven welke marge u wilt wijzigen. Laten we bijvoorbeeld proberen de ondertitel een extra grote ondermarge te geven: \nYou can change the margin around almost any element of your plot - the title, subtitles, legend - or the plot itself. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbars + theme(plot.subtitle=element_text(margin=margin(b=75)))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-58-1.png){width=672}\n:::\n:::\n\n\nHm... misschien niet. \n\n### Exporteer jouw figuur en x-as marges\n\nU moet wel nadenken over uw x-as margematen wanneer u een figuur produceert dat buiten de standaardhoogte in `bbplot` ligt, dat is 450px. Dit kan bijvoorbeeld het geval zijn als u een staafdiagram maakt met veel balken en ervoor wilt zorgen dat er wat ademruimte is tussen elke staaf en labels. Als u de marges laat zoals ze zijn voor figuren met een grotere hoogte, dan kunt u een grotere afstand tussen de as en uw labels krijgen.\n\nHier is een handleiding waar we aan werken als het gaat om de marges en de hoogte van uw staafdiagram (met coord_flip erop toegepast):\n\n\n\n| size  | t  | b  |\n|:-----:|:--:|:--:|\n| 550px | 5  | 10 |\n| 650px | 7  | 10 |\n| 750px | 10 | 10 |\n| 850px | 14 | 10 |\n\n\nDus wat u zou moeten doen is deze code toevoegen aan uw grafiek als u bijvoorbeeld de hoogte van je plot 650px wilde hebben in plaats van 450px. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nbar_chart_tall <- bars + theme(axis.text.x = element_text(margin=margin(t = 7, b = 10)))\nbar_chart_tall\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-59-1.png){width=672}\n:::\n:::\n\n\nHoewel het veel minder waarschijnlijk is, maar als u het equivalent wilt doen voor een lijndiagram en het wilt exporteren op een grotere hoogte dan de standaard hoogte, moet u hetzelfde doen. Maar ook uw waarden voor t veranderen in negatieve waarden op basis van de bovenstaande tabel.  \n\n### Heroderdenen van de staven op basis van de grootte\n\nStandaard zal R uw gegevens in alfabetische volgorde weergeven, maar in plaats daarvan herordenen op basis van grootte is eenvoudig: gewoon `reorder()` om de `x` of `y` variabele leggen die u wilt herschikken, en geef aan voor welke variabele u de gegevens wilt herschikken. \n\nBijvoorbeeld `x = reorder (country, pop)`. Oplopende volgorde is de standaard, maar u kunt deze veranderen in aflopende volgorde door `desc()` rond de variabele te plaatsen waar u de volgorde van wilt wijzigen:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbars <- ggplot(bar_df, aes(x = reorder(country, lifeExp), y = lifeExp)) +\n  geom_bar(stat=\"identity\", position=\"identity\", fill=\"#1380A1\") +\n  geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +\n  bbc_style() +\n  coord_flip() +\n  labs(title=\"Reunion hoogste\",\n       subtitle = \"Hoogste levensverwachting Afrika, 2007\") +\n  theme(panel.grid.major.x = element_line(color=\"#cbcbcb\"), \n        panel.grid.major.y=element_blank())\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-61-1.png){width=672}\n:::\n:::\n\n\n### Staven met de hand herordenen\n\nSoms moet u uw gegevens ordenen op een manier die niet alfabetisch of gerangschikt op grootte is. \n\nOm deze correct te ordenen moet u de factorniveaus van uw gegevens instellen voordat u het figuur maakt.\n\nSpecificeer de volgorde waarin u de categorieën in het `levels` argument wilt afdrukken:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset$column <- factor(dataset$column, levels = c(\"18-24\",\"25-64\",\"65+\"))\n```\n:::\n\n\nU kunt dit ook gebruiken om de delen van een gestapelde staafdiagram opnieuw te ordenen.  \n\n### Kleur staven conditioneel\n\nU kunt esthetische waarden zoals vulling, alpha en grootte voorwaardelijk instellen met `ifelse()`. \n\nDe syntaxis is  `fill=ifelse(logical_condition, fill_if_true, fill_if_false)`. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(bar_df, \n       aes(x = reorder(country, lifeExp), y = lifeExp)) +\n  geom_bar(stat=\"identity\", position=\"identity\", fill=ifelse(bar_df$country == \"Mauritius\", \"#1380A1\", \"#dddddd\")) +\n  geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +\n  bbc_style() +\n  coord_flip() +\n  labs(title=\"Reunion is hoogsgte\",\n       subtitle = \"Hoogste levensverwachting Afrika, 2007\") +\n  theme(panel.grid.major.x = element_line(color=\"#cbcbcb\"), \n        panel.grid.major.y=element_blank()) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n```\n:::\n\n::: {.cell-output-display}\n![](bbc-en-data-journalisme_files/figure-html/unnamed-chunk-63-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "bbc-en-data-journalisme_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}