[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Harrie’s Hoekje",
    "section": "",
    "text": "analyseren\n\n\n\n\n\n\n\n\n\n\n\nMay 1, 2020\n\n\nHarrie Jonkman\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHet nieuwe R sf-pakket, dat sp vervangt om met geografische objecten om te gaan, is ontworpen om makkelijk met Tidyverse om te gaan. Hier laat ik zien hoe sf-objecten als data-frames worden opgeslagen en jou in staat stelt om met ggplot2, dplyr en tidyr te werken. Ook het R-pakket tmap biedt veel nieuwe mogelijkheden.\n\n\n\n\n\n\nNov 14, 2018\n\n\nHarrie Jonkman\n\n\n\n\n\n\n  \n\n\n\n\n\nHier een klein boekje om jou te laten wennen aan reproduceerbaar onderzoek. Het introduceert het programma R, de RStudio-schil en de programmeertaal RMarkdown.\n\n\n\n\ncommunicatie\n\n\n\n\n\n\n\n\n\n\n\nJul 28, 2018\n\n\nChester Ismay, bewerking Harrie Jonkman\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nanalyse\n\n\n\n\n\n\n\n\n\n\n\nFeb 28, 2018\n\n\nHarrie Jonkman\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\ncommunicatie\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nHarrie Jonkman\n\n\n\n\n\n\n  \n\n\n\n\n\nHier gaat het om een korte handleiding voor R_gebruikers die omwille van de leesbaarheid en esthetiek hun figuren in het populaire grafische design programma Illustrator willen ‘oppoetsen’. Als het op visualisatie aankomt blijven de meeste R-gebruikers binnen dit programma werken. Dat is natuurlijk prima als het gaat om figuren die de analyse moeten ondersteunen en jij degene bent die er alleen naar moet kijken. Dan hoef je ook niets over de context te vermelden, niets verder uit te leggen of ervoor te zorgen dat het er allemaal mooi uitziet. Het doel dan is vooral snel figuren maken zodat je gevoel bij jouw data krijgt. R biedt je ook heel veel mogelijkheden, ook voor goede visualisatie. Echter, als het gaat om het maken van figuren die voor een breder publiek toegankelijk en leesbaar zijn en die zelf een verhaal moeten vertellen, kan het wel eens bruikbaarder en efficiënter zijn om dit R-figuur als PDF op te slaan en aanpassingen door te voeren in een vector georienteerd programma zoals Adobe Illustrator (https://www.adobe.com/nl/) of zijn open-source alternatief Inkscape (https://www.inkscape.org/nl/). Inkscape is vrij toegankelijk maar hier besteden wij enkel aandacht aan het bewerken in Adobe Illustrator.\n\n\n\n\nvisualisatie\n\n\n\n\n\n\n\n\n\n\n\nApr 28, 2018\n\n\nHarrie Jonkman\n\n\n\n\n\n\n  \n\n\n\n\n\nOm precies het effect van een aanpak of politieke keuze vast te stellen is een ingewikkelde kwestie. Toch is er dat soort onderzoek nodig om de keuze voor programma’s te legitimeren. Tegenwoordig is er een heel spectrum van technieken om de impact van programma’s vast te stellen. Hier stellen we zo’n matchingsmethode voor (PSM) die goed gebruikt kan worden in verschillende soorten impactstudies en laten we zien hoe deze uitgevoerd kan worden.\n\n\n\n\nanalyse\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nHarrie Jonkman\n\n\n\n\n\n\n  \n\n\n\n\n\nIn de sociale wetenschappen kunnen sommige constructen, zoals intelligentie, vertrouwen, motivatie, vervreemding of conservatisme, niet direct worden geobserveerd. Het zijn in essentie constructen of concepten waarvoor geen methode bestaat om ze direct te meten. Onderzoekers gebruiken hiervoor geobserveerde maten die indicatoren zijn voor een latente variabele. Structural equation modeling is een onderzoeks-raamwerk dat rekening kan houden met de meetfouten in de geobserveerde variabelen die in het model zitten. SEM is een flexibel en krachtige methode om tegelijkertijd op een goede manier de kwaliteit van het meten in de gaten te houden als om causale relaties tussen de constructen vast te stellen. In de map vind je een korte presentatie over SEM\n\n\n\n\nanalyse\n\n\n\n\n\n\n\n\n\n\n\nMay 8, 2020\n\n\nHarrie Jonkman\n\n\n\n\n\n\n  \n\n\n\n\n\nRMarkdown en Knitr zijn pakketten die je in staat stellen om reproduceerbare en dynamische documenten te maken. In deze blog wordt uitgelegd hoe je hiermee kunt werken.\n\n\n\n\ncommunicatie\n\n\n\n\n\n\n\n\n\n\n\nJun 28, 2018\n\n\nMarian L. Schmidte, bewerkte Harrie Jonkman\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Harrie’s Hoekje",
    "section": "",
    "text": "Dr. Harrie Jonkman studeerde sociologie en onderwijskunde en werkte aan de Rijksuniversiteit Groningen, in het onderwijs, het Nationaal Comité 4 en 5 mei en het Nederlands Jeugdinstituut (NJi). Sinds 2008 is hij verbonden aan het Verwey-Jonker Instituut. Zijn werk richt zich op de sociale en cognitieve ontwikkeling van kinderen en jongeren, sociale determinanten en preventie van ontwikkelings- en gedragsproblemen. In 2012 ontving hij van het National Institute on Drug Abuse (VS) een beurs als ‘Distinguished Researcher’. Hij was landelijk projectleider van de Community that Care strategie in Nederland, ondersteunde deze ook in andere landen en schreef zijn promotieonderzoek naar de effecten van de preventiestrategie Communities that Care. Bij het VerweyJonker Instituut is hij betrokken bij experimenten en evaluaties van sociale programma’s, longitudinale studies, en internationaal vergelijkende studies. Hij ondersteunt preventiewerk in verschillende landen, was adviseur van de International Task Force on Prevention van de Society of Prevention Research en werkte tientallen jaren als supervisor in stuurgroepen van onderwijsinstellingen. De laatste jaren specialiseerde hij zich in moderne data-analyse. Zijn interesse gaat daarbij uit naar multilevel-analyse, effectonderzoek en, sinds kort, machine-learning, zowel frequentisch als Bayesiaans. Maar ook vormgeving en visualisatie heeft zijn interesse. Hij ziet zichzelf meer als liefhebber dan als expert.\nDit zijn blogs die hij graag volgt:\nSimply Statistics\nRbloggers\nR4stats\nDataCamp\nJASP\nMLwiN\nSTATA\nIndividuen die hij graag volgt zijn onder andere:\nKieran Healey\nRens van de Schoot\nDavid Spiegelhalter\nAlison Hill\nHier boeken die op dit moment voor hem belangrijk zijn:\nJohnson, A.A., Ott, M., Dogucu, M. (2021). Bayes Rules! Introduction to Bayesian Modeling with R. https://www.bayesrulesbook.com/\nBatra, N. (ed, 2021). The Epidemiologist R Handbook. https://epirhandbook.com/index.html\nBaumer, B.S., Kaplan, D.T. & Horton, N.J. (2018). Modern Data Science with R. Boca Raton: CRC Press.\nFreeman, M. & Ross, J. (2019). Programming Skills for Data Science. Start writing code to wrangle, analyze, and visualize data with R. Boston: Addison Wesley.\nGillespie, C. & Lovelace, R. (2017). Efficient R Programming. (https://csgillespie.github.io/efficientR/)\nGrolemund, G. & Wickham, H. (2019). R for Data Science. (https://r4ds.had.co.nz/)\nHealey, K. (2019). Data Visualization: A Practical Introduction. Princeton: Princeton University Press.\nIrizarry, R.A. (2019). Introduction to Data Science. Data Analysis and Prediction Algorithms with R. (https://rafalab.github.io/dsbook/)\nLovelace, R., Nowosad, J. & Muenchow, J. (2019). Geocomputation with R. (https://geocompr.robinlovelace.net/)\nMcElreath, R. (2019). Statistical Rethinking. A Bayesian Course with Examples in R and Stan. (Second edition). Boca Raton: Chapman and Hall/CRC Vooral met brms, ggplot2 and the tidyverse https://bookdown.org/connect/#/apps/1850/access\nPoldrack, R.A. (2021). Statistical Thinking for the 21st Century.https://statsthinking21.github.io/statsthinking21-core-site/\nSpiegelhalter, D. (2019). The Art of Statistics. Learning from Data. https://github.com/dspiegel29/ArtofStatistics\nXie, Y., Allaire, J.J. & Grolemund, G.(2019). R Markdown: The Definitive Guide. https://bookdown.org/yihui/rmarkdown/\nXie, Y., Dervieux, C. & Riederer, E. (2021). RMarkdown Cookbook. https://bookdown.org/yihui/rmarkdown-cookbook/"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Exploreren",
    "section": "",
    "text": "De tekst vind je hier: http://www.harriejonkman.nl/wp-content/uploads/2018/01/MDtotaal.pdf"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Thomas Bayes was een Engels wiskundige en presbyteriaans predikant die zichzelf in de tweede helft van de 18e eeuw enkele belangrijke vragen stelde, zoals hoe moeten we onze overtuigingen aanpassen als we nieuwe informatie krijgen en hoe houden we vast aan oude veronderstellingen, ook als ze onhoudbaar zijn geworden. Of laten we die overtuigingen heel makkelijk los, ook als we een klein beetje gaan twijfelen?\nBayes maakt ons ervan bewust dat we onze opvattingen steeds geleidelijk aan passen aan de werkelijkheid. Zijn stelling, of theorema, is een belangrijk instrument geworden voor allerlei wetenschappers en de Bayesiaanse regel staat niet zelden heel stoer op een t-shirt afgebeeld:\n\\[P(A|B) = \\frac {P(A) \\times P(B|A)}{P(B)}\\]\nBayes draaide dingen om en wilde iets zeggen over een hypothese gegeven het bewijsmateriaal dat we hebben. Hoe moet je een veronderstelling begrijpen in het licht van empirisch materiaal? Bayes’ theorie kent vervolgens een lange, ingewikkelde en verrassende geschiedenis die tot op de dag van vandaag doorgaat. Die geschiedenis heeft Sharon Bertsch McGrayne, een Amerikaanse wetenschapsjournalist, heel mooi in beeld gebracht. Maar het was niet Bayes zelf, maar zijn vriend Richard Price, een amateur wiskundige, die deze ideeën openbaar maakte na Bayes’ dood. Zonder Price had die theorie helemaal niet bestaan. Price stuurde Bayes wetenschappelijke werk in en zorgde er zo voor dat er een publicatie van kwam. Naar die stelling werd vervolgens helemaal niet meer omgekeken tot de beroemde Franse wiskundige Pierre Simon Laplace in het begin van de 19e eeuw deze ideeën uitbreidde en op slimme manieren toepaste. Daarna was het maatschappelijk aan en uit met die theorie, werd het gebruikt en raakte het ook weer uit de mode. De ideeën werden op het ene na het andere gebied toegepast, om vervolgens weer te worden veroordeeld omdat het zou werken met vage, subjectieve of onwetenschappelijke uitgangspunten. Rivaliserende kampen (Frequentisten en Baysianen) voerden hier lange tijd grote strijd over.\nDe theorie zelf kan eenvoudig worden uitgelegd. Je hebt een bepaalde hypothese, bijvoorbeeld over een munt. Je denkt dat de kans op kop of munt hetzelde is. Daar ga je van te voren van uit. Als je vijf keer gooit en je gooit steeds kop dan denk je nog dat het toeval is en je past jouw veronderstelling nog niet aan. Anders wordt het als dit 100 keer gebeurt, dan ga je toch echt twijfelen over de munt en ga je denken dat het misschien wel alleen maar kop kent. Bij waarschijnlijkheid gaat het om uitsluitende mogelijkheden die je toekent. Je hebt van tevoren een idee over iets (prior), vervolgens heb je de data (likelihood) en dat zorgt vervolgens voor jouw geupdated kennis (posterior). Bayes’ theorie is een manier om de waarschijnlijkheid steeds op een consistent en logische manier te herberekenen. Dat herberekenen van de hypothese (of kennis die we hebben) vindt dus steeds plaats in het licht van nieuwe bewijzen. Deze geupdated of aangepaste waarschijnlijkheid wordt de posterior probability of gewoon de posterior genoemd.\nOm het iets ingewikkelder te zeggen, de stelling van Bayes’s houdt nu in dat de posterior waarschijnlijkheid van een hypothese gelijk is aan het product van de voorafgaande waarschijnlijkheid van de hypothese (dus wat je weet al, de prior) en de waarschijnlijkheid van het bewijs gegeven de hypothese (de data, de likelihood). Dit deel je vervolgens door de waarschijnlijkheid van alle bewijzen. Dat laatste gebeurt omdat je zo steeds een waarde tussen 0 en 1 te krijgen, en hoe dichter bij 1 hoe groter de kans. Dat is precies wat op dat stoere t-shirt staat.\nHeel veel kennis is er opgebouwd met munten, kaarten en dergelijke. Moeilijker wordt het wanneer je de stelling van Bayes toepast op het echte leven. Maar ook hier gebeurt het op een zelfde manier. Stel dat je naar buitenloopt en ziet dat jouw tuinpad nat is. Dan denk je misschien dat het geregend heeft. Als je verder loopt en ziet dat de straten droog zijn, ga je toch denken dat jouw vrouw misschien de tuin heeft gesproeid. Wanneer je het weerbericht hebt gehoord (waarin regen wordt voorspeld) voordat je naar buitenloopt, denk je nog eerder dat het geregend heeft als je over het natte tuinpad loopt. Met dat weersbericht en dat natte tuinpad word je minder snel van jouw regengedachte afgehaald als je de droge straat ziet. In het dagelijks leven worden gedachten en veronderstellingen voortdurend geüpdated. Kennis wordt gebruikt en nieuw bewijsmateriaal wordt voortdurend daarmee gefilterd en verwerkt in jouw Bayesiaanse hoofd. Steeds meer doen we kennis op over hoe kansen zijn toe te wijzen en bewijs kan worden geëvalueerd in situaties die veel ingewikkelder zijn dan het gooien van munten of het inschatten van regen.\nMcGrayne besteedt veel aandacht aan allerlei bijdragen van individuele wetenschappers aan die boeiende geschiedenis van de Bayesiaanse theorie. Zo bespreekt ze uitgebreid hoe het in oorlogsvoering is gebruikt, in het proces van kolonel Dreyfus, hoe Alan Turing met deze theorie Duitse codes kraakte en er met dat kleine groepje slimme mensen voor zorgde dat de Tweede Wereldoorlog minder lang duurde. Maar veel meer voorbeelden komen aan de orde.\nBayesiaanse theorie wordt tegenwoordig op allerlei gebieden van wetenschap toegepast. Ook in onze dagelijks leven hebben we ermee te maken via vertaalmachines, spamfilters en stuurloze auto’s bijvoorbeeld. We zijn er onszelf nauwelijks van bewust. McGrayne heeft niet alleen oog voor statistici die zich succesvol wijdden aan Bayesiaanse statistiek. Ze laat ook zien hoe deze door andere statici (zoals Fischer, als vertegenwoordiger van de zogenaamde Frequentisten) heftig worden tegengewerkt. De kern van de verschillen tussen deze twee groepen is dat volgens Bayesianen de prior een subjectieve uitdrukking kan zijn van de mate van geloof in een hypothese. Je moet de kennis gebruiken die je al hebt, het is vreemd om steeds maar opnieuw en van voren af aan te beginnen. Frequentisten erkennen dit subjectieve element niet. Voor hen moet wetenschap een objectieve basis hebben, liefste in relatieve frequentie van gebeurtenissen in herhaalbare, welomschreven experimenten.Dat subjectieve element staat daar ver van.\nMcGrayne’s boek is een prachtig wetenschapshistorisch boek Zie ook haar presentatie hier. Ze laat zien dat de Bayesiaanse theorie weer helemaal terug is en dat komt natuurlijk vooral ook door de ontwikkeling van de computer en moderne algoritmen waarmee de theorie niet enkel theorie blijft maar ook praktisch kan worden toegepast. David Spiegelhalter en zijn biostatistische onderzoeksgroep hebben daar op een ongekende manier aan bijgedragen. De Bayesiaanse methode wordt in allerlei onderzoek gebruikt en in verschillende omstandigheden heeft het grote voordelen zien ten opzichte van de frequentistische statistiek. Er wordt vandaag de dag veel pragmatischer mee hiermee omgegaan. De tegenwoordige wetenschapper loopt steeds vaker met twee gereedschapskisten rond en op basis van het probleem besluit hij of zij tot een onderzoekswijze."
  },
  {
    "objectID": "posts/Bayes/index.html",
    "href": "posts/Bayes/index.html",
    "title": "Bayes",
    "section": "",
    "text": "Thomas Bayes was een Engels wiskundige en presbyteriaans predikant die zichzelf in de tweede helft van de 18e eeuw enkele belangrijke vragen stelde, zoals hoe moeten we onze overtuigingen aanpassen als we nieuwe informatie krijgen en hoe houden we vast aan oude veronderstellingen, ook als ze onhoudbaar zijn geworden. Of laten we die overtuigingen heel makkelijk los, ook als we een klein beetje gaan twijfelen?\nBayes maakt ons ervan bewust dat we onze opvattingen steeds geleidelijk aan passen aan de werkelijkheid. Zijn stelling, of theorema, is een belangrijk instrument geworden voor allerlei wetenschappers en de Bayesiaanse regel staat niet zelden heel stoer op een t-shirt afgebeeld:\n\\[P(A|B) = \\frac {P(A) \\times P(B|A)}{P(B)}\\]\nBayes draaide dingen om en wilde iets zeggen over een hypothese gegeven het bewijsmateriaal dat we hebben. Hoe moet je een veronderstelling begrijpen in het licht van empirisch materiaal? Bayes’ theorie kent vervolgens een lange, ingewikkelde en verrassende geschiedenis die tot op de dag van vandaag doorgaat. Die geschiedenis heeft Sharon Bertsch McGrayne, een Amerikaanse wetenschapsjournalist, heel mooi in beeld gebracht. Maar het was niet Bayes zelf, maar zijn vriend Richard Price, een amateur wiskundige, die deze ideeën openbaar maakte na Bayes’ dood. Zonder Price had die theorie helemaal niet bestaan. Price stuurde Bayes wetenschappelijke werk in en zorgde er zo voor dat er een publicatie van kwam. Naar die stelling werd vervolgens helemaal niet meer omgekeken tot de beroemde Franse wiskundige Pierre Simon Laplace in het begin van de 19e eeuw deze ideeën uitbreidde en op slimme manieren toepaste. Daarna was het maatschappelijk aan en uit met die theorie, werd het gebruikt en raakte het ook weer uit de mode. De ideeën werden op het ene na het andere gebied toegepast, om vervolgens weer te worden veroordeeld omdat het zou werken met vage, subjectieve of onwetenschappelijke uitgangspunten. Rivaliserende kampen (Frequentisten en Baysianen) voerden hier lange tijd grote strijd over.\nDe theorie zelf kan eenvoudig worden uitgelegd. Je hebt een bepaalde hypothese, bijvoorbeeld over een munt. Je denkt dat de kans op kop of munt hetzelde is. Daar ga je van te voren van uit. Als je vijf keer gooit en je gooit steeds kop dan denk je nog dat het toeval is en je past jouw veronderstelling nog niet aan. Anders wordt het als dit 100 keer gebeurt, dan ga je toch echt twijfelen over de munt en ga je denken dat het misschien wel alleen maar kop kent. Bij waarschijnlijkheid gaat het om uitsluitende mogelijkheden die je toekent. Je hebt van tevoren een idee over iets (prior), vervolgens heb je de data (likelihood) en dat zorgt vervolgens voor jouw geupdated kennis (posterior). Bayes’ theorie is een manier om de waarschijnlijkheid steeds op een consistent en logische manier te herberekenen. Dat herberekenen van de hypothese (of kennis die we hebben) vindt dus steeds plaats in het licht van nieuwe bewijzen. Deze geupdated of aangepaste waarschijnlijkheid wordt de posterior probability of gewoon de posterior genoemd.\nOm het iets ingewikkelder te zeggen, de stelling van Bayes’s houdt nu in dat de posterior waarschijnlijkheid van een hypothese gelijk is aan het product van de voorafgaande waarschijnlijkheid van de hypothese (dus wat je weet al, de prior) en de waarschijnlijkheid van het bewijs gegeven de hypothese (de data, de likelihood). Dit deel je vervolgens door de waarschijnlijkheid van alle bewijzen. Dat laatste gebeurt omdat je zo steeds een waarde tussen 0 en 1 te krijgen, en hoe dichter bij 1 hoe groter de kans. Dat is precies wat op dat stoere t-shirt staat.\nHeel veel kennis is er opgebouwd met munten, kaarten en dergelijke. Moeilijker wordt het wanneer je de stelling van Bayes toepast op het echte leven. Maar ook hier gebeurt het op een zelfde manier. Stel dat je naar buitenloopt en ziet dat jouw tuinpad nat is. Dan denk je misschien dat het geregend heeft. Als je verder loopt en ziet dat de straten droog zijn, ga je toch denken dat jouw vrouw misschien de tuin heeft gesproeid. Wanneer je het weerbericht hebt gehoord (waarin regen wordt voorspeld) voordat je naar buitenloopt, denk je nog eerder dat het geregend heeft als je over het natte tuinpad loopt. Met dat weersbericht en dat natte tuinpad word je minder snel van jouw regengedachte afgehaald als je de droge straat ziet. In het dagelijks leven worden gedachten en veronderstellingen voortdurend geüpdated. Kennis wordt gebruikt en nieuw bewijsmateriaal wordt voortdurend daarmee gefilterd en verwerkt in jouw Bayesiaanse hoofd. Steeds meer doen we kennis op over hoe kansen zijn toe te wijzen en bewijs kan worden geëvalueerd in situaties die veel ingewikkelder zijn dan het gooien van munten of het inschatten van regen.\nMcGrayne besteedt veel aandacht aan allerlei bijdragen van individuele wetenschappers aan die boeiende geschiedenis van de Bayesiaanse theorie. Zo bespreekt ze uitgebreid hoe het in oorlogsvoering is gebruikt, in het proces van kolonel Dreyfus, hoe Alan Turing met deze theorie Duitse codes kraakte en er met dat kleine groepje slimme mensen voor zorgde dat de Tweede Wereldoorlog minder lang duurde. Maar veel meer voorbeelden komen aan de orde.\nBayesiaanse theorie wordt tegenwoordig op allerlei gebieden van wetenschap toegepast. Ook in onze dagelijks leven hebben we ermee te maken via vertaalmachines, spamfilters en stuurloze auto’s bijvoorbeeld. We zijn er onszelf nauwelijks van bewust. McGrayne heeft niet alleen oog voor statistici die zich succesvol wijdden aan Bayesiaanse statistiek. Ze laat ook zien hoe deze door andere statici (zoals Fischer, als vertegenwoordiger van de zogenaamde Frequentisten) heftig worden tegengewerkt. De kern van de verschillen tussen deze twee groepen is dat volgens Bayesianen de prior een subjectieve uitdrukking kan zijn van de mate van geloof in een hypothese. Je moet de kennis gebruiken die je al hebt, het is vreemd om steeds maar opnieuw en van voren af aan te beginnen. Frequentisten erkennen dit subjectieve element niet. Voor hen moet wetenschap een objectieve basis hebben, liefste in relatieve frequentie van gebeurtenissen in herhaalbare, welomschreven experimenten.Dat subjectieve element staat daar ver van.\nMcGrayne’s boek is een prachtig wetenschapshistorisch boek Zie ook haar presentatie hier. Ze laat zien dat de Bayesiaanse theorie weer helemaal terug is en dat komt natuurlijk vooral ook door de ontwikkeling van de computer en moderne algoritmen waarmee de theorie niet enkel theorie blijft maar ook praktisch kan worden toegepast. David Spiegelhalter en zijn biostatistische onderzoeksgroep hebben daar op een ongekende manier aan bijgedragen. De Bayesiaanse methode wordt in allerlei onderzoek gebruikt en in verschillende omstandigheden heeft het grote voordelen zien ten opzichte van de frequentistische statistiek. Er wordt vandaag de dag veel pragmatischer mee hiermee omgegaan. De tegenwoordige wetenschapper loopt steeds vaker met twee gereedschapskisten rond en op basis van het probleem besluit hij of zij tot een onderzoekswijze."
  },
  {
    "objectID": "posts/Latex/latex.html",
    "href": "posts/Latex/latex.html",
    "title": "Latex",
    "section": "",
    "text": "Hier vind je een snelle introductie op de werking van Latex"
  },
  {
    "objectID": "posts/Exploreren/index.html",
    "href": "posts/Exploreren/index.html",
    "title": "Exploreren",
    "section": "",
    "text": "De tekst vind je hier: http://www.harriejonkman.nl/wp-content/uploads/2018/01/MDtotaal.pdf"
  },
  {
    "objectID": "posts/Latex/index.html",
    "href": "posts/Latex/index.html",
    "title": "Latex",
    "section": "",
    "text": "Hier vind je een snelle introductie op de werking van Latex"
  },
  {
    "objectID": "posts/Op-weg-naar-infografieken/index.html",
    "href": "posts/Op-weg-naar-infografieken/index.html",
    "title": "Op weg naar infografieken",
    "section": "",
    "text": "Hier vind je een goed document"
  },
  {
    "objectID": "posts/Psm/index.html",
    "href": "posts/Psm/index.html",
    "title": "Propensity Score Matching",
    "section": "",
    "text": "## Impactevaluatie Om precies het effect van een aanpak of politieke keuze vast te stellen is een ingewikkelde kwestie. Toch is er dat soort onderzoek nodig om de keuze voor programma’s te legitimeren. Tegenwoordig is er een heel spectrum van technieken om de impact van programma’s vast te stellen. Dit zijn technieken die kunnen worden gebruikt binnen hele verschillende soorten impactstudies. Het is goed daar kennis van te nemen, zeker nu steeds meer mogelijk is omdat er meer data beschikbaar zijn waarop deze evaluaties gebaseerd kunnen worden. Impactstudies worden uitgevoerd om vast te stellen of programma’s de effecten opleveren die ze nastreven, om te begrijpen of en waarom deze programma’s werken, om vast te stellen in hoeverre veranderingen zijn toe te schrijven aan de inzet van het programma en ook om vast te stellen of de gelden op een goede manier worden besteed. Op dit terrein is er natuurlijk een enorme hoeveelheid literatuur en enkele uitgaven geven ons hiervan een goed en up-to-date overzicht1. Experimentele studies kunnen natuurlijk goede impactstudies zijn, met sterke punten en beperkingen. Maar er zijn ook aanvullende methodes die in quasi-experimentele of observationele studies kunnen worden toegepast. Zo zijn er panel datamethodes die gebruikt kunnen worden, regressie discontinu?teit methodes en instrumentele variabelen methodes. Daarnaast zijn er verschillende matchingsmethodes die in impactstudies worden gebruikt. Hier stellen we zo’n matchingsmethode voor die goed gebruikt kan worden in verschillende soorten impactstudies en laten we zien hoe deze uitgevoerd kan worden."
  },
  {
    "objectID": "posts/Psm/index.html#propensity-score-matching-als-optie",
    "href": "posts/Psm/index.html#propensity-score-matching-als-optie",
    "title": "Propensity Score Matching",
    "section": "Propensity Score Matching als optie",
    "text": "Propensity Score Matching als optie\nPropensity Score Matching is een statische techniek waarin een individu (of andere eenheid) die behandeld wordt of die ergens aan meedoet, wordt gematcht met een of meer respondenten uit de controlegroep op basis van de propensity score. Deze matchingstechniek versterkt causale argumenten in quasi-experimentele en observationele studies omdat ze selectie-bias reduceert. In dit artikel concentreren we ons op hoe we propensity score matching uitvoeren via een voorbeeld uit het onderwijsveld. Het doel van dit artikel is om informatie te geven zodat het gebruikt kan worden door onderzoekers en mensen die evaluatiestudies uitvoeren2 3."
  },
  {
    "objectID": "posts/Psm/index.html#stap-voor-stap",
    "href": "posts/Psm/index.html#stap-voor-stap",
    "title": "Propensity Score Matching",
    "section": "Stap voor stap",
    "text": "Stap voor stap\nPropensity score matching is een statistische techniek waarin een geval uit de behandelgroep wordt gematcht met een of meer gevallen uit de controlegroep gebaseerd op ieders propensity score. Elders zijn er veel uitleg en onderbouwingen te vinden voor propensity score (Adelson, 20134; Holland, 1986 5; Rubin, 2005 6; Rudner & Peyton, 20067; Shadish, Cook, & Campbell, 20028; Stone & Tang, 20139 ). In dit artikel concentreren we ons op de vraag hoe we propensity score matching moeten uitvoeren door een voorbeeld uit het onderwijsveld te geven. In dit document willen we vooral een stap-voor-stap voorbeeld geven van de uitvoering van propensity score matching in R. We gebruiken hierbij het MatchIt-pakket met ‘nearest-neighbor 1-to-1 matching’. Terwijl er andere software is dan R voor het uitvoeren van propensity score matching, hebben we voor R gekozen omdat het open-source software is en omdat het breed gebruikt wordt door data-wetenschappers binnen verschillende disciplines. Het doel van dit artikel is om informatie te verschaffen zodat propensity score matching binnen het bereik komt van onderzoek en evaluatie."
  },
  {
    "objectID": "posts/Psm/index.html#informatie-over-de-gebruikte-dataset",
    "href": "posts/Psm/index.html#informatie-over-de-gebruikte-dataset",
    "title": "Propensity Score Matching",
    "section": "Informatie over de gebruikte dataset",
    "text": "Informatie over de gebruikte dataset\nData van een observationele studie door Falbe (2014) worden hier gebruikt om te illustreren hoe propensity score matching werkt. In die studie gebruikt Falbe algemeen toegankelijke schooldata van verschillende staten om te onderzoeken of een bepaalde interventie een voorspeller was van succes in de resultaten op lezen of rekenen/wiskunde wanneer er voor de schoolgrootte worden gecontrolleerd (tot), percentage studenten van minderheden (min) en het percentage studenten dat een vrije of in prijs gereduceerde lunch ontvangt (dis)10. Voor het voorbeeld hier gebruiken we alleen Falbe’s schooldata van de staat New York. In de New York data set, zijn er 25 stw scholen en 560 niet-stw scholen (stw refereert hier naar een bepaalde interventie). Als matchingsvariabelen koos Falbe schoolgrootte, percentage minderheids studenten en het percentage studenten dat een vrije of een in prijs gereduceerde lunch ontvangt. De reden dat ze voor deze matchings variabelen koos, was dat vorig onderzoek had aangetoond dat deze variabelen samenhingen met academische resultaten. Door op deze variabelen te matchen, kon ze, dat was haar doel, selectie-bias reduceren tussen experimentele (“treated”, bijvoorbeeld stw) en controle groep (“control”, bijvoorbeeld niet-stw-scholen). Let op dat ondanks Falbe in haar studie naar correlaties zocht en niet-experimenteel van opzet was, we hier de termen behandeling (treated) en controle (control) gebruiken omdat deze termen worden gebruikt in het programma en de output van het MatchIt pakket."
  },
  {
    "objectID": "posts/Psm/index.html#de-stappen-in-het-uitvoeren-van-propensity-score-matching-in-r",
    "href": "posts/Psm/index.html#de-stappen-in-het-uitvoeren-van-propensity-score-matching-in-r",
    "title": "Propensity Score Matching",
    "section": "De stappen in het uitvoeren van Propensity Score Matching in R",
    "text": "De stappen in het uitvoeren van Propensity Score Matching in R"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#instructies-bij-het-installeren",
    "href": "posts/Reproducable-research/index.html#instructies-bij-het-installeren",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Instructies bij het installeren",
    "text": "Instructies bij het installeren\nVoordat je gaat werken met de workshopmaterialen, zorg ervoor dat je het volgende hebt gedaan:\n\nOpen RStudio.\n\nInstalleer en download het devtools R pakket door het volgende commando te runnen.\n\n\ninstall.packages(\"devtools\") # Nodig voor deze sessie\nlibrary(\"devtools\")          # Nodig voor deze sessie   \n\n\nCheck of je de goede versie hebt van R en RStudio door devtools::session_info() in de R console te draaien.\nHier geeft devtools:: aan om de session_info() functie in R te gebruiken ipv het devtools pakket en de sessionInfo() functie binnen het utils pakket. Het runnen van devtools::session_info() stelt ons in staat de versie van R en RStudio vast te stellen.\n\nHeb je de volgende versie van R en RStudio?\n\nR: Versie 3.3.0 (2016-05-03)\n\nRStudio: 0.99.1172\n\nZo ja dan kun je van start gaan!\n\nZo nee dan heb je nieuwe versies van R en RStudio nodig, volg dan Setup in dit document.\n\n\n\nInstalleer andere R pakketten die nodig zijn voor deze workshop.\n\n\n## Installeer de goede pakketten\ninstall.packages(\"rmarkdown\")  # Dit zorgt voor koele dynamische documenten\ninstall.packages(\"knitr\")      # Hier kun je R code Chunks mee runnen\ninstall.packages(\"ggplot2\")    # Voor het plotten van mooie figuren\ninstall.packages(\"DT\")         # Om interactieve HTML tabellen te maken\n\n\n## Deze pakketten ook laden om er zeker van te zijn dat je de goede pakketten hebt\nlibrary(\"rmarkdown\")           # Dit zorgt voor koele dynamische documenten\nlibrary(\"knitr\")               # Hier kun je R code Chunks mee runnen\nlibrary(\"ggplot2\")             # Voor het plotten van mooie figuren\nlibrary(\"DT\")                  # Om interactieve HTML tabellen te maken\n\n\nAls je de pakketten zonder fouten hebt geladen, ben je klaar voor deze workshop!\n\nZijn er nog problemen, meld het ajb!"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#reproduceerbaar-onderzoek",
    "href": "posts/Reproducable-research/index.html#reproduceerbaar-onderzoek",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Reproduceerbaar onderzoek",
    "text": "Reproduceerbaar onderzoek\nReproduceerbaar onderzoek is een mogelijk product van dynamische documenten, echter, goed resultaat is niet gegarandeerd!\nGoede uitvoering van reproduceerbaar onderzoek houdt in ieder geval in:\n\nHet hele project in een directory plaatsen die wordt ondersteund door de ‘version control’.\n\nCode en data vrijlaten.\n\nAlles documenteren en de code als documentatie gebruiken!\n\nFiguren, tabellen en de statistiek zijn het resultaat van scripts en codes die in de tekst staan.\n\nSchrijf in de codes de paden die worden gebruikt.\n\nStel ‘seed’ in zodat een volgende persoon dezelfde resultaten krijgt.\n\nLaat ook informatie zien waarmee de code file wordt uitgevoerd. Je kunt bijvoorbeeld de devtools::session_info() gebruiken.\n\nOm meer over reproduceerbaarheid en datamanagement te lezen, kun je Vince Buffalo’s Boek erop naslaan[@Buffalo2015]."
  },
  {
    "objectID": "posts/Reproducable-research/index.html#waarom-r-markdown",
    "href": "posts/Reproducable-research/index.html#waarom-r-markdown",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Waarom R Markdown?",
    "text": "Waarom R Markdown?\nEen aantrekkelijk gereedschap voor reproduceerbare en dynamische rapporten!\n\nTerwijl het was gemaakt voor R, accepteert het veel programmeertalen. Om het eenvoudig te houden, werken we vandaag alleen met R.\n\nEen code kan op een aantal manieren worden uitgevoerd:\n\nInline Code: Een korte code die in de geschreven tekst van het document wordt uitgevoerd.\nCode Chunks: Delen van het document omvatten verschillende zinnen voor programmeer of analyse code. Dat kan een plot of een tabel zijn, maar ook berekeningen van de samenvattende statistiek, pakketten laden, etc.\n\n\nHet is makkelijk om:\n\nPlaatjes op te nemen.\n\nDe Markdown syntax te leren.\n\nLaTeX vergelijkingen op te nemen.\n\nInteractieve tabellen op te nemen.\nGebruik de versie via Git.\n\nDan is het makkelijker om te delen en samen te werken in analyses, projecten en publicaties!\n\nExterne linken toe te voegen - Rmarkdown begrijpt zelfs enige html codes!\n\nOm mooie documenten te maken.\n\nJe hoeft je geen zorgen te maken over pagina breuken of het plaatsen van de figuren.\n\nConsolideer jouw code en plaats het in een file:\n\nPowerpoint, PDFs, html documenten en word files"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#eenvoudige-werkwijze",
    "href": "posts/Reproducable-research/index.html#eenvoudige-werkwijze",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Eenvoudige werkwijze",
    "text": "Eenvoudige werkwijze\nIn het kort, om een rapport te maken:\n\nOpen een .Rmd file.\n\nMaak een YAML kop (meer hierover zo dadelijk!)\n\nSchrijf de inhoud met RMarkdown syntax.\n\nNeem mee de R code in code chunks of met een inline code.\n\nDraai de document output.\n\n\n\n\nWerkwijze om een rapport te maken\n\n\nOverzicht van de stappen die RMarkdown maakt om een ‘gerenderd’ document te krijgen:\n\nMaak een .Rmd rapport met ‘R code chunks’ en markdown verhalen (zoals hierboven in stappen beschreven).\n\nGeef de .Rmd-file aan knitr om de ‘R code chunks’ uit te voeren en een nieuwe .md file te maken.\n\nKnitr is een pakket binnen R die jou in staat stelt de code binnen RMarkdown documenten uit te voeren zoals HTML, latex, pdf, word en andere document types.\n\n\nGeef de .md file aan pandoc, die er een definitief document van maakt (b.v. html, Microsoft word, pdf, etc.).\n\nPandoc is een universeel gereedschap om documenten te converteren en zet het ene document type (in dit geval: .Rmd) om in een ander (in dit geval: HTML)\n\n\n\n\n\nHoe een Rmd document wordt omgezet\n\n\nHoewel dit mogelijk wat ingewikkeld lijkt, kunnen we op de “Knit” knop drukken boven aan de pagina die er zo uitziet:\n\nof we kunnen de volgende code runnen:\n\nrmarkdown::render(\"RMarkdown_Lesson.Rmd\", \"html_document\")"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#maak-een-.rmd-file",
    "href": "posts/Reproducable-research/index.html#maak-een-.rmd-file",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Maak een .Rmd file",
    "text": "Maak een .Rmd file\nHet wordt tijd! Laten we met RMarkdown gaan werken!\n\nIn de menu bar, klik je op File -> New File -> RMarkdown\n\nOf je klikt eenvoudig op het groene plus teken links boven in de hoek van RStudio.\n\n\n\n\nHet volgende zal omhoog komen.\n\n\n\nHierbinnen kies je het type output dat je wilt hebben. Opgelet: deze output kan later heel makkelijk worden aangepast!\n\n\n\nKlik OK"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#yaml-koppen",
    "href": "posts/Reproducable-research/index.html#yaml-koppen",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "YAML koppen",
    "text": "YAML koppen\nYAML staat voor “YAML Ain’t Markup Language” en is eigenlijk een soort geklusterde structuur voor de metadata van het document. Het staat tussen twee regels van drie streepjes --- en wordt automatisch omgezet door RStudio. Een eenvoudig voorbeeld:\n---\ntitle:  \"Analyse Rapport\"  \nAuthor:  \"Harrie Jonkman\"  \ndate: \"1 Maart 2017\"  \noutput:  html_document\n---\nHet voorbeeld boven zal een HTML document maken. Echter, de volgende opties zijn ook beschikbaar.\n\nhtml_document\n\npdf_document\n\nword_document\n\nbeamer_presentation (pdf powerpoint)\n\nioslides_presentation (HTML powerpoint)\n\nen nog meer …\n\nVandaag leggen we de nadruk op HTML files. Echter voel je vrij als je hier wat mee wilt spelen door bv. word en pdf documenten te maken. Presentatie documenten kennen een wat andere syntax (bv. om aan te geven wanneer de ene dia eindigt en de andere begint) en dan is er nog wat markdown syntax specifiek voor presentaties maar die gaat voorbij het doel van deze workshop.\nIn deze workshops bouwen we verder voort op de details van YAML koppen."
  },
  {
    "objectID": "posts/Reproducable-research/index.html#markdown-basis",
    "href": "posts/Reproducable-research/index.html#markdown-basis",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Markdown Basis",
    "text": "Markdown Basis\nKijk hiernaar RMarkdown Reference Guide\nHaal hier ook informatie vandaan RMarkdown Cheatsheet:\n\n\n\nMarkdown Basis van RStudio’s RMarkdown Cheatsheet\n\n\nHandige tips:\n\nEindig elke regel met twee spaties om een nieuwe paragraaf te beginnen.\n\nWoorden binnen een code moeten aan beide kanten zo’n kommateken kennen: `\n\nOm iets tot superscript te maken moet je een ^ aan beide zijden plaatsen. Superscript werd gevormd door Super^script^ te typen.\n\nVergelijkingen kunnen in een inline code worden geplaatst met $ en als blok gecentreerd binnen het document door $$. Bijvoorbeeld \\(E = mc^2\\) staat tussen de regels terwijl het volgende geblokt wordt opgenomen: \\[E = mc^2\\]\n\nOpgelet: Om met $ en $$ een superscript ^ te maken, is het nodig om voor elk aLFAnumeriEK dat superscript te gebruiken.\n\nAnder wiskundig materiaal:\n\nVierkantswortel: $\\sqrt{b}$ zal \\(\\sqrt{b}\\) maken\nBreuken: $\\frac{1}{2}$ = \\(\\frac{1}{2}\\)\n\n\nVergelijkingen met breuken: $f(x)=\\frac{P(x)}{Q(x)}$ = \\(f(x)=\\frac{P(x)}{Q(x)}\\)\n\n\n\nBinomiale Coefficienten: $\\binom{k}{n}$ = \\(\\binom{k}{n}\\)\n\nIntegralen: $$\\int_{a}^{b} x^2 dx$$ = \\[\\int_{a}^{b} x^2 dx\\]\n\nShareLaTeX is een prachtige bron voor LaTeX-codes.\n\n\nNog wat wiskundig materiaal:\n\n\n\n\n\n\n\n\nBeschrijving\nCode\nVoorbeelden\n\n\n\n\nGriekse letters\n$\\alpha$ $\\beta$ $\\gamma$ $\\rho$ $\\sigma$ $\\delta$ $\\epsilon$ $mu$\n\\(\\alpha\\) \\(\\beta\\) \\(\\gamma\\) \\(\\rho\\) \\(\\sigma\\) \\(\\delta\\) \\(\\epsilon\\) \\(\\mu\\)\n\n\nBinaire handelingen\n$\\times$ $\\otimes$ $\\oplus$ $\\cup$ $\\cap$\n\\(\\times\\) \\(\\otimes\\) \\(\\oplus\\) \\(\\cup\\) \\(\\cap\\) \\(\\times\\)\n\n\nRelationele handelingen\n$< >$ $\\subset$ $\\supset$ $\\subseteq$ $\\supseteq$\n\\(< >\\) \\(\\subset\\) \\(\\supset\\) \\(\\subseteq\\) \\(\\supseteq\\)\n\n\nVerder\n$\\int$ $\\oint$ $\\sum$ $\\prod$\n\\(\\int\\) \\(\\oint\\) \\(\\sum\\) \\(\\prod\\)\n\n\n\n\n\nUitdaging: Probeer de volgende output te maken:\n\n\nVandaag voel ik mij vet omdat ik RMarkdown leer.\nhoning is heel zoet.\nYAS!!!!!!\nR2 waarden zijn informatief!\n\\(R^{2}\\) beschrijft de variantie verklaard door het model.\nIk kende geen RMarkdown Vandaag heb ik RMarkdown geleerd\nRStudio link\nOutput van het volgende:\n\n\n# RMarkdown   \n## R   \n### Knitr   \n#### Pandoc  \n##### HTML  \n\n\\(\\sqrt{b^2 - 4ac}\\)\n\\[\\sqrt{b^2 - 4ac}\\]\n\\(X_{i,j}\\)\n\n\n\nVandaag maak ik een dynamisch document!\n\n\n\nHet volgende lijstje:\n\nChocolade Chips Kook Recept\n\nboter\nsuiker\n\nEen mengsel van bruine en witte suiker maakt het lekkerder\n\nmix dat met boter voordat je de eieren eraan toevoegt\n\n\neieren\nvanille\n\nMix wat droge ingredienten:\n\nmeel, zout, bak soda\n\n\nchocolade chips\n\n\nFijn feitje! De inhoudsopgave van deze website is gemaakt met koppen met 1-3 pond symbolen! (Daarover dadelijk meer)"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#een-code-in-het-document",
    "href": "posts/Reproducable-research/index.html#een-code-in-het-document",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Een Code in het document",
    "text": "Een Code in het document\nEr zijn twee manieren om een code in een RMarkdown document op te nemen.\n\nCode in het document: Korte code als een onderdeel van het geschreven document.\nCode Chunks: Delen van het document die verschillende programmeer of analyse codes omvatten. Daarmee kan een figuur of tabel worden gemaakt, statistieken worden berekend, pakketten worden geladen, etc.\n\n\nR Code in het document\nEen R code kan in het document wordt gemaakt door een komma hoog achterwaarts (`) en de letter r gevolgd door nog zo’n komma.\n\nBijvoorbeeld: 211 is 2048.\n\nStel dat je een p-waarde rapporteert en je wilt niet terug om de statistische test steeds weer uit te voeren. De p-waarde was eerder 0.0045.\nDit is echt handig als de resultaten op papier moeten worden gezet. Bijvoorbeeld, je hebt een aantal statistieken uitgevoerd voor jouw wetenschappelijke vragen is dit een manier waarop R die waarde in a variabele naam bewaart. Bijvoorbeeld: Wijkt het brandstofverbruik van de automaat significant af de auto met handtransmissie significant af binnen de mtcars data set?\n\nmpg_auto <- mtcars[mtcars$am == 0,]$mpg # automatic transmission mileage\nmpg_manual <- mtcars[mtcars$am == 1,]$mpg # manual transmission mileage\ntransmission_ttest <- t.test(mpg_auto, mpg_manual)\n\nOm de p-waarde vast te stellen kunnen we transmission_ttest$p.value als R code in het document gebruiken.\nDe p-waarde is dan 0.0013736.\n\n\nR Code Chunks\nR code chunks (nogmaals ik gebruik maar de Engelse benaming hier, sorry)kunnen worden gebruikt om de R output in het document te krijgen of om de code als illustratie zichtbaar te maken.\nDe anatomie van een code chunk:\nOm een R code chunk te plaatsen, kun je met de hand typen door ```{r} gevolgd door ``` op een volgende regel. Je kunt ook de Insert a new code chunk knop gebruiken of de ‘shortcut key’. Dat geeft dan de volgende code chunk:\n\n\n\nEen code chunk invoeren\n\n\n`\u000b``{r}\nn <- 10\nseq(n)\n```\nGeef de code chunk een betekenisvolle naam die samenhangt met wat het doet. Hieronder heb ik code chunk 10-random-numbers genoemd:\n`\u000b``{r 10-random-numbers}\nn <- 10\nseq(n)\n```\nDe code chunk input en output zien er dan als volgt uit:\n\nn = 10\nseq(n)\n\n [1]  1  2  3  4  5  6  7  8  9 10"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#chunk-labels",
    "href": "posts/Reproducable-research/index.html#chunk-labels",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Chunk Labels",
    "text": "Chunk Labels\nChunk labels krijgen unieke IDs in een document en zijn goed voor:\n\nOm externe files te genereren zoals plaatjes en ‘cached’ documenten.\n\nChunk labels zijn vaak output als fouten omhoog komen(vaker voor codes in het document).\n\nNavigeren door lange .Rmd documenten.\n\n\n\n\nEen methode om door lange .Rmd files te navigeren\n\n\nAls je de code chunk een naam geef, gebruik dan - of _ tussen woorden voor code chunks labels in plaats van ruimtes. Dat helpt jou en andere gebruikers bij het navigeren in het document.\nChunk labels moeten uniek zijn in het document - anders zal er een fout optreden!"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#chunk-opties",
    "href": "posts/Reproducable-research/index.html#chunk-opties",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Chunk Opties",
    "text": "Chunk Opties\nDruk tab als tussen de haakjes code chunk opties omhoog komen.\n\n\n\nEnkele Knitr Chunk Opties\n\n\n\nresults = \"asis\" staat voor “as is” en geeft de output van een niet geformateerde versie.\ncollapse is een andere chunk optie die handig kan zijn, zeker als een code chunk veel korte R uitdrukking heeft met wat output.\n\nEr zijn teveel chunk opties om hier te behandelen. Kijk na deze workshop nog eens wat rond voor deze opties.\nEen mooie website om dat op te doen is Knitr Chunk Options.\n\nUitdaging\nDraai de code chunk hieronder en speel wat met de volgende knitr code chunk opties:\n\n\n\neval = TRUE/FALSE\n\necho = TRUE/FALSE\n\ncollapse = TRUE/FALSE\n\nresults = \"asis\",\"markup en \"hide\n\n\n\nSla je resultaten op in markdown.\nOpgelet: Wees er zeker van dat je jouw chunks een naam geeft!\n\n\n1+1\n2*5\nseq(1, 21, by = 3)\nhead(mtcars)\n\nEnkele voorbeelden voortbouwend op de chunk hierboven\nResultaten van results=\"markup\", collapse = TRUE}:\n\n1+1\n## [1] 2\n2*5\n## [1] 10\nseq(1, 21, by = 3)\n## [1]  1  4  7 10 13 16 19\nhead(mtcars)\n##                    mpg cyl disp  hp drat    wt  qsec vs am gear carb\n## Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\n## Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\n## Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\n## Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\n## Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\n## Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\nResultaten van results=\"asis\", collapse = TRUE}:\n1+1\n[1] 2\n2*5\n[1] 10\nseq(1, 21, by = 3)\n[1] 1 4 7 10 13 16 19\nhead(mtcars)\n               mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#globale-opties",
    "href": "posts/Reproducable-research/index.html#globale-opties",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Globale opties",
    "text": "Globale opties\nHet kan zijn dat je dezelfde chunk settings wilt handhaven voor het gehele document. Het kan daarom handig zijn om de opties in een keer te typen in plaats van het iedere keer weer voor een chunk te moeten doen. Om dat te doen kun je de globale chunk opties bovenaan het document vaststellen.\nknitr::opts_chunk$set(echo = FALSE, \n                      eval = TRUE, \n                      message = FALSE,\n                      warning = FALSE, \n                      fig.path = \"Figures/\",\n                      fig.width = 12, \n                      fig.height = 8)\nAls je bijvoorbeeld met iemand samenwerkt die de code niet wil zien, kun je schrijven eval = TRUE en echo = FALSE gebruiken zodat de code wel gedraaid wordt maar niet getoond. In aanvulling wil je misschien message = FALSE en warning = FALSE gebruiken zodat jouw samenwerkingspartner geen enkele boodschap of waarschuwing van R ziet.\nAls je figuren wilt opslaan en bewaren in een subdirectory binnen het project, gebruik dan fig.path = \"Figures/\". Hier verwijst de \"Figures/\" naar een folder Figures binnen de huidige directory waar de figuur die gemaakt wordt in het document wordt opgeslagen.\nOpgelet: de figuren worden niet standaard opgeslagen.\nGlobale chunk opties zullen voor de rest van het documenten worden vastgezet. Als je wilt dat een bepaalde chunk afwijkt van de globale opties, maak dat aan het begin van die bepaalde chunk duidelijk."
  },
  {
    "objectID": "posts/Reproducable-research/index.html#figuren",
    "href": "posts/Reproducable-research/index.html#figuren",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Figuren",
    "text": "Figuren\nKnitr maakt vrij eenvoudig figuren. Als een analyse code binnen een chunk een bepaald figuur moet produceren, dan zal hij dat in het document afdrukken.\nEnkele knitr chunk opties gerelateerd aan figuren:\n\nfig.width en fig.height\n\nStandaard: fig.width = 7, fig.height = 7\n\n\nfig.align: Hoe het figuur uit te lijnen\n\nOpties omvatten: \"left\", \"right\" en \"center\"\n\n\nfig.path: Een file pad naar de directory waar knitr de grafische output moet opslaan die er met de chunk wordt gemaakt.\n\nStandaard: 'figure/'\n\n\nEr is zelfs een fig.retina(alleen voor HTML output) voor hogere figuur resoluties met retina afdrukken.\n\n\n\n\nEen enkelvoudig figuur maken:\nMet fig.align = \"center\"\n\nggplot(mtcars, aes(x = mpg)) + xlab(\"Miles per Gallon\") +\n    geom_histogram(bins = 30, fill = \"cornflowerblue\", color = \"black\") +\n    geom_vline(xintercept=mean(mtcars$mpg), col=\"red\") \n\n\n\n\n\n\n\n\nMet fig.align = \"right\"\n\nggplot(mtcars, aes(x = mpg)) + xlab(\"Miles per Gallon\") +\n    geom_histogram(bins = 30, fill = \"cornflowerblue\", color = \"black\") +\n    geom_vline(xintercept=mean(mtcars$mpg), col=\"red\") \n\n\n\n\n\n\n\n\nMet fig.align = \"left\"\n\nggplot(mtcars, aes(x = mpg)) + xlab(\"Miles per Gallon\") +\n    geom_histogram(bins = 30, fill = \"cornflowerblue\", color = \"black\") +\n    geom_vline(xintercept=mean(mtcars$mpg), col=\"red\") \n\n\n\n\n\n\n\n\nMet fig.width = 2, fig.height = 2\n\nggplot(mtcars, aes(x = mpg)) + xlab(\"Miles per Gallon\") +\n    geom_histogram(bins = 30, fill = \"cornflowerblue\", color = \"black\") +\n    geom_vline(xintercept=mean(mtcars$mpg), col=\"red\") \n\n\n\n\n\n\n\n\nMet fig.width = 10, fig.height = 10\n\nggplot(mtcars, aes(x = mpg)) + xlab(\"Miles per Gallon\") +\n    geom_histogram(bins = 30, fill = \"cornflowerblue\", color = \"black\") +\n    geom_vline(xintercept=mean(mtcars$mpg), col=\"red\") \n\n\n\n\n\n\n\n\n\nmyplots <- list()  # new empty list\nfor(i in 1:ncol(mtcars)){\n  col <- names(mtcars)[i]\n  ggp <- ggplot(mtcars, aes_string(x = col)) +\n    geom_histogram(bins = 30, fill = \"cornflowerblue\", color = \"black\") +\n    geom_vline(xintercept = mean(mtcars[[col]]), col = \"red\") \n  myplots[[i]] <- ggp  # add each plot into plot list\n}\nmultiplot(plotlist = myplots, cols = 4) # must load in multiplot function from the Rcookbook see http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#tabellen",
    "href": "posts/Reproducable-research/index.html#tabellen",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Tabellen",
    "text": "Tabellen\nTabellen kunnen in Markdown voor nogal wat hoofdpijn kosten. We gaan er hier verder niet op in. Als je meer wilt leren over Markdown-tabellen kijk naar documentation on tables op de RMarkdown website.\nEr zijn enkele tabeltypen die handig kunnen zijn. Hier zullen we ons vorig voorbeeld gebruiken van de mtcars data\nIn zijn Knitr in a Knutshell introduceert Dr. Karl Broman: kable, panderen xtable en vooral die eerste twee deden mij plezier:\n\nkable: Binnen het knitr pakket - niet veel opties maar het ziet er goed uit.\npander: Binnen het pander pakket - heeft veel opties en handigheden. Makkelijk voor het vetmaken van waarden (bv. waarden onder een bepaalde waarde).\n\nkable en pander tabellen zijn mooi en handig bij het maken van niet-interactieve tabellen:\n\nkable(head(mtcars, n = 4)) # kable table with 4 rows\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\n\n\n# Pander table\n# install.packages(\"pander\") # install pander first\nlibrary(pander)\npander(head(mtcars, n = 4))\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\n\n\n\n\nMazda RX4\n21\n6\n160\n110\n3.9\n2.62\n16.46\n0\n1\n\n\nMazda RX4 Wag\n21\n6\n160\n110\n3.9\n2.875\n17.02\n0\n1\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.32\n18.61\n1\n1\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n19.44\n1\n0\n\n\n\n\n\n\n\n\n\n\n\n \ngear\ncarb\n\n\n\n\nMazda RX4\n4\n4\n\n\nMazda RX4 Wag\n4\n4\n\n\nDatsun 710\n4\n1\n\n\nHornet 4 Drive\n3\n1"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#html-widgets",
    "href": "posts/Reproducable-research/index.html#html-widgets",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "HTML Widgets",
    "text": "HTML Widgets\nMet de uitgave van de nieuwe RMarkdown v2 is het makkelijker dan ooit tevoren om HTML Widgets te gebruiken. Volg de link om uit te zoeken in welke widgets jij ge?nteresseerd bent!\nOnlangs ontdekte ik bijvoorbeeld het DT pakket waarmee tabellen interactief kunnen worden gemaakt in de HTML output. Daarbij levert Plotly for R echt mooie interactieve grafieken op, welke gebaseerd zijn op Plotly.\nCool, of niet?\n\n# DT table = interactive\n# install.packages(\"DT\") # install DT first\nlibrary(DT)\ndatatable(head(mtcars, n = nrow(mtcars)), options = list(pageLength = 5)) \n\n\n\n\n# plotly\n# install.packages(\"plotly\")\n#library(plotly)\n#mtcars$car <- row.names(mtcars)\n#plot_ly(mtcars, x = wt, y = mpg, \n#        text = paste(\"Car: \", car),\n#       mode = \"markers\", color = wt, size = wt)"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#spelling-controleren",
    "href": "posts/Reproducable-research/index.html#spelling-controleren",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Spelling controleren",
    "text": "Spelling controleren\nIn de spelling kunnen natuurlijk altijd fouten zitten en daarom kan het nodig zijn dat we onze spelling in het document willen controleren. Er zijn twee manieren om de spelling te controleren:\n\nDruk op de “ABC check mark”  links van de vergrootglasknop in RStudio.\nGebruik de aspell() functie van het utils pakket. Je kunt dan echter beter de code chunks overslaan. De aspell() functie kan een filter functie overnemen om bepaalde regels in de files over te slaan en kan worden gebruikt met de knit_filter() die ontworpen is om de code chunks in een file over te slaan."
  },
  {
    "objectID": "posts/Reproducable-research/index.html#knitr-themas",
    "href": "posts/Reproducable-research/index.html#knitr-themas",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Knitr Thema’s",
    "text": "Knitr Thema’s\nHet knitr-syntax-thema kan worden aangepast of helemaal naar de hand worden gezet. Als je de standaardthema’s niet wilt, gebruik dan het knit_theme om het te veranderen. Er zijn 80 thema’s opgenomen binnen knitr en we kunnen de namen ervan zien door knit_theme$get().\nWat zijn de eerste 30 knitr thema’s?\n\nhead(knit_theme$get(), 30)\n\n [1] \"acid\"          \"aiseered\"      \"andes\"         \"anotherdark\"  \n [5] \"autumn\"        \"baycomb\"       \"bclear\"        \"biogoo\"       \n [9] \"bipolar\"       \"blacknblue\"    \"bluegreen\"     \"breeze\"       \n[13] \"bright\"        \"camo\"          \"candy\"         \"clarity\"      \n[17] \"dante\"         \"darkblue\"      \"darkbone\"      \"darkness\"     \n[21] \"darkslategray\" \"darkspectrum\"  \"default\"       \"denim\"        \n[25] \"dusk\"          \"earendel\"      \"easter\"        \"edit-anjuta\"  \n[29] \"edit-eclipse\"  \"edit-emacs\"   \n\n\nWij kunnen knit_theme$set() gebruiken om het thema vast te zetten. Om het thema op fruit vast te zetten, kunnen we de bijvoorbeeld de volgende code gebruiken:\n\nknit_theme$set(\"fruit\")\n\nHier is de link naar jouw favoriete thema 80 knitr highlight themes."
  },
  {
    "objectID": "posts/Reproducable-research/index.html#andere-programmeer-talen",
    "href": "posts/Reproducable-research/index.html#andere-programmeer-talen",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Andere programmeer talen",
    "text": "Andere programmeer talen\nTerwijl knitr binnen een R omgeving moet draaien, ondersteunt het ook andere programmeertalen waaronder:\n\nPython\n\nRuby\n\nHaskell\n\nawk/gawk\n\nsed\n\nshell scripts\n\nPerl\n\nSAS\n\nTikZ\n\nGraphviz\n\nC++\n\nEn andere talen…\n\nWe moeten echter het corresponderende software pakket installeren om een taal te gebruiken.\nGebruik de engine functie in Knitr. Deze functie laat de gebruiker de taal van een chunk specificeren.\n\nengine = \"bash\" zal de boel in bash laden and stelt de gebruiker in staat de scripts zo binnen de code chunk te schrijven ."
  },
  {
    "objectID": "posts/Reproducable-research/index.html#code-folding",
    "href": "posts/Reproducable-research/index.html#code-folding",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Code Folding",
    "text": "Code Folding\nZoals het je misschien is opgevallen heeft elk van de code chunks in dit document een interactieve  knop. Deze wordt gecontroleerd in de YAML kop and is nieuw in RMarkdown v2.\nWanneer de knitr code chunk optie echo = TRUE is gespecificeerd (default = TRUE) zal de R code in het output document verschijnen. Echter, er zijn momenten waarin de gebruiker de code helemaal niet wil laten zien (echo = FALSE).\n-code_folding:\n- code_folding: hide: Kan de R code meenemen maar deze is standaard verborgen.\n- code_folding: show: Laat de R code zien. De lezers kunnen dan op de  knop drukken om de chunk te verstoppen als ze dat willen.\noutput: html_document\n    code_folding: show"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#inhoudsopgave",
    "href": "posts/Reproducable-research/index.html#inhoudsopgave",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Inhoudsopgave",
    "text": "Inhoudsopgave\nEen inhoudsopgave kan aan het gerenderd document worden toegevoegd door de toc optie in de YAML kop te gebruiken.\nOpties hierbij:\n\ntoc: of de inhoudsopgave moeten worden meegenomen:\n\ntoc: true: hier wordt de inhoudsopgave meegenomen\n\nDefault:toc: false: Hier wordt de inhoudsopgave niet meegenomen\n\n\ntoc_depth:: Hoeveel niveau’s moeten in de inhoudsopgave worden worden meegenomen?\n\nDefault: doc_depth: 3 zal koppen tot en met ### meenemen.\n\n\nnumber_sections: Voegt sectienummers toe aan de koppen. Bijvoorbeeld, dit document heeft number_sections: true\n\nDefault: number_sections: false\n\nOpgelet: Met elk # zal er een decimaal punt worden toegevoegd aan alle koppen.\n\n\ntoc_float:\n\n2 andere mogelijke parameters binnen toc_float:\n\ncollapsed: Controleert of de inhoudsopgave alleen aan het begin verschijnt. Het zal met de cursor erover verschijnen.\n\nDefault: collapsed: TRUE\n\nsmooth_scroll: Controleert of de pagina scrolls werken wanneer op de onderdelen van de inhoudsopgave wordt geklikt.\n\nDefault: smooth_scroll: true\n\n\n\n\nBijvoorbeeld:\noutput:\n  html_document:\n    toc: true\n    toc_depth: 2\n---\n\nUitdaging: Maak de YAML kop voor een HTML document die het volgende inhoudt:\n\n\n\nInhoudsopgave\nLaat de inhoudsopgave vloeien\n\nSectie koppen met twee hashtags (##)\n\nGenummerde secties\n\nGeen makkelijke scrolling"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#themas",
    "href": "posts/Reproducable-research/index.html#themas",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Thema’s",
    "text": "Thema’s\nRMarkdown heeft verschillende opties die de pr?sance van de HTML documenten controleren. Enkele mogelijkheden waaruit kan worden gekozen, hier met de Engelse termen:\n\ntheme\n\nhighlight\n\nsmart\n\nDe HTML output thema’s komen van Bootswatch library. Valide HTML themes omvatten de volgende:\n\ncerulean, cosmo,flatly, journal, readable,spacelab en united.\n\nBijvoorbeeld, het thema van de pagina is readable.\n\nZet het op nul voor geen thema (in dit geval kun je de css parameter gebruiken om jouw eigen stijl te gebruiken).\n\nHighlight specificeert de wijze waarop de syntax stijl oplicht. Stijlen die mogelijk zijn omvatten de volgende:\n\ndefault, espresso, haddock, kate, monochrome, pygments, tango, textmate en zenburn.\n\nOok hier, plaats nul om syntax oplichting te voorkomen.\n\nSmart indiceert of de typografisch correcte output wordt weergegeven, zet rechte aanhalingstekens om in gekru, — rechte aanhalingstekens, – om in gekrulde aanhalingstekens en … in ellipsen. Smart is standaard ingesteld.\nBijvoorbeeld:\n---\noutput:\n  html_document:\n    theme: slate\n    highlight: tango\n---\nAls je wilt kun je ook jouw eigen stijl-thema produceren en gebruiken. Als je dat zou doen, zou de output sectie van jouw YAML kop er z’on beetje zo uitzien:\noutput:\n  html_document:\n    css: styles.css\nAls je nog wat verder wilt gaan en jouw eigen thema wilt schrijven in aanvulling op het oplichten, zou de YAML kop er beetje zo uitzien:\n---\noutput:\n  html_document:\n    theme: null\n    highlight: null\n    css: styles.css\n---\nHier is een link naar Pr?sance en Stijl in de HTML output."
  },
  {
    "objectID": "posts/Reproducable-research/index.html#chunk-afhankelijkheden",
    "href": "posts/Reproducable-research/index.html#chunk-afhankelijkheden",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Chunk afhankelijkheden",
    "text": "Chunk afhankelijkheden\n\nMet de hand\nWe kunnen met de hand specificeren of chunks van elkaar afhankelijk zijn.\n\ndependson specificeert van welke chunk de huidige chunk afhankelijk is.\n\nVoorbeelden hiervan:\n\ndepesndson = 1: Chunk vertrouwt op de eerste Chunk\n\ndependson = c(6,8): Chunk vertrouwt op de 6de en 8ste chunks\n\ndependson = -1: Chunk vertrouwt op de vorige chunk.\ndependson = c(-1, -2): Chunk vertrouwt op de twee vorige chunks.\n\nOpgelet: Als dependson een bepaalde waarde aanneemt, kan het niet afhankelijk zijn van een latere chunk - alleen van vorige chunks. Daarom is het makkelijk om chunks namen te geven.\n\n\nVoorbeelden:\n\ndependson = c(\"Chunk-1\", \"Chunk-2\", \"Chunk-3\")\n\ndependson = c(\"data-generation\", \"data-transforamtion\")\n\n\n\nAls resultaat, elke keer als de verborgen chunks \"Chunk-1\", \"Chunk-2\" en \"Chunk-3\" opnieuw worden opgebouwd, zal de huidige chunk zijn verborgenheid verliezen en zal het opnieuw worden gedraaid!\n\n\n\nAutomatisch\nVoeg in: autodep chunk optie en de functie dep_auto()\n\nautodep en dep_auto() staan er voor dat de objecten in de huidige chunk door vorige chunks zijn gemaakt. Dus de huidige chunk hangt af van de vorige chunk.\n\nVoor een meer conservatieve benadering voeg dep_prev() in.\n\ndep_prev staat er voor dat een gevouwen chunk afhangt van al zijn vorige chunks. Dus als vorige chunks zijn ververst, zullen ook alle latere chunks worden ververst.\n\nKnitr indentificeert alleen veranderingen in de opgevouwen chunks, niet in de niet opgevouwen chunks! Gelukkig geeft knitr een waarschuwing wanneer het een afhankelijkheid ziet met een niet opgevouwen chunk.\n\n\nCache met de hand laden\nStel dat je aan het eind van een document een z berekent, maar je wilt de z in een eerdere chunk gebruiken. Dit is onmogelijk omdat knitr het document op een liniarie manier samenvoegt en het geen objecten kan gebruiken die in de toekomst worden gemaakt.\nVoeg in: load_cache, die de chunk label zoekt in de ‘cache’ database\nload_cache(label, object, notfound = \"NOT AVAILABLE\", \n  path = opts_chunk$get(\"cache.path\"), lazy = TRUE)\nAls jij dan een z in een ‘’inline R expressie’ gebruikt, geeft het NOT AVAILABLE terug en omdat je hebt gespecificeerd notfound = \"NOT AVAILALBE\" zal het naar het einde teruggaan en de waarde z verplaatsen.\nZo handig!"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#zijeffecten",
    "href": "posts/Reproducable-research/index.html#zijeffecten",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Zijeffecten",
    "text": "Zijeffecten\nEen zijeffect refereert naar een statusverandering die optreedt buiten een functie die de teruggeven waarde niet representeert.\n\npar() en options() zijn zijeffecten in de betekenis dat ze niet opgevouwen zijn.\n\nStel globale opties van de eerste chunk in en vouw deze chunk nooit op.\n\nWe moeten voorzichtig zijn met de chunk opties om er zeker van te zijn dat de resultaten van de opgevouwen chunks worden ververst.\nWe kunnen ook het sloom-laden afzetten met cache.lazy = FALSE."
  },
  {
    "objectID": "posts/Reproducable-research/index.html#plaatsen",
    "href": "posts/Reproducable-research/index.html#plaatsen",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Plaatsen",
    "text": "Plaatsen\nDe bibliografie wordt automatisch aan het einde van het document geplaatst. Daarom moet je jouw .Rmd document met # Referenties eindigen zodat de bibliografie naar de kop voor bibliografie komt.\nlaatste woorden...\n\n# Referenties"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#stylen-van-citeren",
    "href": "posts/Reproducable-research/index.html#stylen-van-citeren",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Stylen van citeren",
    "text": "Stylen van citeren\nCitation Sylte Language (CSL) is een op XML-gebaseerde taal die het format van citaten en bibliografie?n vaststelt. Referentie management programma’s zoals Zotero, Mendeley en Papers gebruiken allemaal CSL.\nZoek jouw favcoriete tijdschrift en CSL in de Zotero Style Repository, waar nu meer dan 8,152 CSLs inzitten. Is er een stijl waar je naar zoekt en die er niet in zit?\noutput: html_document\nbibliography: bibliography.bib\ncsl: nature.csl\nIn de github repo voor deze workshop heb ik de nature.csl en the-isme-journal.csl toegevoegd om mee te spelen. Download anders een stijl van de Zotero Style Repository!"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#citaten",
    "href": "posts/Reproducable-research/index.html#citaten",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "Citaten",
    "text": "Citaten\nCitaten gaan tussen vierkante haakjes [ ] en worden afgescheiden door punt-komma’s’ ;. Elk citaat moet een sleutel hebben, samen de @ + de citaat identificatie van de database vormen en die optioneel a prefix, a locator en a suffix hebben. Om te controleren wat de citaatsleutel is van een referentie, werp dan een blik op de .bib file. Hier in die file, kun je de sleutel voor elke referentie veranderen. Echter, wees er wel van bewust dat elke ID uniek is!\nHier zijn wat voorbeelden met bijpassende code in het Engels:\n\nMicrobes control Earth’s biogeochemical cycles [@Falkowski2008].\n\nCode: Microbes contorl Earth's biogeochemical cycles  [@Falkowski2008].\n\n\nI love making beautiful plots with ggplot2 [@R-ggplot2]\n\nCode: I love making beautiful plots with ggplot2 [@R-ggplot2]\n\n\nDr. Yuhui Xie’s book about Dynamic Documents [@Xie2015] inspired me to host this workshop.\n\nCode: Dr. Yuhui Xie's book about Dynamic Documents [@Xie2015] inspired me to host this workshop.\n\n\nA great article in Science regarding biogeography of microbes asks readers to imagine their Alice in Wonderland to shrink down to understand the microbial world [@Green2008].\n\nCode: A great article in *Science* regarding biogeography of microbes asks readers to imagine they are Alice in Wonderland to and shrink down to understand the microbial world [@Green2008].\n\n\nHet is cool dat de enige refenties die aan het document worden toegevoegd degene zijn die jijzelf citeert!"
  },
  {
    "objectID": "posts/Reproducable-research/index.html#rpubs-vernieuwen",
    "href": "posts/Reproducable-research/index.html#rpubs-vernieuwen",
    "title": "Dynamische documenten maken met RMarkdown en knitr",
    "section": "RPubs vernieuwen",
    "text": "RPubs vernieuwen\nAls je veranderingen in het document wilt aanbrengen is het makkelijk om de webpagina te vernieuwen. Als je een keer jouw aangepaste documentg hebt gerenderd klik je op de  knop rechtsboven in de hoek van de preview scherm. Het aangepaste document zal dezelfde URL hebben als het orginele document."
  },
  {
    "objectID": "posts/Rstudiormarkdown/index.html",
    "href": "posts/Rstudiormarkdown/index.html",
    "title": "RMarkdown",
    "section": "",
    "text": "Dat boekje vind je hier. http://www.harriejonkman.nl/wp-content/uploads/2018/01/rbasics.pdf"
  },
  {
    "objectID": "posts/Psm/index.html#impactevaluatie",
    "href": "posts/Psm/index.html#impactevaluatie",
    "title": "Propensity Score Matching",
    "section": "Impactevaluatie",
    "text": "Impactevaluatie\nOm precies het effect van een aanpak of politieke keuze vast te stellen is een ingewikkelde kwestie. Toch is er dat soort onderzoek nodig om de keuze voor programma’s te legitimeren. Tegenwoordig is er een heel spectrum van technieken om de impact van programma’s vast te stellen. Dit zijn technieken die kunnen worden gebruikt binnen hele verschillende soorten impactstudies. Het is goed daar kennis van te nemen, zeker nu steeds meer mogelijk is omdat er meer data beschikbaar zijn waarop deze evaluaties gebaseerd kunnen worden. Impactstudies worden uitgevoerd om vast te stellen of programma’s de effecten opleveren die ze nastreven, om te begrijpen of en waarom deze programma’s werken, om vast te stellen in hoeverre veranderingen zijn toe te schrijven aan de inzet van het programma en ook om vast te stellen of de gelden op een goede manier worden besteed. Op dit terrein is er natuurlijk een enorme hoeveelheid literatuur en enkele uitgaven geven ons hiervan een goed en up-to-date overzicht1. Experimentele studies kunnen natuurlijk goede impactstudies zijn, met sterke punten en beperkingen. Maar er zijn ook aanvullende methodes die in quasi-experimentele of observationele studies kunnen worden toegepast. Zo zijn er panel datamethodes die gebruikt kunnen worden, regressie discontinu?teit methodes en instrumentele variabelen methodes. Daarnaast zijn er verschillende matchingsmethodes die in impactstudies worden gebruikt. Hier stellen we zo’n matchingsmethode voor die goed gebruikt kan worden in verschillende soorten impactstudies en laten we zien hoe deze uitgevoerd kan worden."
  },
  {
    "objectID": "posts/Sem/index.html",
    "href": "posts/Sem/index.html",
    "title": "SEM",
    "section": "",
    "text": "De presentatie vind je hier"
  }
]